{"ast":null,"code":"import _typeof2 from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/typeof\";\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { iconList, iconGrid } from 'carbon-icons';\nimport Icon from '../Icon';\n/**\n * The layout button for `<Search>`.\n */\n\nvar SearchLayoutButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchLayoutButton, _Component);\n\n  function SearchLayoutButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchLayoutButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchLayoutButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      format: 'list'\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"toggleLayout\", function () {\n      var format = _this.state.format === 'list' ? 'grid' : 'list';\n\n      _this.setState({\n        format: format\n      }, function () {\n        var onChangeFormat = _this.props.onChangeFormat;\n\n        if (typeof onChangeFormat === 'function') {\n          onChangeFormat({\n            format: format\n          });\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(SearchLayoutButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          labelText = _this$props.labelText,\n          iconDescriptionList = _this$props.iconDescriptionList,\n          iconDescriptionGrid = _this$props.iconDescriptionGrid;\n      return React.createElement(\"button\", {\n        className: \"bx--search-button\",\n        type: \"button\",\n        onClick: this.toggleLayout,\n        \"aria-label\": labelText\n      }, this.state.format === 'list' ? React.createElement(\"div\", {\n        className: \"bx--search__toggle-layout__container\"\n      }, React.createElement(Icon, {\n        icon: iconList,\n        description: iconDescriptionList,\n        className: \"bx--search-view\"\n      })) : React.createElement(\"div\", {\n        className: \"bx--search__toggle-layout__container\"\n      }, React.createElement(Icon, {\n        icon: iconGrid,\n        description: iconDescriptionGrid,\n        className: \"bx--search-view\"\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_ref, state) {\n      var format = _ref.format;\n      var prevFormat = state.prevFormat;\n      return prevFormat === format ? null : {\n        format: format || 'list',\n        prevFormat: format\n      };\n    }\n    /**\n     * Toggles the button state upon user-initiated event.\n     */\n\n  }]);\n\n  return SearchLayoutButton;\n}(Component);\n\n_defineProperty(SearchLayoutButton, \"propTypes\", {\n  /**\n   * The layout.\n   */\n  format: PropTypes.oneOf(['list', 'grid']),\n\n  /**\n   * The a11y label text.\n   */\n  labelText: PropTypes.string,\n\n  /**\n   * The description for the \"list\" icon.\n   */\n  iconDescriptionList: PropTypes.string,\n\n  /**\n   * The description for the \"grid\" icon.\n   */\n  iconDescriptionGrid: PropTypes.string,\n\n  /**\n   * The callback called when layout switches.\n   */\n  onChangeFormat: PropTypes.func\n});\n\n_defineProperty(SearchLayoutButton, \"defaultProps\", {\n  labelText: 'Filter',\n  iconDescriptionList: 'list',\n  iconDescriptionGrid: 'grid'\n});\n\nexport default SearchLayoutButton;","map":null,"metadata":{},"sourceType":"module"}