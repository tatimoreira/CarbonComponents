{"ast":null,"code":"function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Icon from '../Icon';\nimport isRequiredOneOf from '../../prop-types/isRequiredOneOf';\n\nvar TableToolbarAction = function TableToolbarAction(_ref) {\n  var className = _ref.className,\n      icon = _ref.icon,\n      iconName = _ref.iconName,\n      iconDescription = _ref.iconDescription,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"icon\", \"iconName\", \"iconDescription\"]);\n\n  var toolbarActionClasses = cx(className, 'bx--toolbar-action');\n  return React.createElement(\"button\", _extends({\n    className: toolbarActionClasses\n  }, rest), React.createElement(Icon, {\n    className: \"bx--toolbar-action__icon\",\n    icon: icon,\n    name: iconName,\n    description: iconDescription\n  }));\n};\n\nTableToolbarAction.propTypes = _objectSpread({\n  children: PropTypes.node,\n  className: PropTypes.string\n}, isRequiredOneOf({\n  /**\n   * Specify the icon for the toolbar action\n   */\n  icon: PropTypes.shape({\n    width: PropTypes.string,\n    height: PropTypes.string,\n    viewBox: PropTypes.string.isRequired,\n    svgData: PropTypes.object.isRequired\n  }),\n\n  /**\n   * Specify the name of the icon for the toolbar action\n   */\n  iconName: PropTypes.string\n}), {\n  /**\n   * Specify the description of the icon for the toolbar action\n   */\n  iconDescription: PropTypes.string.isRequired\n});\nexport default TableToolbarAction;","map":null,"metadata":{},"sourceType":"module"}