{"ast":null,"code":"import { initialSortState, getSortedState } from './sorting';\nimport normalize from '../tools/normalize';\n/**\n * Helper to derive the next state from the given props and the\n * prevState. Potential future-facing API hook for React v17.\n *\n * Currently, it's being used as a way to normalize the incoming data that we\n * are receiving for rows\n */\n\nvar getDerivedStateFromProps = function getDerivedStateFromProps(props, prevState) {\n  var _normalize = normalize(props.rows, props.headers, prevState),\n      rowIds = _normalize.rowIds,\n      rowsById = _normalize.rowsById,\n      cellsById = _normalize.cellsById;\n\n  var state = {\n    rowIds: rowIds,\n    rowsById: rowsById,\n    cellsById: cellsById,\n    sortDirection: prevState.sortDirection || initialSortState,\n    sortHeaderKey: prevState.sortHeaderKey || null,\n    // Copy over rowIds so the reference doesn't mutate the stored\n    // `initialRowOrder`\n    initialRowOrder: rowIds.slice(),\n    filterInputValue: prevState.filterInputValue || null,\n    // Optional state field to indicate whether a consumer should show a\n    // batch actions menu\n    shouldShowBatchActions: prevState.shouldShowBatchActions || false\n  };\n\n  if (prevState.sortDirection && prevState.sortHeaderKey) {\n    var _getSortedState = getSortedState(props, state, prevState.sortHeaderKey, prevState.sortDirection),\n        _rowIds = _getSortedState.rowIds;\n\n    state.rowIds = _rowIds;\n  }\n\n  return state;\n};\n\nexport default getDerivedStateFromProps;","map":null,"metadata":{},"sourceType":"module"}