{"ast":null,"code":"import _typeof2 from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/typeof\";\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { iconCheckmarkSolid, iconChevronDown } from 'carbon-icons';\nimport Icon from '../Icon';\nexport var Tile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Tile, _Component);\n\n  function Tile() {\n    _classCallCheck(this, Tile);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Tile).apply(this, arguments));\n  }\n\n  _createClass(Tile, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          other = _objectWithoutProperties(_this$props, [\"children\", \"className\"]);\n\n      var tileClasses = classNames('bx--tile', className);\n      return React.createElement(\"div\", _extends({\n        className: tileClasses\n      }, other), children);\n    }\n  }]);\n\n  return Tile;\n}(Component);\n\n_defineProperty(Tile, \"propTypes\", {\n  children: PropTypes.node,\n  className: PropTypes.string\n});\n\nexport var ClickableTile =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(ClickableTile, _Component2);\n\n  function ClickableTile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ClickableTile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ClickableTile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {});\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (evt) {\n      _this.setState({\n        clicked: !_this.state.clicked\n      }, function () {\n        _this.props.handleClick(evt);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleKeyDown\", function (evt) {\n      if (evt.which === 13 || evt.which === 32) {\n        _this.setState({\n          clicked: !_this.state.clicked\n        }, function () {\n          _this.props.handleKeyDown(evt);\n        });\n      } else {\n        _this.props.handleKeyDown(evt);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(ClickableTile, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          href = _this$props2.href,\n          className = _this$props2.className,\n          handleClick = _this$props2.handleClick,\n          handleKeyDown = _this$props2.handleKeyDown,\n          clicked = _this$props2.clicked,\n          other = _objectWithoutProperties(_this$props2, [\"children\", \"href\", \"className\", \"handleClick\", \"handleKeyDown\", \"clicked\"]);\n\n      var classes = classNames('bx--tile', 'bx--tile--clickable', {\n        'bx--tile--is-clicked': this.state.clicked\n      }, className);\n      return React.createElement(\"a\", _extends({\n        href: href,\n        className: classes\n      }, other, {\n        onClick: this.handleClick,\n        onKeyDown: this.handleKeyDown\n      }), children);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_ref, state) {\n      var clicked = _ref.clicked;\n      var prevClicked = state.prevClicked;\n      return prevClicked === clicked ? null : {\n        clicked: clicked,\n        prevClicked: clicked\n      };\n    }\n  }]);\n\n  return ClickableTile;\n}(Component);\n\n_defineProperty(ClickableTile, \"propTypes\", {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The href for the link.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The rel property for the link.\n   */\n  rel: PropTypes.string\n});\n\n_defineProperty(ClickableTile, \"defaultProps\", {\n  clicked: false,\n  handleClick: function handleClick() {},\n  handleKeyDown: function handleKeyDown() {}\n});\n\nexport var SelectableTile =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(SelectableTile, _Component3);\n\n  function SelectableTile() {\n    var _getPrototypeOf3;\n\n    var _this2;\n\n    _classCallCheck(this, SelectableTile);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(SelectableTile)).call.apply(_getPrototypeOf3, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this2)), \"state\", {\n      selected: _this2.props.selected\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this2)), \"handleClick\", function (evt) {\n      evt.preventDefault();\n      var isInput = evt.target === _this2.input;\n\n      if (!isInput) {\n        _this2.setState({\n          selected: !_this2.state.selected\n        }, function () {\n          _this2.props.handleClick(evt);\n        });\n      } else {\n        _this2.props.handleClick(evt);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this2)), \"handleKeyDown\", function (evt) {\n      evt.preventDefault();\n\n      if (evt.which === 13 || evt.which === 32) {\n        _this2.setState({\n          selected: !_this2.state.selected\n        }, function () {\n          _this2.props.handleKeyDown(evt);\n        });\n      } else {\n        _this2.props.handleKeyDown(evt);\n      }\n    });\n\n    return _this2;\n  }\n\n  _createClass(SelectableTile, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          id = _this$props3.id,\n          tabIndex = _this$props3.tabIndex,\n          value = _this$props3.value,\n          name = _this$props3.name,\n          title = _this$props3.title,\n          iconDescription = _this$props3.iconDescription,\n          className = _this$props3.className,\n          handleClick = _this$props3.handleClick,\n          handleKeyDown = _this$props3.handleKeyDown,\n          other = _objectWithoutProperties(_this$props3, [\"children\", \"id\", \"tabIndex\", \"value\", \"name\", \"title\", \"iconDescription\", \"className\", \"handleClick\", \"handleKeyDown\"]);\n\n      var classes = classNames('bx--tile', 'bx--tile--selectable', className);\n      return (// eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n        React.createElement(\"label\", _extends({\n          htmlFor: id,\n          className: classes,\n          tabIndex: tabIndex\n        }, other, {\n          onClick: this.handleClick,\n          onKeyDown: this.handleKeyDown\n        }), React.createElement(\"input\", {\n          ref: function ref(input) {\n            _this3.input = input;\n          },\n          tabIndex: -1,\n          id: id,\n          className: \"bx--tile-input\",\n          value: value,\n          type: \"checkbox\",\n          name: name,\n          title: title,\n          checked: this.state.selected\n        }), React.createElement(\"div\", {\n          className: \"bx--tile__checkmark\"\n        }, React.createElement(Icon, {\n          icon: iconCheckmarkSolid,\n          description: iconDescription\n        })), React.createElement(\"div\", {\n          className: \"bx--tile-content\"\n        }, children))\n      );\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_ref2, state) {\n      var selected = _ref2.selected;\n      var prevSelected = state.prevSelected;\n      return prevSelected === selected ? null : {\n        selected: selected,\n        prevSelected: selected\n      };\n    }\n  }]);\n\n  return SelectableTile;\n}(Component);\n\n_defineProperty(SelectableTile, \"propTypes\", {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n\n  /**\n   * `true` to select this tile.\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The ID of the `<input>`.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The value of the `<input>`.\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n\n  /**\n   * The `name` of the `<input>`.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The `title` of the `<input>`.\n   */\n  title: PropTypes.string,\n\n  /**\n   * The description of the checkmark icon.\n   */\n  iconDescription: PropTypes.string\n});\n\n_defineProperty(SelectableTile, \"defaultProps\", {\n  value: 'value',\n  title: 'title',\n  iconDescription: 'Tile checkmark',\n  selected: false,\n  handleClick: function handleClick() {},\n  handleKeyDown: function handleKeyDown() {}\n});\n\nexport var ExpandableTile =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(ExpandableTile, _Component4);\n\n  function ExpandableTile() {\n    var _getPrototypeOf4;\n\n    var _this4;\n\n    _classCallCheck(this, ExpandableTile);\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    _this4 = _possibleConstructorReturn(this, (_getPrototypeOf4 = _getPrototypeOf(ExpandableTile)).call.apply(_getPrototypeOf4, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this4)), \"state\", {});\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this4)), \"componentDidMount\", function () {\n      if (_this4.refs[0]) {\n        _this4.aboveTheFold = ReactDOM.findDOMNode(_this4.refs[0]); // eslint-disable-line\n      }\n\n      var getStyle = window.getComputedStyle(_this4.tile, null);\n\n      _this4.setState({\n        tileMaxHeight: _this4.aboveTheFold.getBoundingClientRect().height,\n        tilePadding: parseInt(getStyle.getPropertyValue('padding-top'), 10) + parseInt(getStyle.getPropertyValue('padding-bottom'), 10)\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this4)), \"componentDidUpdate\", function (prevProps) {\n      if (prevProps.expanded !== _this4.props.expanded) _this4.setMaxHeight();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this4)), \"setMaxHeight\", function () {\n      return _this4.setState({\n        tileMaxHeight: _this4.state.expanded ? _this4.tileContent.getBoundingClientRect().height : _this4.aboveTheFold.getBoundingClientRect().height\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this4)), \"handleClick\", function (evt) {\n      _this4.setState({\n        expanded: !_this4.state.expanded\n      }, function () {\n        _this4.setMaxHeight();\n\n        _this4.props.handleClick(evt);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this4)), \"getChildren\", function () {\n      return React.Children.map(_this4.props.children, function (child) {\n        return child;\n      });\n    });\n\n    return _this4;\n  }\n\n  _createClass(ExpandableTile, [{\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$props4 = this.props,\n          tabIndex = _this$props4.tabIndex,\n          className = _this$props4.className,\n          tileMaxHeight = _this$props4.tileMaxHeight,\n          tilePadding = _this$props4.tilePadding,\n          handleClick = _this$props4.handleClick,\n          expanded = _this$props4.expanded,\n          tileCollapsedIconText = _this$props4.tileCollapsedIconText,\n          tileExpandedIconText = _this$props4.tileExpandedIconText,\n          other = _objectWithoutProperties(_this$props4, [\"tabIndex\", \"className\", \"tileMaxHeight\", \"tilePadding\", \"handleClick\", \"expanded\", \"tileCollapsedIconText\", \"tileExpandedIconText\"]);\n\n      var classes = classNames('bx--tile', 'bx--tile--expandable', {\n        'bx--tile--is-expanded': this.state.expanded\n      }, className);\n      var tileStyle = {\n        maxHeight: this.state.tileMaxHeight + this.state.tilePadding\n      };\n      var content = this.getChildren().map(function (child, index) {\n        return React.cloneElement(child, {\n          ref: index\n        });\n      });\n      return (// eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n        React.createElement(\"div\", _extends({\n          ref: function ref(tile) {\n            _this5.tile = tile;\n          },\n          style: tileStyle,\n          className: classes\n        }, other, {\n          role: \"button\",\n          onClick: this.handleClick,\n          tabIndex: tabIndex\n        }), React.createElement(\"button\", {\n          className: \"bx--tile__chevron\"\n        }, React.createElement(Icon, {\n          icon: iconChevronDown,\n          description: this.state.expanded ? tileExpandedIconText : tileCollapsedIconText\n        })), React.createElement(\"div\", {\n          ref: function ref(tileContent) {\n            _this5.tileContent = tileContent;\n          },\n          className: \"bx--tile-content\"\n        }, content))\n      );\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_ref3, state) {\n      var expanded = _ref3.expanded,\n          tileMaxHeight = _ref3.tileMaxHeight,\n          tilePadding = _ref3.tilePadding;\n      var prevExpanded = state.prevExpanded,\n          prevTileMaxHeight = state.prevTileMaxHeight,\n          prevTilePadding = state.prevTilePadding,\n          currentExpanded = state.expanded,\n          currentTileMaxHeight = state.tileMaxHeight,\n          currentTilePadding = state.tilePadding;\n      var expandedChanged = prevExpanded !== expanded;\n      var tileMaxHeightChanged = prevTileMaxHeight !== tileMaxHeight;\n      var tilePaddingChanged = prevTilePadding !== tilePadding;\n      return !expandedChanged && !tileMaxHeightChanged && !tilePaddingChanged ? null : {\n        expanded: !expandedChanged ? currentExpanded : expanded,\n        tileMaxHeight: !tileMaxHeightChanged ? currentTileMaxHeight : tileMaxHeight,\n        tilePadding: !tilePaddingChanged ? currentTilePadding : tilePadding,\n        prevExpanded: expanded,\n        prevTileMaxHeight: tileMaxHeight,\n        prevTilePadding: tilePadding\n      };\n    }\n  }]);\n\n  return ExpandableTile;\n}(Component);\n\n_defineProperty(ExpandableTile, \"propTypes\", {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  expanded: PropTypes.bool,\n  tabIndex: PropTypes.number,\n  tileCollapsedIconText: PropTypes.string,\n  tileExpandedIconText: PropTypes.string\n});\n\n_defineProperty(ExpandableTile, \"defaultProps\", {\n  tabIndex: 0,\n  expanded: false,\n  tileMaxHeight: '0',\n  handleClick: function handleClick() {},\n  tileCollapsedIconText: 'Expand',\n  tileExpandedIconText: 'Collapse'\n});\n\nexport var TileAboveTheFoldContent =\n/*#__PURE__*/\nfunction (_Component5) {\n  _inherits(TileAboveTheFoldContent, _Component5);\n\n  function TileAboveTheFoldContent() {\n    _classCallCheck(this, TileAboveTheFoldContent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TileAboveTheFoldContent).apply(this, arguments));\n  }\n\n  _createClass(TileAboveTheFoldContent, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return React.createElement(\"span\", {\n        className: \"bx--tile-content__above-the-fold\"\n      }, children);\n    }\n  }]);\n\n  return TileAboveTheFoldContent;\n}(Component);\n\n_defineProperty(TileAboveTheFoldContent, \"propTypes\", {\n  children: PropTypes.node\n});\n\nexport var TileBelowTheFoldContent =\n/*#__PURE__*/\nfunction (_Component6) {\n  _inherits(TileBelowTheFoldContent, _Component6);\n\n  function TileBelowTheFoldContent() {\n    _classCallCheck(this, TileBelowTheFoldContent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TileBelowTheFoldContent).apply(this, arguments));\n  }\n\n  _createClass(TileBelowTheFoldContent, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return React.createElement(\"span\", {\n        className: \"bx--tile-content__below-the-fold\"\n      }, children);\n    }\n  }]);\n\n  return TileBelowTheFoldContent;\n}(Component);\n\n_defineProperty(TileBelowTheFoldContent, \"propTypes\", {\n  children: PropTypes.node\n});","map":null,"metadata":{},"sourceType":"module"}