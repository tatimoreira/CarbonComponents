{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { iconCaretUp } from 'carbon-icons';\nimport Icon from '../Icon';\nimport { sortStates } from './state/sorting';\nvar translationKeys = {\n  iconDescription: 'carbon.table.header.icon.description'\n};\n\nvar translateWithId = function translateWithId(key, _ref) {\n  var sortDirection = _ref.sortDirection,\n      isSortHeader = _ref.isSortHeader,\n      sortStates = _ref.sortStates;\n\n  if (key === translationKeys.iconDescription) {\n    if (isSortHeader) {\n      var order = sortDirection === sortStates.DESC ? 'descending' : 'ascending';\n      return \"Sort rows by this header in \".concat(order, \" order\");\n    }\n\n    return \"Sort rows by this header in descending order\";\n  }\n\n  return '';\n};\n\nvar TableHeader = function TableHeader(_ref2) {\n  var headerClassName = _ref2.className,\n      children = _ref2.children,\n      isSortable = _ref2.isSortable,\n      isSortHeader = _ref2.isSortHeader,\n      onClick = _ref2.onClick,\n      scope = _ref2.scope,\n      sortDirection = _ref2.sortDirection,\n      t = _ref2.translateWithId,\n      rest = _objectWithoutProperties(_ref2, [\"className\", \"children\", \"isSortable\", \"isSortHeader\", \"onClick\", \"scope\", \"sortDirection\", \"translateWithId\"]);\n\n  if (!isSortable) {\n    return React.createElement(\"th\", _extends({}, rest, {\n      className: headerClassName,\n      scope: scope\n    }), children);\n  }\n\n  var className = cx(headerClassName, {\n    'bx--table-sort-v2': true,\n    'bx--table-sort-v2--active': isSortHeader && sortDirection !== sortStates.NONE,\n    'bx--table-sort-v2--ascending': isSortHeader && sortDirection === sortStates.ASC\n  });\n  return React.createElement(\"th\", {\n    scope: scope,\n    className: headerClassName\n  }, React.createElement(\"button\", _extends({\n    className: className,\n    onClick: onClick\n  }, rest), React.createElement(\"span\", {\n    className: \"bx--table-header-label\"\n  }, children), React.createElement(Icon, {\n    className: \"bx--table-sort-v2__icon\",\n    icon: iconCaretUp,\n    description: t('carbon.table.header.icon.description', {\n      header: children,\n      sortDirection: sortDirection,\n      isSortHeader: isSortHeader,\n      sortStates: sortStates\n    })\n  })));\n};\n\nTableHeader.propTypes = {\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Pass in children that will be embedded in the table header label\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify whether this header is one through which a user can sort the table\n   */\n  isSortable: PropTypes.bool,\n\n  /**\n   * Specify whether this header is the header by which a table is being sorted\n   * by\n   */\n  isSortHeader: PropTypes.bool,\n\n  /**\n   * Hook that is invoked when the header is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Specify the scope of this table header. You can find more info about this\n   * attribute at the following URL:\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th#attr-scope\n   */\n  scope: PropTypes.string.isRequired,\n\n  /**\n   * Specify which direction we are currently sorting by, should be one of DESC,\n   * NONE, or ASC.\n   */\n  sortDirection: PropTypes.oneOf(Object.values(sortStates)),\n\n  /**\n   * Supply a method to translate internal strings with your i18n tool of\n   * choice. Translation keys are avabile on the `translationKeys` field for\n   * this component.\n   */\n  translateWithId: PropTypes.func\n};\nTableHeader.defaultProps = {\n  isSortable: false,\n  scope: 'col',\n  translateWithId: translateWithId\n};\nTableHeader.translationKeys = Object.values(translationKeys);\nexport default TableHeader;","map":null,"metadata":{},"sourceType":"module"}