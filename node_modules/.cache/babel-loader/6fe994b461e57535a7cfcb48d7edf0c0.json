{"ast":null,"code":"import _typeof2 from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/typeof\";\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { iconSearch } from 'carbon-icons';\nimport Icon from '../Icon';\nimport ClickListener from '../../internal/ClickListener';\n\nvar ToolbarSearch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ToolbarSearch, _Component);\n\n  function ToolbarSearch() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ToolbarSearch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ToolbarSearch)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      expanded: false\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"expandSearch\", function () {\n      _this.setState({\n        expanded: !_this.state.expanded\n      });\n\n      _this.input.focus();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClickOutside\", function () {\n      _this.setState({\n        expanded: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ToolbarSearch, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          type = _this$props.type,\n          id = _this$props.id,\n          iconDescription = _this$props.iconDescription,\n          placeHolderText = _this$props.placeHolderText,\n          labelText = _this$props.labelText,\n          role = _this$props.role,\n          other = _objectWithoutProperties(_this$props, [\"className\", \"type\", \"id\", \"iconDescription\", \"placeHolderText\", \"labelText\", \"role\"]);\n\n      var searchClasses = classNames(_defineProperty({\n        'bx--search bx--search--sm bx--toolbar-search': true,\n        'bx--toolbar-search--active': this.state.expanded\n      }, className, className));\n      return React.createElement(ClickListener, {\n        onClickOutside: this.handleClickOutside\n      }, React.createElement(\"div\", {\n        className: searchClasses,\n        role: role\n      }, React.createElement(\"label\", {\n        htmlFor: id,\n        className: \"bx--label\"\n      }, labelText), React.createElement(\"input\", _extends({}, other, {\n        type: type,\n        className: \"bx--search-input\",\n        id: id,\n        placeholder: placeHolderText,\n        ref: function ref(input) {\n          _this2.input = input;\n        }\n      })), React.createElement(\"button\", {\n        className: \"bx--toolbar-search__btn\",\n        onClick: this.expandSearch\n      }, React.createElement(Icon, {\n        icon: iconSearch,\n        description: iconDescription,\n        className: \"bx--search-magnifier\"\n      }))));\n    }\n  }]);\n\n  return ToolbarSearch;\n}(Component);\n\n_defineProperty(ToolbarSearch, \"propTypes\", {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The `type` of the `<input>`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * `true` to use the small version of the UI.\n   */\n  small: PropTypes.bool,\n\n  /**\n   * The description of the search icon.\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * The placeholder text of the `<input>`.\n   */\n  placeHolderText: PropTypes.string,\n\n  /**\n   * The text in the `<label>`.\n   */\n  labelText: PropTypes.node,\n\n  /**\n   * The ID of the `<input>`.\n   */\n  id: PropTypes.string\n});\n\n_defineProperty(ToolbarSearch, \"defaultProps\", {\n  type: 'search',\n  id: 'search__input',\n  labelText: '',\n  iconDescription: 'search',\n  placeHolderText: '',\n  role: 'search'\n});\n\nexport { ToolbarSearch as default };","map":null,"metadata":{},"sourceType":"module"}