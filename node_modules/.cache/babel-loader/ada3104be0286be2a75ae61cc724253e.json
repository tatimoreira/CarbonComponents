{"ast":null,"code":"import _typeof2 from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/typeof\";\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\nimport debounce from 'lodash.debounce';\nimport warning from 'warning';\nimport { iconChevronLeft, iconChevronRight } from 'carbon-icons';\nimport Icon from '../Icon';\nimport Select from '../Select';\nimport SelectItem from '../SelectItem';\nimport TextInput from '../TextInput';\nimport { equals } from '../../tools/array';\nvar didWarnAboutDeprecation = false;\n\nvar Pagination =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Pagination, _Component);\n\n  function Pagination(props) {\n    var _this;\n\n    _classCallCheck(this, Pagination);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pagination).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      page: _this.props.page,\n      pageSize: _this.props.pageSize && _this.props.pageSizes.includes(_this.props.pageSize) ? _this.props.pageSize : _this.props.pageSizes[0]\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleSizeChange\", function (evt) {\n      var pageSize = Number(evt.target.value);\n\n      _this.setState({\n        pageSize: pageSize,\n        page: 1\n      });\n\n      _this.props.onChange({\n        page: 1,\n        pageSize: pageSize\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handlePageInputChange\", function (evt) {\n      var page = Number(evt.target.value);\n\n      if ( // Added props for defaultPageText and defaultItemText to be\n      // used for case when page # is 0 or empty. For other cases\n      // existing props will be used.\n      page >= 0 && page <= Math.max(Math.ceil(_this.props.totalItems / _this.state.pageSize), 1)) {\n        _this.setState({\n          page: page\n        }, function () {\n          return _this.pageInputDebouncer(_this.state.page);\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"incrementPage\", function () {\n      var page = _this.state.page + 1;\n\n      _this.setState({\n        page: page\n      });\n\n      _this.props.onChange({\n        page: page,\n        pageSize: _this.state.pageSize\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"decrementPage\", function () {\n      var page = _this.state.page - 1;\n\n      _this.setState({\n        page: page\n      });\n\n      _this.props.onChange({\n        page: page,\n        pageSize: _this.state.pageSize\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getItemsText\", function () {\n      var _this$props = _this.props,\n          pagesUnknown = _this$props.pagesUnknown,\n          totalItems = _this$props.totalItems,\n          itemRangeText = _this$props.itemRangeText,\n          itemText = _this$props.itemText,\n          defaultItemText = _this$props.defaultItemText;\n      var _this$state = _this.state,\n          pageSize = _this$state.pageSize,\n          page = _this$state.page;\n\n      if (pagesUnknown) {\n        return itemText(pageSize * (page - 1) + 1, page * pageSize);\n      } else if (page > 0) {\n        return itemRangeText(Math.min(pageSize * (page - 1) + 1, totalItems), Math.min(page * pageSize, totalItems), totalItems);\n      }\n\n      return defaultItemText(totalItems);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getPagesText\", function () {\n      var _this$props2 = _this.props,\n          pagesUnknown = _this$props2.pagesUnknown,\n          totalItems = _this$props2.totalItems,\n          pageRangeText = _this$props2.pageRangeText,\n          pageText = _this$props2.pageText,\n          defaultPageText = _this$props2.defaultPageText;\n      var _this$state2 = _this.state,\n          pageSize = _this$state2.pageSize,\n          page = _this$state2.page;\n\n      if (pagesUnknown) {\n        return pageText(page);\n      } else if (page > 0) {\n        return pageRangeText(page, Math.max(Math.ceil(totalItems / pageSize), 1));\n      }\n\n      return defaultPageText(Math.ceil(totalItems / pageSize));\n    });\n\n    if (process.env.NODE_ENV !== \"production\") {\n      process.env.NODE_ENV !== \"production\" ? warning(didWarnAboutDeprecation, 'The `Pagination` component is being updated in the next release of ' + '`carbon-components-react`. Please use `PaginationV2` instead.') : void 0;\n      didWarnAboutDeprecation = true;\n    }\n\n    return _this;\n  }\n\n  _createClass(Pagination, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      this.uniqueId = \"\".concat(Math.floor(Math.random() * 0xffff));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.pageInputDebouncer = debounce(function (page) {\n        return page > 0 && _this2.props.onChange({\n          page: page,\n          pageSize: _this2.state.pageSize\n        });\n      }, this.props.onChangeInterval);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.pageInputDebouncer.cancel();\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(_ref) {\n      var pageSizes = _ref.pageSizes,\n          page = _ref.page,\n          pageSize = _ref.pageSize;\n\n      if (!equals(pageSizes, this.props.pageSizes)) {\n        this.setState({\n          pageSize: pageSizes[0],\n          page: 1\n        });\n      }\n\n      if (page !== this.props.page) {\n        this.setState({\n          page: page\n        });\n      }\n\n      if (pageSize !== this.props.pageSize) {\n        this.setState({\n          pageSize: pageSize\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          backwardText = _this$props3.backwardText,\n          className = _this$props3.className,\n          defaultItemText = _this$props3.defaultItemText,\n          defaultPageText = _this$props3.defaultPageText,\n          forwardText = _this$props3.forwardText,\n          id = _this$props3.id,\n          itemsPerPageText = _this$props3.itemsPerPageText,\n          itemRangeText = _this$props3.itemRangeText,\n          pageNumberText = _this$props3.pageNumberText,\n          pageRangeText = _this$props3.pageRangeText,\n          pageSize = _this$props3.pageSize,\n          pageSizes = _this$props3.pageSizes,\n          itemText = _this$props3.itemText,\n          pageText = _this$props3.pageText,\n          pagesUnknown = _this$props3.pagesUnknown,\n          isLastPage = _this$props3.isLastPage,\n          pageInputDisabled = _this$props3.pageInputDisabled,\n          totalItems = _this$props3.totalItems,\n          onChange = _this$props3.onChange,\n          onChangeInterval = _this$props3.onChangeInterval,\n          pageNumber = _this$props3.page,\n          other = _objectWithoutProperties(_this$props3, [\"backwardText\", \"className\", \"defaultItemText\", \"defaultPageText\", \"forwardText\", \"id\", \"itemsPerPageText\", \"itemRangeText\", \"pageNumberText\", \"pageRangeText\", \"pageSize\", \"pageSizes\", \"itemText\", \"pageText\", \"pagesUnknown\", \"isLastPage\", \"pageInputDisabled\", \"totalItems\", \"onChange\", \"onChangeInterval\", \"page\"]);\n\n      var statePage = this.state.page;\n      var statePageSize = this.state.pageSize;\n      var totalPages = Math.max(Math.ceil(totalItems / statePageSize), 1);\n      var classNames = classnames('bx--pagination', className);\n      var inputId = id || this.uniqueId;\n      return React.createElement(\"div\", _extends({\n        className: classNames\n      }, other), React.createElement(\"div\", {\n        className: \"bx--pagination__left\"\n      }, React.createElement(Select, {\n        id: \"bx-pagination-select-\".concat(inputId),\n        labelText: itemsPerPageText,\n        hideLabel: true,\n        onChange: this.handleSizeChange,\n        value: statePageSize\n      }, pageSizes.map(function (size) {\n        return React.createElement(SelectItem, {\n          key: size,\n          value: size,\n          text: String(size)\n        });\n      })), React.createElement(\"span\", {\n        className: \"bx--pagination__text\"\n      }, itemsPerPageText), React.createElement(\"span\", {\n        className: \"bx--pagination__text\"\n      }, this.getItemsText())), React.createElement(\"div\", {\n        className: \"bx--pagination__right\"\n      }, React.createElement(\"span\", {\n        className: \"bx--pagination__text\"\n      }, this.getPagesText()), React.createElement(\"button\", {\n        className: \"bx--pagination__button bx--pagination__button--backward\",\n        onClick: this.decrementPage,\n        disabled: this.props.disabled || statePage === 1\n      }, React.createElement(Icon, {\n        className: \"bx--pagination__button-icon\",\n        icon: iconChevronLeft,\n        description: backwardText\n      })), pageInputDisabled ? React.createElement(\"span\", {\n        className: \"bx--pagination__text\"\n      }, \"|\") : React.createElement(TextInput, {\n        id: \"bx-pagination-input-\".concat(inputId),\n        value: statePage > 0 ? statePage : '',\n        onChange: this.handlePageInputChange,\n        labelText: pageNumberText,\n        hideLabel: true\n      }), React.createElement(\"button\", {\n        className: \"bx--pagination__button bx--pagination__button--forward\",\n        onClick: this.incrementPage,\n        disabled: this.props.disabled || statePage === totalPages || isLastPage\n      }, React.createElement(Icon, {\n        className: \"bx--pagination__button-icon\",\n        icon: iconChevronRight,\n        description: forwardText\n      }))));\n    }\n  }]);\n\n  return Pagination;\n}(Component);\n\n_defineProperty(Pagination, \"propTypes\", {\n  backwardText: PropTypes.string,\n  className: PropTypes.string,\n  itemRangeText: PropTypes.func,\n  forwardText: PropTypes.string,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  itemsPerPageText: PropTypes.string,\n  itemText: PropTypes.func,\n  onChange: PropTypes.func,\n  pageNumberText: PropTypes.string,\n  pageRangeText: PropTypes.func,\n  pageText: PropTypes.func,\n  pageSizes: PropTypes.arrayOf(PropTypes.number).isRequired,\n  totalItems: PropTypes.number,\n  disabled: PropTypes.bool,\n  page: PropTypes.number,\n  pageSize: PropTypes.number,\n  pagesUnknown: PropTypes.bool,\n  isLastPage: PropTypes.bool,\n  pageInputDisabled: PropTypes.bool,\n  onChangeInterval: PropTypes.number,\n  defaultPageText: PropTypes.func,\n  defaultItemText: PropTypes.func\n});\n\n_defineProperty(Pagination, \"defaultProps\", {\n  backwardText: 'Backward',\n  itemRangeText: function itemRangeText(min, max, total) {\n    return \"\".concat(min, \"-\").concat(max, \" of \").concat(total, \" items\");\n  },\n  forwardText: 'Forward',\n  itemsPerPageText: 'items per page | ',\n  onChange: function onChange() {},\n  pageNumberText: 'Page Number',\n  pageRangeText: function pageRangeText(current, total) {\n    return \"\".concat(current, \" of \").concat(total, \" pages\");\n  },\n  disabled: false,\n  page: 1,\n  pagesUnknown: false,\n  isLastPage: false,\n  pageInputDisabled: false,\n  itemText: function itemText(min, max) {\n    return \"\".concat(min, \"-\").concat(max, \" items\");\n  },\n  pageText: function pageText(page) {\n    return \"page \".concat(page);\n  },\n  defaultPageText: function defaultPageText(totalPages) {\n    return \"\".concat(totalPages, \" pages\");\n  },\n  defaultItemText: function defaultItemText(totalItems) {\n    return \"\".concat(totalItems, \" items\");\n  },\n  onChangeInterval: 250\n});\n\nexport { Pagination as default };","map":null,"metadata":{},"sourceType":"module"}