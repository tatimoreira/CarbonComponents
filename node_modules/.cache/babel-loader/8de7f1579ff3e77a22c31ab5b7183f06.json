{"ast":null,"code":"import _classCallCheck from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/src/SimpleDataTable.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from 'carbon-components-react';\nvar rows = [{\n  id: \"a\",\n  foo: \"Foo a\",\n  bar: \"Bar a\",\n  baz: \"Baz a\"\n}, {\n  id: \"b\",\n  foo: \"Foo b\",\n  bar: \"Bar b\",\n  baz: \"Baz b\"\n}, {\n  id: \"c\",\n  foo: \"Foo c\",\n  bar: \"Bar c\",\n  baz: \"Baz c\"\n}];\nvar headers = [{\n  key: \"foo\",\n  header: \"Foo\"\n}, {\n  key: \"bar\",\n  header: \"Bar\"\n}, {\n  key: \"baz\",\n  header: \"Baz\"\n}];\nvar Table = DataTable.Table,\n    TableHead = DataTable.TableHead,\n    TableHeader = DataTable.TableHeader,\n    TableBody = DataTable.TableBody,\n    TableCell = DataTable.TableCell,\n    TableContainer = DataTable.TableContainer,\n    TableRow = DataTable.TableRow,\n    TableSelectAll = DataTable.TableSelectAll,\n    TableSelectRow = DataTable.TableSelectRow;\n\nvar SimpleDataTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SimpleDataTable, _Component);\n\n  function SimpleDataTable() {\n    _classCallCheck(this, SimpleDataTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SimpleDataTable).apply(this, arguments));\n  }\n\n  _createClass(SimpleDataTable, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        rows: rows,\n        headers: headers,\n        render: function render(_ref) {\n          var rows = _ref.rows,\n              headers = _ref.headers,\n              getHeaderProps = _ref.getHeaderProps,\n              getSelectionProps = _ref.getSelectionProps,\n              selectedRows = _ref.selectedRows;\n          return React.createElement(TableContainer, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, React.createElement(Table, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, React.createElement(TableHead, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, React.createElement(TableRow, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, React.createElement(TableSelectAll, Object.assign({}, getSelectionProps(), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          })), headers.map(function (header) {\n            return React.createElement(TableHeader, Object.assign({}, getHeaderProps({\n              header: header\n            }), {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 71\n              },\n              __self: this\n            }), header.header);\n          }))), React.createElement(TableBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, rows.map(function (row) {\n            return React.createElement(TableRow, {\n              key: row.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 79\n              },\n              __self: this\n            }, React.createElement(TableSelectRow, Object.assign({}, getSelectionProps({\n              row: row\n            }), {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 80\n              },\n              __self: this\n            })), row.cells.map(function (cell) {\n              return React.createElement(TableCell, {\n                key: cell.id,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 82\n                },\n                __self: this\n              }, cell.value);\n            }));\n          }))));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SimpleDataTable;\n}(Component);\n\nexport default SimpleDataTable;","map":{"version":3,"sources":["/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/src/SimpleDataTable.js"],"names":["React","Component","DataTable","rows","id","foo","bar","baz","headers","key","header","Table","TableHead","TableHeader","TableBody","TableCell","TableContainer","TableRow","TableSelectAll","TableSelectRow","SimpleDataTable","getHeaderProps","getSelectionProps","selectedRows","map","row","cells","cell","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { DataTable } from 'carbon-components-react';\n\nconst rows = [\n    {\n        id: \"a\",\n        foo: \"Foo a\",\n        bar: \"Bar a\",\n        baz: \"Baz a\"\n    },\n    {\n        id: \"b\",\n        foo: \"Foo b\",\n        bar: \"Bar b\",\n        baz: \"Baz b\"\n    },\n    {\n        id: \"c\",\n        foo: \"Foo c\",\n        bar: \"Bar c\",\n        baz: \"Baz c\"\n    }\n];\n\nconst headers = [\n    {\n        key: \"foo\",\n        header: \"Foo\"\n    },\n    {\n        key: \"bar\",\n        header: \"Bar\"\n    },\n    {\n        key: \"baz\",\n        header: \"Baz\"\n    }\n];\nconst {\n    Table,\n    TableHead,\n    TableHeader,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableRow,\n    TableSelectAll,\n    TableSelectRow\n} = DataTable;\n\nclass SimpleDataTable extends Component {\n    render() {\n        return (\n            <div>\n                <DataTable\n                    rows={rows}\n                    headers={headers}\n                    render={({\n                        rows,\n                        headers,\n                        getHeaderProps,\n                        getSelectionProps,\n                        selectedRows\n                    }) => (\n                            <TableContainer>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableSelectAll {...getSelectionProps()} />\n                                            {headers.map(header => (\n                                                <TableHeader {...getHeaderProps({ header })}>\n                                                    {header.header}\n                                                </TableHeader>\n                                            ))}\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {rows.map(row => (\n                                            <TableRow key={row.id}>\n                                                <TableSelectRow {...getSelectionProps({ row })} />\n                                                {row.cells.map(cell => (\n                                                    <TableCell key={cell.id}>{cell.value}</TableCell>\n                                                ))}\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>)} />\n            </div>\n        );\n    }\n}\n\nexport default SimpleDataTable;\n"]},"metadata":{},"sourceType":"module"}