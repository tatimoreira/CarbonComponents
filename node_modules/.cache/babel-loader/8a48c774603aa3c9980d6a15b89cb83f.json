{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\n\nvar ButtonSkeleton = function ButtonSkeleton(_ref) {\n  var small = _ref.small,\n      href = _ref.href;\n  var buttonClasses = classNames({\n    'bx--skeleton': true,\n    'bx--btn': true,\n    'bx--btn--sm': small\n  });\n  var commonProps = {\n    className: buttonClasses\n  };\n  var button = React.createElement(\"button\", _extends({}, commonProps, {\n    type: \"button\"\n  }));\n  var anchor = React.createElement(\"a\", _extends({}, commonProps, {\n    href: href,\n    role: \"button\"\n  })); // eslint-disable-line\n\n  return href ? anchor : button;\n};\n\nButtonSkeleton.propTypes = {\n  small: PropTypes.bool,\n  href: PropTypes.string\n};\nButtonSkeleton.defaultProps = {\n  small: false\n};\nexport default ButtonSkeleton;","map":null,"metadata":{},"sourceType":"module"}