{"ast":null,"code":"import _classCallCheck from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport mixin from '../../globals/js/misc/mixin';\nimport createComponent from '../../globals/js/mixins/create-component';\nimport eventedShowHideState from '../../globals/js/mixins/evented-show-hide-state';\nimport trackBlur from '../../globals/js/mixins/track-blur';\nimport getLaunchingDetails from '../../globals/js/misc/get-launching-details';\nimport optimizedResize from '../../globals/js/misc/resize';\n/**\n * The structure for the position of floating menu.\n * @typedef {Object} FloatingMenu~position\n * @property {number} left The left position.\n * @property {number} top The top position.\n * @property {number} right The right position.\n * @property {number} bottom The bottom position.\n */\n\n/**\n * The structure for the size of floating menu.\n * @typedef {Object} FloatingMenu~size\n * @property {number} width The width.\n * @property {number} height The height.\n */\n\n/**\n * The structure for the position offset of floating menu.\n * @typedef {Object} FloatingMenu~offset\n * @property {number} top The top position.\n * @property {number} left The left position.\n */\n\nexport var DIRECTION_LEFT = 'left';\nexport var DIRECTION_TOP = 'top';\nexport var DIRECTION_RIGHT = 'right';\nexport var DIRECTION_BOTTOM = 'bottom';\n/**\n * @param {Object} params The parameters.\n * @param {FloatingMenu~size} params.menuSize The size of the menu.\n * @param {FloatingMenu~position} params.refPosition The position of the triggering element.\n * @param {FloatingMenu~offset} [params.offset={ left: 0, top: 0 }] The position offset of the menu.\n * @param {string} [params.direction=bottom] The menu direction.\n * @param {number} [params.scrollX=0] The scroll position of the viewport.\n * @param {number} [params.scrollY=0] The scroll position of the viewport.\n * @returns {FloatingMenu~offset} The position of the menu, relative to the top-left corner of the viewport.\n * @private\n */\n\nexport var getFloatingPosition = function getFloatingPosition(_ref) {\n  var _DIRECTION_LEFT$DIREC;\n\n  var menuSize = _ref.menuSize,\n      refPosition = _ref.refPosition,\n      _ref$offset = _ref.offset,\n      offset = _ref$offset === void 0 ? {} : _ref$offset,\n      _ref$direction = _ref.direction,\n      direction = _ref$direction === void 0 ? DIRECTION_BOTTOM : _ref$direction,\n      _ref$scrollX = _ref.scrollX,\n      scrollX = _ref$scrollX === void 0 ? 0 : _ref$scrollX,\n      _ref$scrollY = _ref.scrollY,\n      scrollY = _ref$scrollY === void 0 ? 0 : _ref$scrollY;\n  var _refPosition$left = refPosition.left,\n      refLeft = _refPosition$left === void 0 ? 0 : _refPosition$left,\n      _refPosition$top = refPosition.top,\n      refTop = _refPosition$top === void 0 ? 0 : _refPosition$top,\n      _refPosition$right = refPosition.right,\n      refRight = _refPosition$right === void 0 ? 0 : _refPosition$right,\n      _refPosition$bottom = refPosition.bottom,\n      refBottom = _refPosition$bottom === void 0 ? 0 : _refPosition$bottom;\n  var width = menuSize.width,\n      height = menuSize.height;\n  var _offset$top = offset.top,\n      top = _offset$top === void 0 ? 0 : _offset$top,\n      _offset$left = offset.left,\n      left = _offset$left === void 0 ? 0 : _offset$left;\n  var refCenterHorizontal = (refLeft + refRight) / 2;\n  var refCenterVertical = (refTop + refBottom) / 2;\n  return (_DIRECTION_LEFT$DIREC = {}, _defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_LEFT, {\n    left: refLeft - width + scrollX - left,\n    top: refCenterVertical - height / 2 + scrollY + top\n  }), _defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_TOP, {\n    left: refCenterHorizontal - width / 2 + scrollX + left,\n    top: refTop - height + scrollY - top\n  }), _defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_RIGHT, {\n    left: refRight + scrollX + left,\n    top: refCenterVertical - height / 2 + scrollY + top\n  }), _defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_BOTTOM, {\n    left: refCenterHorizontal - width / 2 + scrollX + left,\n    top: refBottom + scrollY + top\n  }), _DIRECTION_LEFT$DIREC)[direction];\n};\n\nvar FloatingMenu =\n/*#__PURE__*/\nfunction (_mixin) {\n  _inherits(FloatingMenu, _mixin);\n\n  /**\n   * Floating menu.\n   * @extends CreateComponent\n   * @extends EventedShowHideState\n   * @param {HTMLElement} element The element working as a modal dialog.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorContainer] The CSS selector to find the container to put this menu in.\n   * @param {string} [options.attribDirection] The attribute name to specify menu placement direction (top/right/bottom/left).\n   * @param {string} [options.classShown] The CSS class for shown state, for the menu.\n   * @param {string} [options.classRefShown] The CSS class for shown state, for the trigger button.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this menu is shown.\n   *   Cancellation of this event stops hiding the menu.\n   * @param {string} [options.eventAfterShown]\n   *   The name of the custom event telling that menu is sure shown\n   *   without being canceled by the event handler named by `eventBeforeShown` option (`floating-menu-beingshown`).\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this menu is hidden.\n   *   Cancellation of this event stops hiding the menu.\n   * @param {string} [options.eventAfterHidden]\n   *   The name of the custom event telling that menu is sure hidden\n   *   without being canceled by the event handler named by `eventBeforeHidden` option (`floating-menu-beinghidden`).\n   * @param {Element} [options.refNode] The launching element of the menu. Used for calculating the geometry of the menu.\n   * @param {Object} [options.offset] The offset to adjust the geometry of the menu. Should have `top`/`left` properties.\n   */\n  function FloatingMenu(element, options) {\n    var _this;\n\n    _classCallCheck(this, FloatingMenu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FloatingMenu).call(this, element, options));\n\n    var attribDirectionValue = _this.element.getAttribute(_this.options.attribDirection);\n\n    if (!_this.options.direction) {\n      _this.options.direction = attribDirectionValue || 'bottom';\n    }\n\n    if (!attribDirectionValue) {\n      // Update attribute for styling\n      _this.element.setAttribute(_this.options.attribDirection, _this.options.direction);\n    }\n\n    return _this;\n  }\n  /**\n   * Focuses back on the trigger button if this component loses focus.\n   */\n\n\n  _createClass(FloatingMenu, [{\n    key: \"handleBlur\",\n    value: function handleBlur(event) {\n      if (this.element.classList.contains(this.options.classShown)) {\n        this.changeState('hidden', getLaunchingDetails(event));\n        var refNode = this.options.refNode;\n\n        if (this.element.contains(event.relatedTarget) && refNode && event.target !== refNode) {\n          HTMLElement.prototype.focus.call(refNode); // SVGElement in IE11 does not have `.focus()` method\n        }\n      }\n    }\n    /**\n     * @private\n     * @returns {Element} The element that this menu should be placed to.\n     */\n\n  }, {\n    key: \"_getContainer\",\n    value: function _getContainer() {\n      return this.element.closest(this.options.selectorContainer) || this.element.ownerDocument.body;\n    }\n    /**\n     * @private\n     * @returns {Object} The menu position, with `top` and `left` properties.\n     */\n\n  }, {\n    key: \"_getPos\",\n    value: function _getPos() {\n      var element = this.element;\n      var _this$options = this.options,\n          refNode = _this$options.refNode,\n          offset = _this$options.offset,\n          direction = _this$options.direction;\n\n      if (!refNode) {\n        throw new Error('Cannot find the refernce node for positioning floating menu.');\n      }\n\n      return getFloatingPosition({\n        menuSize: element.getBoundingClientRect(),\n        refPosition: refNode.getBoundingClientRect(),\n        offset: typeof offset !== 'function' ? offset : offset(element, direction),\n        direction: direction,\n        scrollX: refNode.ownerDocument.defaultView.pageXOffset,\n        scrollY: refNode.ownerDocument.defaultView.pageYOffset\n      });\n    }\n    /**\n     * Sees if the computed style is what this floating menu expects.\n     * @private\n     */\n\n  }, {\n    key: \"_testStyles\",\n    value: function _testStyles() {\n      if (!this.options.debugStyle) {\n        return;\n      }\n\n      var element = this.element;\n      var computedStyle = element.ownerDocument.defaultView.getComputedStyle(element);\n      var styles = {\n        position: 'absolute',\n        right: 'auto',\n        margin: 0\n      };\n      Object.keys(styles).forEach(function (key) {\n        var expected = typeof styles[key] === 'number' ? parseFloat(styles[key]) : styles[key];\n        var actual = computedStyle.getPropertyValue(key);\n\n        if (expected !== actual) {\n          // eslint-disable-next-line no-console\n          console.warn(\"Floating menu component expects \".concat(key, \": \").concat(styles[key], \" style.\"));\n        }\n      });\n    }\n    /**\n     * Places the menu.\n     * @private\n     */\n\n  }, {\n    key: \"_place\",\n    value: function _place() {\n      var element = this.element;\n\n      var _this$_getPos = this._getPos(),\n          left = _this$_getPos.left,\n          top = _this$_getPos.top;\n\n      element.style.left = \"\".concat(left, \"px\");\n      element.style.top = \"\".concat(top, \"px\");\n\n      this._testStyles();\n    }\n    /**\n     * @param {string} state The new state.\n     * @returns {boolean} `true` of the current state is different from the given new state.\n     */\n\n  }, {\n    key: \"shouldStateBeChanged\",\n    value: function shouldStateBeChanged(state) {\n      return (state === 'shown' || state === 'hidden') && state !== (this.element.classList.contains(this.options.classShown) ? 'shown' : 'hidden');\n    }\n    /**\n     * Changes the shown/hidden state.\n     * @private\n     * @param {string} state The new state.\n     * @param {Object} detail The detail of the event trigging this action.\n     * @param {Function} callback Callback called when change in state completes.\n     */\n\n  }, {\n    key: \"_changeState\",\n    value: function _changeState(state, detail, callback) {\n      var _this2 = this;\n\n      var shown = state === 'shown';\n      var _this$options2 = this.options,\n          refNode = _this$options2.refNode,\n          classShown = _this$options2.classShown,\n          classRefShown = _this$options2.classRefShown;\n\n      if (!refNode) {\n        throw new TypeError('Cannot find the refernce node for changing the style.');\n      }\n\n      this.element.classList.toggle(classShown, shown);\n\n      if (classRefShown) {\n        refNode.classList.toggle(classRefShown, shown);\n      }\n\n      if (state === 'shown') {\n        if (!this.hResize) {\n          this.hResize = optimizedResize.add(function () {\n            _this2._place();\n          });\n        }\n\n        this._getContainer().appendChild(this.element);\n\n        this._place(); // IE11 puts focus on elements with `.focus()`, even ones without `tabindex` attribute\n\n\n        if (!this.element.hasAttribute(this.options.attribAvoidFocusOnOpen)) {\n          (this.element.querySelector(this.options.selectorPrimaryFocus) || this.element).focus();\n        }\n      }\n\n      if (state === 'hidden' && this.hResize) {\n        this.hResize.release();\n        this.hResize = null;\n      }\n\n      callback();\n    }\n  }, {\n    key: \"release\",\n    value: function release() {\n      if (this.hResize) {\n        this.hResize.release();\n        this.hResize = null;\n      }\n\n      _get(_getPrototypeOf(FloatingMenu.prototype), \"release\", this).call(this);\n    }\n  }]);\n\n  return FloatingMenu;\n}(mixin(createComponent, eventedShowHideState, trackBlur));\n\nFloatingMenu.options = {\n  selectorContainer: '[data-floating-menu-container]',\n  selectorPrimaryFocus: '[data-floating-menu-primary-focus]',\n  attribDirection: 'data-floating-menu-direction',\n  attribAvoidFocusOnOpen: 'data-avoid-focus-on-open',\n  classShown: '',\n  // Should be provided from options arg in constructor\n  classRefShown: '',\n  // Should be provided from options arg in constructor\n  eventBeforeShown: 'floating-menu-beingshown',\n  eventAfterShown: 'floating-menu-shown',\n  eventBeforeHidden: 'floating-menu-beinghidden',\n  eventAfterHidden: 'floating-menu-hidden',\n  refNode: null,\n  // Should be provided from options arg in constructor\n  offset: {\n    left: 0,\n    top: 0\n  }\n};\nFloatingMenu.components = new WeakMap();\nexport default FloatingMenu;","map":{"version":3,"sources":["/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/src/components/floating-menu/floating-menu.js"],"names":["mixin","createComponent","eventedShowHideState","trackBlur","getLaunchingDetails","optimizedResize","DIRECTION_LEFT","DIRECTION_TOP","DIRECTION_RIGHT","DIRECTION_BOTTOM","getFloatingPosition","menuSize","refPosition","offset","direction","scrollX","scrollY","left","refLeft","top","refTop","right","refRight","bottom","refBottom","width","height","refCenterHorizontal","refCenterVertical","FloatingMenu","element","options","attribDirectionValue","getAttribute","attribDirection","setAttribute","event","classList","contains","classShown","changeState","refNode","relatedTarget","target","HTMLElement","prototype","focus","call","closest","selectorContainer","ownerDocument","body","Error","getBoundingClientRect","defaultView","pageXOffset","pageYOffset","debugStyle","computedStyle","getComputedStyle","styles","position","margin","Object","keys","forEach","key","expected","parseFloat","actual","getPropertyValue","console","warn","_getPos","style","_testStyles","state","detail","callback","shown","classRefShown","TypeError","toggle","hResize","add","_place","_getContainer","appendChild","hasAttribute","attribAvoidFocusOnOpen","querySelector","selectorPrimaryFocus","release","eventBeforeShown","eventAfterShown","eventBeforeHidden","eventAfterHidden","components","WeakMap"],"mappings":"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","sourcesContent":["import mixin from '../../globals/js/misc/mixin';\nimport createComponent from '../../globals/js/mixins/create-component';\nimport eventedShowHideState from '../../globals/js/mixins/evented-show-hide-state';\nimport trackBlur from '../../globals/js/mixins/track-blur';\nimport getLaunchingDetails from '../../globals/js/misc/get-launching-details';\nimport optimizedResize from '../../globals/js/misc/resize';\n\n/**\n * The structure for the position of floating menu.\n * @typedef {Object} FloatingMenu~position\n * @property {number} left The left position.\n * @property {number} top The top position.\n * @property {number} right The right position.\n * @property {number} bottom The bottom position.\n */\n\n/**\n * The structure for the size of floating menu.\n * @typedef {Object} FloatingMenu~size\n * @property {number} width The width.\n * @property {number} height The height.\n */\n\n/**\n * The structure for the position offset of floating menu.\n * @typedef {Object} FloatingMenu~offset\n * @property {number} top The top position.\n * @property {number} left The left position.\n */\n\nexport const DIRECTION_LEFT = 'left';\nexport const DIRECTION_TOP = 'top';\nexport const DIRECTION_RIGHT = 'right';\nexport const DIRECTION_BOTTOM = 'bottom';\n\n/**\n * @param {Object} params The parameters.\n * @param {FloatingMenu~size} params.menuSize The size of the menu.\n * @param {FloatingMenu~position} params.refPosition The position of the triggering element.\n * @param {FloatingMenu~offset} [params.offset={ left: 0, top: 0 }] The position offset of the menu.\n * @param {string} [params.direction=bottom] The menu direction.\n * @param {number} [params.scrollX=0] The scroll position of the viewport.\n * @param {number} [params.scrollY=0] The scroll position of the viewport.\n * @returns {FloatingMenu~offset} The position of the menu, relative to the top-left corner of the viewport.\n * @private\n */\nexport const getFloatingPosition = ({\n  menuSize,\n  refPosition,\n  offset = {},\n  direction = DIRECTION_BOTTOM,\n  scrollX = 0,\n  scrollY = 0,\n}) => {\n  const { left: refLeft = 0, top: refTop = 0, right: refRight = 0, bottom: refBottom = 0 } = refPosition;\n\n  const { width, height } = menuSize;\n  const { top = 0, left = 0 } = offset;\n  const refCenterHorizontal = (refLeft + refRight) / 2;\n  const refCenterVertical = (refTop + refBottom) / 2;\n\n  return {\n    [DIRECTION_LEFT]: {\n      left: refLeft - width + scrollX - left,\n      top: refCenterVertical - height / 2 + scrollY + top,\n    },\n    [DIRECTION_TOP]: {\n      left: refCenterHorizontal - width / 2 + scrollX + left,\n      top: refTop - height + scrollY - top,\n    },\n    [DIRECTION_RIGHT]: {\n      left: refRight + scrollX + left,\n      top: refCenterVertical - height / 2 + scrollY + top,\n    },\n    [DIRECTION_BOTTOM]: {\n      left: refCenterHorizontal - width / 2 + scrollX + left,\n      top: refBottom + scrollY + top,\n    },\n  }[direction];\n};\n\nclass FloatingMenu extends mixin(createComponent, eventedShowHideState, trackBlur) {\n  /**\n   * Floating menu.\n   * @extends CreateComponent\n   * @extends EventedShowHideState\n   * @param {HTMLElement} element The element working as a modal dialog.\n   * @param {Object} [options] The component options.\n   * @param {string} [options.selectorContainer] The CSS selector to find the container to put this menu in.\n   * @param {string} [options.attribDirection] The attribute name to specify menu placement direction (top/right/bottom/left).\n   * @param {string} [options.classShown] The CSS class for shown state, for the menu.\n   * @param {string} [options.classRefShown] The CSS class for shown state, for the trigger button.\n   * @param {string} [options.eventBeforeShown]\n   *   The name of the custom event fired before this menu is shown.\n   *   Cancellation of this event stops hiding the menu.\n   * @param {string} [options.eventAfterShown]\n   *   The name of the custom event telling that menu is sure shown\n   *   without being canceled by the event handler named by `eventBeforeShown` option (`floating-menu-beingshown`).\n   * @param {string} [options.eventBeforeHidden]\n   *   The name of the custom event fired before this menu is hidden.\n   *   Cancellation of this event stops hiding the menu.\n   * @param {string} [options.eventAfterHidden]\n   *   The name of the custom event telling that menu is sure hidden\n   *   without being canceled by the event handler named by `eventBeforeHidden` option (`floating-menu-beinghidden`).\n   * @param {Element} [options.refNode] The launching element of the menu. Used for calculating the geometry of the menu.\n   * @param {Object} [options.offset] The offset to adjust the geometry of the menu. Should have `top`/`left` properties.\n   */\n  constructor(element, options) {\n    super(element, options);\n    const attribDirectionValue = this.element.getAttribute(this.options.attribDirection);\n    if (!this.options.direction) {\n      this.options.direction = attribDirectionValue || 'bottom';\n    }\n    if (!attribDirectionValue) {\n      // Update attribute for styling\n      this.element.setAttribute(this.options.attribDirection, this.options.direction);\n    }\n  }\n\n  /**\n   * Focuses back on the trigger button if this component loses focus.\n   */\n  handleBlur(event) {\n    if (this.element.classList.contains(this.options.classShown)) {\n      this.changeState('hidden', getLaunchingDetails(event));\n      const { refNode } = this.options;\n      if (this.element.contains(event.relatedTarget) && refNode && event.target !== refNode) {\n        HTMLElement.prototype.focus.call(refNode); // SVGElement in IE11 does not have `.focus()` method\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @returns {Element} The element that this menu should be placed to.\n   */\n  _getContainer() {\n    return this.element.closest(this.options.selectorContainer) || this.element.ownerDocument.body;\n  }\n\n  /**\n   * @private\n   * @returns {Object} The menu position, with `top` and `left` properties.\n   */\n  _getPos() {\n    const element = this.element;\n    const { refNode, offset, direction } = this.options;\n\n    if (!refNode) {\n      throw new Error('Cannot find the refernce node for positioning floating menu.');\n    }\n\n    return getFloatingPosition({\n      menuSize: element.getBoundingClientRect(),\n      refPosition: refNode.getBoundingClientRect(),\n      offset: typeof offset !== 'function' ? offset : offset(element, direction),\n      direction,\n      scrollX: refNode.ownerDocument.defaultView.pageXOffset,\n      scrollY: refNode.ownerDocument.defaultView.pageYOffset,\n    });\n  }\n\n  /**\n   * Sees if the computed style is what this floating menu expects.\n   * @private\n   */\n  _testStyles() {\n    if (!this.options.debugStyle) {\n      return;\n    }\n    const element = this.element;\n    const computedStyle = element.ownerDocument.defaultView.getComputedStyle(element);\n    const styles = {\n      position: 'absolute',\n      right: 'auto',\n      margin: 0,\n    };\n    Object.keys(styles).forEach(key => {\n      const expected = typeof styles[key] === 'number' ? parseFloat(styles[key]) : styles[key];\n      const actual = computedStyle.getPropertyValue(key);\n      if (expected !== actual) {\n        // eslint-disable-next-line no-console\n        console.warn(`Floating menu component expects ${key}: ${styles[key]} style.`);\n      }\n    });\n  }\n\n  /**\n   * Places the menu.\n   * @private\n   */\n  _place() {\n    const element = this.element;\n    const { left, top } = this._getPos();\n    element.style.left = `${left}px`;\n    element.style.top = `${top}px`;\n    this._testStyles();\n  }\n\n  /**\n   * @param {string} state The new state.\n   * @returns {boolean} `true` of the current state is different from the given new state.\n   */\n  shouldStateBeChanged(state) {\n    return (\n      (state === 'shown' || state === 'hidden') &&\n      state !== (this.element.classList.contains(this.options.classShown) ? 'shown' : 'hidden')\n    );\n  }\n\n  /**\n   * Changes the shown/hidden state.\n   * @private\n   * @param {string} state The new state.\n   * @param {Object} detail The detail of the event trigging this action.\n   * @param {Function} callback Callback called when change in state completes.\n   */\n  _changeState(state, detail, callback) {\n    const shown = state === 'shown';\n    const { refNode, classShown, classRefShown } = this.options;\n    if (!refNode) {\n      throw new TypeError('Cannot find the refernce node for changing the style.');\n    }\n    this.element.classList.toggle(classShown, shown);\n    if (classRefShown) {\n      refNode.classList.toggle(classRefShown, shown);\n    }\n    if (state === 'shown') {\n      if (!this.hResize) {\n        this.hResize = optimizedResize.add(() => {\n          this._place();\n        });\n      }\n      this._getContainer().appendChild(this.element);\n      this._place();\n      // IE11 puts focus on elements with `.focus()`, even ones without `tabindex` attribute\n      if (!this.element.hasAttribute(this.options.attribAvoidFocusOnOpen)) {\n        (this.element.querySelector(this.options.selectorPrimaryFocus) || this.element).focus();\n      }\n    }\n    if (state === 'hidden' && this.hResize) {\n      this.hResize.release();\n      this.hResize = null;\n    }\n    callback();\n  }\n\n  release() {\n    if (this.hResize) {\n      this.hResize.release();\n      this.hResize = null;\n    }\n    super.release();\n  }\n\n  static options = {\n    selectorContainer: '[data-floating-menu-container]',\n    selectorPrimaryFocus: '[data-floating-menu-primary-focus]',\n    attribDirection: 'data-floating-menu-direction',\n    attribAvoidFocusOnOpen: 'data-avoid-focus-on-open',\n    classShown: '', // Should be provided from options arg in constructor\n    classRefShown: '', // Should be provided from options arg in constructor\n    eventBeforeShown: 'floating-menu-beingshown',\n    eventAfterShown: 'floating-menu-shown',\n    eventBeforeHidden: 'floating-menu-beinghidden',\n    eventAfterHidden: 'floating-menu-hidden',\n    refNode: null, // Should be provided from options arg in constructor\n    offset: {\n      left: 0,\n      top: 0,\n    },\n  };\n\n  static components = new WeakMap();\n}\n\nexport default FloatingMenu;\n"]},"metadata":{},"sourceType":"module"}