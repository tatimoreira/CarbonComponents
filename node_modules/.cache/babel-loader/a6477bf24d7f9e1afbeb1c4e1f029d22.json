{"ast":null,"code":"import _classCallCheck from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function (ToMix) {\n  var CreateComponent =\n  /*#__PURE__*/\n  function (_ToMix) {\n    _inherits(CreateComponent, _ToMix);\n\n    /**\n     * The component instances managed by this component.\n     * Releasing this component also releases the components in `this.children`.\n     * @type {Component[]}\n     */\n\n    /**\n     * Mix-in class to manage lifecycle of component.\n     * The constructor sets up this component's effective options,\n     * and registers this component't instance associated to an element.\n     * @implements Handle\n     * @param {HTMLElement} element The element working as this component.\n     * @param {Object} [options] The component options.\n     */\n    function CreateComponent(element) {\n      var _this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, CreateComponent);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateComponent).call(this, element, options));\n      _this.children = [];\n\n      if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n        throw new TypeError('DOM element should be given to initialize this widget.');\n      }\n      /**\n       * The element the component is of.\n       * @type {Element}\n       */\n\n\n      _this.element = element;\n      /**\n       * The component options.\n       * @type {Object}\n       */\n\n      _this.options = Object.assign(Object.create(_this.constructor.options), options);\n\n      _this.constructor.components.set(_this.element, _assertThisInitialized(_assertThisInitialized(_this)));\n\n      return _this;\n    }\n    /**\n     * Instantiates this component of the given element.\n     * @param {HTMLElement} element The element.\n     */\n\n\n    _createClass(CreateComponent, [{\n      key: \"release\",\n\n      /**\n       * Releases this component's instance from the associated element.\n       */\n      value: function release() {\n        for (var child = this.children.pop(); child; child = this.children.pop()) {\n          child.release();\n        }\n\n        this.constructor.components.delete(this.element);\n        return null;\n      }\n    }], [{\n      key: \"create\",\n      value: function create(element, options) {\n        return this.components.get(element) || new this(element, options);\n      }\n    }]);\n\n    return CreateComponent;\n  }(ToMix);\n\n  return CreateComponent;\n}","map":{"version":3,"sources":["/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/src/globals/js/mixins/create-component.js"],"names":["ToMix","CreateComponent","element","options","children","nodeType","Node","ELEMENT_NODE","TypeError","Object","assign","create","constructor","components","set","child","pop","release","delete","get"],"mappings":";;;;;;AAAA,eAAe,UAASA,KAAT,EAAgB;AAAA,MACvBC,eADuB;AAAA;AAAA;AAAA;;AAE3B;;;;;;AAOA;;;;;;;;AAQA,6BAAYC,OAAZ,EAAmC;AAAA;;AAAA,UAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AACjC,2FAAMD,OAAN,EAAeC,OAAf;AADiC,YAVnCC,QAUmC,GAVxB,EAUwB;;AAGjC,UAAI,CAACF,OAAD,IAAYA,OAAO,CAACG,QAAR,KAAqBC,IAAI,CAACC,YAA1C,EAAwD;AACtD,cAAM,IAAIC,SAAJ,CAAc,wDAAd,CAAN;AACD;AAED;;;;;;AAIA,YAAKN,OAAL,GAAeA,OAAf;AAEA;;;;;AAIA,YAAKC,OAAL,GAAeM,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACE,MAAP,CAAc,MAAKC,WAAL,CAAiBT,OAA/B,CAAd,EAAuDA,OAAvD,CAAf;;AAEA,YAAKS,WAAL,CAAiBC,UAAjB,CAA4BC,GAA5B,CAAgC,MAAKZ,OAArC;;AAnBiC;AAoBlC;AAED;;;;;;AAvC2B;AAAA;;AA+C3B;;;AA/C2B,gCAkDjB;AACR,aAAK,IAAIa,KAAK,GAAG,KAAKX,QAAL,CAAcY,GAAd,EAAjB,EAAsCD,KAAtC,EAA6CA,KAAK,GAAG,KAAKX,QAAL,CAAcY,GAAd,EAArD,EAA0E;AACxED,UAAAA,KAAK,CAACE,OAAN;AACD;;AACD,aAAKL,WAAL,CAAiBC,UAAjB,CAA4BK,MAA5B,CAAmC,KAAKhB,OAAxC;AACA,eAAO,IAAP;AACD;AAxD0B;AAAA;AAAA,6BA2CbA,OA3Ca,EA2CJC,OA3CI,EA2CK;AAC9B,eAAO,KAAKU,UAAL,CAAgBM,GAAhB,CAAoBjB,OAApB,KAAgC,IAAI,IAAJ,CAASA,OAAT,EAAkBC,OAAlB,CAAvC;AACD;AA7C0B;;AAAA;AAAA,IACCH,KADD;;AA0D7B,SAAOC,eAAP;AACD","sourcesContent":["export default function(ToMix) {\n  class CreateComponent extends ToMix {\n    /**\n     * The component instances managed by this component.\n     * Releasing this component also releases the components in `this.children`.\n     * @type {Component[]}\n     */\n    children = [];\n\n    /**\n     * Mix-in class to manage lifecycle of component.\n     * The constructor sets up this component's effective options,\n     * and registers this component't instance associated to an element.\n     * @implements Handle\n     * @param {HTMLElement} element The element working as this component.\n     * @param {Object} [options] The component options.\n     */\n    constructor(element, options = {}) {\n      super(element, options);\n\n      if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n        throw new TypeError('DOM element should be given to initialize this widget.');\n      }\n\n      /**\n       * The element the component is of.\n       * @type {Element}\n       */\n      this.element = element;\n\n      /**\n       * The component options.\n       * @type {Object}\n       */\n      this.options = Object.assign(Object.create(this.constructor.options), options);\n\n      this.constructor.components.set(this.element, this);\n    }\n\n    /**\n     * Instantiates this component of the given element.\n     * @param {HTMLElement} element The element.\n     */\n    static create(element, options) {\n      return this.components.get(element) || new this(element, options);\n    }\n\n    /**\n     * Releases this component's instance from the associated element.\n     */\n    release() {\n      for (let child = this.children.pop(); child; child = this.children.pop()) {\n        child.release();\n      }\n      this.constructor.components.delete(this.element);\n      return null;\n    }\n  }\n  return CreateComponent;\n}\n"]},"metadata":{},"sourceType":"module"}