{"ast":null,"code":"import _classCallCheck from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport settings from '../../globals/js/settings';\nimport mixin from '../../globals/js/misc/mixin';\nimport createComponent from '../../globals/js/mixins/create-component';\nimport initComponentBySearch from '../../globals/js/mixins/init-component-by-search';\nimport eventMatches from '../../globals/js/misc/event-matches';\n\nvar Tile =\n/*#__PURE__*/\nfunction (_mixin) {\n  _inherits(Tile, _mixin);\n\n  /**\n   * Tile.\n   * @extends CreateComponent\n   * @extends InitComponentBySearch\n   * @param {HTMLElement} element The element working as an Tile.\n   */\n  function Tile(element, options) {\n    var _this;\n\n    _classCallCheck(this, Tile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tile).call(this, element, options));\n\n    _this._getClass = function (type) {\n      var typeObj = {\n        expandable: _this.options.classExpandedTile,\n        clickable: _this.options.classClickableTile,\n        selectable: _this.options.classSelectableTile\n      };\n      return typeObj[type];\n    };\n\n    _this._hookActions = function (tileClass) {\n      var isExpandable = _this.tileType === 'expandable';\n\n      if (isExpandable) {\n        var aboveTheFold = _this.element.querySelector(_this.options.selectorAboveTheFold);\n\n        var getStyle = _this.element.ownerDocument.defaultView.getComputedStyle(_this.element, null);\n\n        var tilePaddingTop = parseInt(getStyle.getPropertyValue('padding-top'), 10);\n        var tilePaddingBottom = parseInt(getStyle.getPropertyValue('padding-bottom'), 10);\n        var tilePadding = tilePaddingTop + tilePaddingBottom;\n\n        if (aboveTheFold) {\n          _this.tileHeight = _this.element.getBoundingClientRect().height;\n          _this.atfHeight = aboveTheFold.getBoundingClientRect().height + tilePadding;\n          _this.element.style.maxHeight = \"\".concat(_this.atfHeight, \"px\");\n        }\n\n        if (_this.element.classList.contains(_this.options.classExpandedTile)) {\n          _this._setTileHeight();\n        }\n      }\n\n      _this.element.addEventListener('click', function (evt) {\n        var input = eventMatches(evt, _this.options.selectorTileInput);\n\n        if (!input) {\n          _this.element.classList.toggle(tileClass);\n        }\n\n        if (isExpandable) {\n          _this._setTileHeight();\n        }\n      });\n\n      _this.element.addEventListener('keydown', function (evt) {\n        var input = _this.element.querySelector(_this.options.selectorTileInput);\n\n        if (input) {\n          if (evt.which === 13 || evt.which === 32) {\n            if (!isExpandable) {\n              _this.element.classList.toggle(tileClass);\n\n              input.checked = !input.checked;\n            }\n          }\n        }\n      });\n    };\n\n    _this._setTileHeight = function () {\n      var isExpanded = _this.element.classList.contains(_this.options.classExpandedTile);\n\n      _this.element.style.maxHeight = isExpanded ? \"\".concat(_this.tileHeight, \"px\") : \"\".concat(_this.atfHeight, \"px\");\n    };\n\n    _this.tileType = _this.element.dataset.tile;\n    _this.tileHeight = 0; // Tracks expandable tile height\n\n    _this.atfHeight = 0; // Tracks above the fold height\n\n    _this._hookActions(_this._getClass(_this.tileType));\n\n    return _this;\n  }\n\n  _createClass(Tile, [{\n    key: \"release\",\n    value: function release() {\n      _get(_getPrototypeOf(Tile.prototype), \"release\", this).call(this);\n    }\n    /**\n     * The map associating DOM element and Tile UI instance.\n     * @type {WeakMap}\n     */\n\n  }], [{\n    key: \"options\",\n\n    /**\n     * The component options.\n     * If `options` is specified in the constructor,\n     * properties in this object are overriden for the instance being created.\n     * @property {string} selectorInit The CSS selector to find Tile instances.\n     */\n    get: function get() {\n      var prefix = settings.prefix;\n      return {\n        selectorInit: '[data-tile]',\n        selectorAboveTheFold: '[data-tile-atf]',\n        selectorTileInput: '[data-tile-input]',\n        classExpandedTile: \"\".concat(prefix, \"--tile--is-expanded\"),\n        classClickableTile: \"\".concat(prefix, \"--tile--is-clicked\"),\n        classSelectableTile: \"\".concat(prefix, \"--tile--is-selected\")\n      };\n    }\n  }]);\n\n  return Tile;\n}(mixin(createComponent, initComponentBySearch));\n\nTile.components = new WeakMap();\nexport default Tile;","map":{"version":3,"sources":["/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/src/components/tile/tile.js"],"names":["settings","mixin","createComponent","initComponentBySearch","eventMatches","Tile","element","options","_getClass","type","typeObj","expandable","classExpandedTile","clickable","classClickableTile","selectable","classSelectableTile","_hookActions","tileClass","isExpandable","tileType","aboveTheFold","querySelector","selectorAboveTheFold","getStyle","ownerDocument","defaultView","getComputedStyle","tilePaddingTop","parseInt","getPropertyValue","tilePaddingBottom","tilePadding","tileHeight","getBoundingClientRect","height","atfHeight","style","maxHeight","classList","contains","_setTileHeight","addEventListener","evt","input","selectorTileInput","toggle","which","checked","isExpanded","dataset","tile","prefix","selectorInit","components","WeakMap"],"mappings":"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","sourcesContent":["import settings from '../../globals/js/settings';\nimport mixin from '../../globals/js/misc/mixin';\nimport createComponent from '../../globals/js/mixins/create-component';\nimport initComponentBySearch from '../../globals/js/mixins/init-component-by-search';\nimport eventMatches from '../../globals/js/misc/event-matches';\n\nclass Tile extends mixin(createComponent, initComponentBySearch) {\n  /**\n   * Tile.\n   * @extends CreateComponent\n   * @extends InitComponentBySearch\n   * @param {HTMLElement} element The element working as an Tile.\n   */\n  constructor(element, options) {\n    super(element, options);\n    this.tileType = this.element.dataset.tile;\n    this.tileHeight = 0; // Tracks expandable tile height\n    this.atfHeight = 0; // Tracks above the fold height\n    this._hookActions(this._getClass(this.tileType));\n  }\n\n  _getClass = type => {\n    const typeObj = {\n      expandable: this.options.classExpandedTile,\n      clickable: this.options.classClickableTile,\n      selectable: this.options.classSelectableTile,\n    };\n    return typeObj[type];\n  };\n\n  _hookActions = tileClass => {\n    const isExpandable = this.tileType === 'expandable';\n    if (isExpandable) {\n      const aboveTheFold = this.element.querySelector(this.options.selectorAboveTheFold);\n      const getStyle = this.element.ownerDocument.defaultView.getComputedStyle(this.element, null);\n      const tilePaddingTop = parseInt(getStyle.getPropertyValue('padding-top'), 10);\n      const tilePaddingBottom = parseInt(getStyle.getPropertyValue('padding-bottom'), 10);\n      const tilePadding = tilePaddingTop + tilePaddingBottom;\n      if (aboveTheFold) {\n        this.tileHeight = this.element.getBoundingClientRect().height;\n        this.atfHeight = aboveTheFold.getBoundingClientRect().height + tilePadding;\n        this.element.style.maxHeight = `${this.atfHeight}px`;\n      }\n\n      if (this.element.classList.contains(this.options.classExpandedTile)) {\n        this._setTileHeight();\n      }\n    }\n\n    this.element.addEventListener('click', evt => {\n      const input = eventMatches(evt, this.options.selectorTileInput);\n      if (!input) {\n        this.element.classList.toggle(tileClass);\n      }\n      if (isExpandable) {\n        this._setTileHeight();\n      }\n    });\n    this.element.addEventListener('keydown', evt => {\n      const input = this.element.querySelector(this.options.selectorTileInput);\n      if (input) {\n        if (evt.which === 13 || evt.which === 32) {\n          if (!isExpandable) {\n            this.element.classList.toggle(tileClass);\n            input.checked = !input.checked;\n          }\n        }\n      }\n    });\n  };\n\n  _setTileHeight = () => {\n    const isExpanded = this.element.classList.contains(this.options.classExpandedTile);\n    this.element.style.maxHeight = isExpanded ? `${this.tileHeight}px` : `${this.atfHeight}px`;\n  };\n\n  release() {\n    super.release();\n  }\n\n  /**\n   * The map associating DOM element and Tile UI instance.\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor,\n   * properties in this object are overriden for the instance being created.\n   * @property {string} selectorInit The CSS selector to find Tile instances.\n   */\n  static get options() {\n    const { prefix } = settings;\n    return {\n      selectorInit: '[data-tile]',\n      selectorAboveTheFold: '[data-tile-atf]',\n      selectorTileInput: '[data-tile-input]',\n      classExpandedTile: `${prefix}--tile--is-expanded`,\n      classClickableTile: `${prefix}--tile--is-clicked`,\n      classSelectableTile: `${prefix}--tile--is-selected`,\n    };\n  }\n}\n\nexport default Tile;\n"]},"metadata":{},"sourceType":"module"}