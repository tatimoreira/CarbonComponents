{"ast":null,"code":"import _classCallCheck from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport on from '../misc/on';\nimport handles from './handles';\n\nfunction trackBlur(ToMix) {\n  var TrackBlur =\n  /*#__PURE__*/\n  function (_ToMix) {\n    _inherits(TrackBlur, _ToMix);\n\n    /**\n     * Mix-in class to add an handler for losing focus.\n     * @extends Handles\n     * @param {HTMLElement} element The element working as this component.\n     * @param {Object} [options] The component options.\n     */\n    function TrackBlur(element, options) {\n      var _this;\n\n      _classCallCheck(this, TrackBlur);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(TrackBlur).call(this, element, options));\n      var hasFocusin = 'onfocusin' in window;\n      var focusinEventName = hasFocusin ? 'focusin' : 'focus';\n\n      _this.manage(on(_this.element.ownerDocument, focusinEventName, function (event) {\n        if (!_this.element.contains(event.target)) {\n          _this.handleBlur(event);\n        }\n      }, !hasFocusin));\n\n      return _this;\n    }\n    /**\n     * The method called when this component loses focus.\n     * @abstract\n     */\n\n\n    _createClass(TrackBlur, [{\n      key: \"handleBlur\",\n      value: function handleBlur() {\n        throw new Error('Components inheriting TrackBlur mix-in must implement handleBlur() method.');\n      }\n    }]);\n\n    return TrackBlur;\n  }(ToMix);\n\n  return TrackBlur;\n}\n\nvar exports = [handles, trackBlur];\nexport default exports;","map":{"version":3,"sources":["/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/src/globals/js/mixins/track-blur.js"],"names":["on","handles","trackBlur","ToMix","TrackBlur","element","options","hasFocusin","window","focusinEventName","manage","ownerDocument","event","contains","target","handleBlur","Error","exports"],"mappings":";;;;;AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA,MAClBC,SADkB;AAAA;AAAA;AAAA;;AAEtB;;;;;;AAMA,uBAAYC,OAAZ,EAAqBC,OAArB,EAA8B;AAAA;;AAAA;;AAC5B,qFAAMD,OAAN,EAAeC,OAAf;AACA,UAAMC,UAAU,GAAG,eAAeC,MAAlC;AACA,UAAMC,gBAAgB,GAAGF,UAAU,GAAG,SAAH,GAAe,OAAlD;;AACA,YAAKG,MAAL,CACEV,EAAE,CACA,MAAKK,OAAL,CAAaM,aADb,EAEAF,gBAFA,EAGA,UAAAG,KAAK,EAAI;AACP,YAAI,CAAC,MAAKP,OAAL,CAAaQ,QAAb,CAAsBD,KAAK,CAACE,MAA5B,CAAL,EAA0C;AACxC,gBAAKC,UAAL,CAAgBH,KAAhB;AACD;AACF,OAPD,EAQA,CAACL,UARD,CADJ;;AAJ4B;AAgB7B;AAED;;;;;;AA1BsB;AAAA;AAAA,mCA8BT;AACX,cAAM,IAAIS,KAAJ,CAAU,4EAAV,CAAN;AACD;AAhCqB;;AAAA;AAAA,IACAb,KADA;;AAmCxB,SAAOC,SAAP;AACD;;AAED,IAAMa,OAAO,GAAG,CAAChB,OAAD,EAAUC,SAAV,CAAhB;AACA,eAAee,OAAf","sourcesContent":["import on from '../misc/on';\nimport handles from './handles';\n\nfunction trackBlur(ToMix) {\n  class TrackBlur extends ToMix {\n    /**\n     * Mix-in class to add an handler for losing focus.\n     * @extends Handles\n     * @param {HTMLElement} element The element working as this component.\n     * @param {Object} [options] The component options.\n     */\n    constructor(element, options) {\n      super(element, options);\n      const hasFocusin = 'onfocusin' in window;\n      const focusinEventName = hasFocusin ? 'focusin' : 'focus';\n      this.manage(\n        on(\n          this.element.ownerDocument,\n          focusinEventName,\n          event => {\n            if (!this.element.contains(event.target)) {\n              this.handleBlur(event);\n            }\n          },\n          !hasFocusin\n        )\n      );\n    }\n\n    /**\n     * The method called when this component loses focus.\n     * @abstract\n     */\n    handleBlur() {\n      throw new Error('Components inheriting TrackBlur mix-in must implement handleBlur() method.');\n    }\n  }\n\n  return TrackBlur;\n}\n\nconst exports = [handles, trackBlur];\nexport default exports;\n"]},"metadata":{},"sourceType":"module"}