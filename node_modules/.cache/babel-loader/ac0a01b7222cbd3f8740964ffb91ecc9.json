{"ast":null,"code":"import _classCallCheck from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport settings from '../../globals/js/settings';\nimport mixin from '../../globals/js/misc/mixin';\nimport createComponent from '../../globals/js/mixins/create-component';\nimport initComponentBySearch from '../../globals/js/mixins/init-component-by-search';\nimport handles from '../../globals/js/mixins/handles';\nimport on from '../../globals/js/misc/on';\n\nvar NumberInput =\n/*#__PURE__*/\nfunction (_mixin) {\n  _inherits(NumberInput, _mixin);\n\n  /**\n   * Number input UI.\n   * @extends CreateComponent\n   * @extends InitComponentBySearch\n   * @extends Handles\n   * @param {HTMLElement} element The element working as a number input UI.\n   */\n  function NumberInput(element, options) {\n    var _this;\n\n    _classCallCheck(this, NumberInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NumberInput).call(this, element, options)); // Broken DOM tree is seen with up/down arrows <svg> in IE, which breaks event delegation.\n    // <svg> does not have `Element.classList` in IE11\n\n    _this.manage(on(_this.element.querySelector('.up-icon'), 'click', function (event) {\n      _this._handleClick(event);\n    }));\n\n    _this.manage(on(_this.element.querySelector('.down-icon'), 'click', function (event) {\n      _this._handleClick(event);\n    }));\n\n    return _this;\n  }\n  /**\n   * Increase/decrease number by clicking on up/down icons.\n   * @param {Event} event The event triggering this method.\n   */\n\n\n  _createClass(NumberInput, [{\n    key: \"_handleClick\",\n    value: function _handleClick(event) {\n      var numberInput = this.element.querySelector(this.options.selectorInput);\n      var target = event.currentTarget.getAttribute('class').split(' ');\n\n      if (target.indexOf('up-icon') >= 0) {\n        ++numberInput.value;\n      } else if (target.indexOf('down-icon') >= 0) {\n        --numberInput.value;\n      } // Programmatic change in value (including `stepUp()`/`stepDown()`) won't fire change event\n\n\n      numberInput.dispatchEvent(new CustomEvent('change', {\n        bubbles: true,\n        cancelable: false\n      }));\n    }\n    /**\n     * The map associating DOM element and number input UI instance.\n     * @member NumberInput.components\n     * @type {WeakMap}\n     */\n\n  }], [{\n    key: \"options\",\n\n    /**\n     * The component options.\n     * If `options` is specified in the constructor,\n     * {@linkcode NumberInput.create .create()}, or {@linkcode NumberInput.init .init()},\n     * properties in this object are overriden for the instance being create and how {@linkcode NumberInput.init .init()} works.\n     * @member NumberInput.options\n     * @type {Object}\n     * @property {string} selectorInit The CSS selector to find number input UIs.\n     * @property {string} [selectorInput] The CSS selector to find the `<input>` element.\n     */\n    get: function get() {\n      var prefix = settings.prefix;\n      return {\n        selectorInit: '[data-numberinput]',\n        selectorInput: \".\".concat(prefix, \"--number input\")\n      };\n    }\n  }]);\n\n  return NumberInput;\n}(mixin(createComponent, initComponentBySearch, handles));\n\nNumberInput.components = new WeakMap();\nexport default NumberInput;","map":{"version":3,"sources":["/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/src/components/number-input/number-input.js"],"names":["settings","mixin","createComponent","initComponentBySearch","handles","on","NumberInput","element","options","manage","querySelector","event","_handleClick","numberInput","selectorInput","target","currentTarget","getAttribute","split","indexOf","value","dispatchEvent","CustomEvent","bubbles","cancelable","prefix","selectorInit","components","WeakMap"],"mappings":";;;;;AAAA,OAAOA,QAAP,MAAqB,2BAArB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,eAAP,MAA4B,0CAA5B;AACA,OAAOC,qBAAP,MAAkC,kDAAlC;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,EAAP,MAAe,0BAAf;;IAEMC,W;;;;;AACJ;;;;;;;AAOA,uBAAYC,OAAZ,EAAqBC,OAArB,EAA8B;AAAA;;AAAA;;AAC5B,qFAAMD,OAAN,EAAeC,OAAf,GAD4B,CAE5B;AACA;;AACA,UAAKC,MAAL,CACEJ,EAAE,CAAC,MAAKE,OAAL,CAAaG,aAAb,CAA2B,UAA3B,CAAD,EAAyC,OAAzC,EAAkD,UAAAC,KAAK,EAAI;AAC3D,YAAKC,YAAL,CAAkBD,KAAlB;AACD,KAFC,CADJ;;AAKA,UAAKF,MAAL,CACEJ,EAAE,CAAC,MAAKE,OAAL,CAAaG,aAAb,CAA2B,YAA3B,CAAD,EAA2C,OAA3C,EAAoD,UAAAC,KAAK,EAAI;AAC7D,YAAKC,YAAL,CAAkBD,KAAlB;AACD,KAFC,CADJ;;AAT4B;AAc7B;AAED;;;;;;;;iCAIaA,K,EAAO;AAClB,UAAME,WAAW,GAAG,KAAKN,OAAL,CAAaG,aAAb,CAA2B,KAAKF,OAAL,CAAaM,aAAxC,CAApB;AACA,UAAMC,MAAM,GAAGJ,KAAK,CAACK,aAAN,CAAoBC,YAApB,CAAiC,OAAjC,EAA0CC,KAA1C,CAAgD,GAAhD,CAAf;;AAEA,UAAIH,MAAM,CAACI,OAAP,CAAe,SAAf,KAA6B,CAAjC,EAAoC;AAClC,UAAEN,WAAW,CAACO,KAAd;AACD,OAFD,MAEO,IAAIL,MAAM,CAACI,OAAP,CAAe,WAAf,KAA+B,CAAnC,EAAsC;AAC3C,UAAEN,WAAW,CAACO,KAAd;AACD,OARiB,CAUlB;;;AACAP,MAAAA,WAAW,CAACQ,aAAZ,CACE,IAAIC,WAAJ,CAAgB,QAAhB,EAA0B;AACxBC,QAAAA,OAAO,EAAE,IADe;AAExBC,QAAAA,UAAU,EAAE;AAFY,OAA1B,CADF;AAMD;AAED;;;;;;;;;AAOA;;;;;;;;;;wBAUqB;AAAA,UACXC,MADW,GACAzB,QADA,CACXyB,MADW;AAEnB,aAAO;AACLC,QAAAA,YAAY,EAAE,oBADT;AAELZ,QAAAA,aAAa,aAAMW,MAAN;AAFR,OAAP;AAID;;;;EAtEuBxB,KAAK,CAACC,eAAD,EAAkBC,qBAAlB,EAAyCC,OAAzC,C;;AAAzBE,W,CAoDGqB,U,GAAa,IAAIC,OAAJ,E;AAqBtB,eAAetB,WAAf","sourcesContent":["import settings from '../../globals/js/settings';\nimport mixin from '../../globals/js/misc/mixin';\nimport createComponent from '../../globals/js/mixins/create-component';\nimport initComponentBySearch from '../../globals/js/mixins/init-component-by-search';\nimport handles from '../../globals/js/mixins/handles';\nimport on from '../../globals/js/misc/on';\n\nclass NumberInput extends mixin(createComponent, initComponentBySearch, handles) {\n  /**\n   * Number input UI.\n   * @extends CreateComponent\n   * @extends InitComponentBySearch\n   * @extends Handles\n   * @param {HTMLElement} element The element working as a number input UI.\n   */\n  constructor(element, options) {\n    super(element, options);\n    // Broken DOM tree is seen with up/down arrows <svg> in IE, which breaks event delegation.\n    // <svg> does not have `Element.classList` in IE11\n    this.manage(\n      on(this.element.querySelector('.up-icon'), 'click', event => {\n        this._handleClick(event);\n      })\n    );\n    this.manage(\n      on(this.element.querySelector('.down-icon'), 'click', event => {\n        this._handleClick(event);\n      })\n    );\n  }\n\n  /**\n   * Increase/decrease number by clicking on up/down icons.\n   * @param {Event} event The event triggering this method.\n   */\n  _handleClick(event) {\n    const numberInput = this.element.querySelector(this.options.selectorInput);\n    const target = event.currentTarget.getAttribute('class').split(' ');\n\n    if (target.indexOf('up-icon') >= 0) {\n      ++numberInput.value;\n    } else if (target.indexOf('down-icon') >= 0) {\n      --numberInput.value;\n    }\n\n    // Programmatic change in value (including `stepUp()`/`stepDown()`) won't fire change event\n    numberInput.dispatchEvent(\n      new CustomEvent('change', {\n        bubbles: true,\n        cancelable: false,\n      })\n    );\n  }\n\n  /**\n   * The map associating DOM element and number input UI instance.\n   * @member NumberInput.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor,\n   * {@linkcode NumberInput.create .create()}, or {@linkcode NumberInput.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode NumberInput.init .init()} works.\n   * @member NumberInput.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find number input UIs.\n   * @property {string} [selectorInput] The CSS selector to find the `<input>` element.\n   */\n  static get options() {\n    const { prefix } = settings;\n    return {\n      selectorInit: '[data-numberinput]',\n      selectorInput: `.${prefix}--number input`,\n    };\n  }\n}\n\nexport default NumberInput;\n"]},"metadata":{},"sourceType":"module"}