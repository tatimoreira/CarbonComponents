{"ast":null,"code":"import _classCallCheck from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport mixin from '../../globals/js/misc/mixin';\nimport createComponent from '../../globals/js/mixins/create-component';\nimport initComponentBySearch from '../../globals/js/mixins/init-component-by-search';\nimport eventedState from '../../globals/js/mixins/evented-state';\nimport handles from '../../globals/js/mixins/handles';\nimport on from '../../globals/js/misc/on';\n\nvar Notification =\n/*#__PURE__*/\nfunction (_mixin) {\n  _inherits(Notification, _mixin);\n\n  /**\n   * InlineNotification.\n   * @extends CreateComponent\n   * @extends InitComponentBySearch\n   * @extends Handles\n   * @param {HTMLElement} element The element working as a InlineNotification.\n   */\n  function Notification(element, options) {\n    var _this;\n\n    _classCallCheck(this, Notification);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Notification).call(this, element, options));\n\n    _this._changeState = function (state, callback) {\n      if (state === 'delete-notification') {\n        _this.element.parentNode.removeChild(_this.element);\n\n        _this.release();\n      }\n\n      callback();\n    };\n\n    _this.button = element.querySelector(_this.options.selectorButton);\n\n    if (_this.button) {\n      _this.manage(on(_this.button, 'click', function (evt) {\n        if (evt.currentTarget === _this.button) {\n          _this.remove();\n        }\n      }));\n    }\n\n    return _this;\n  }\n\n  _createClass(Notification, [{\n    key: \"remove\",\n    value: function remove() {\n      this.changeState('delete-notification');\n    }\n    /**\n     * The map associating DOM element and accordion UI instance.\n     * @type {WeakMap}\n     */\n\n  }]);\n\n  return Notification;\n}(mixin(createComponent, initComponentBySearch, eventedState, handles));\n\nNotification.components = new WeakMap();\nNotification.options = {\n  selectorInit: '[data-notification]',\n  selectorButton: '[data-notification-btn]',\n  eventBeforeDeleteNotification: 'notification-before-delete',\n  eventAfterDeleteNotification: 'notification-after-delete'\n};\nexport default Notification;","map":{"version":3,"sources":["/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/src/components/notification/notification.js"],"names":["mixin","createComponent","initComponentBySearch","eventedState","handles","on","Notification","element","options","_changeState","state","callback","parentNode","removeChild","release","button","querySelector","selectorButton","manage","evt","currentTarget","remove","changeState","components","WeakMap","selectorInit","eventBeforeDeleteNotification","eventAfterDeleteNotification"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,6BAAlB;AACA,OAAOC,eAAP,MAA4B,0CAA5B;AACA,OAAOC,qBAAP,MAAkC,kDAAlC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,EAAP,MAAe,0BAAf;;IAEMC,Y;;;;;AACJ;;;;;;;AAOA,wBAAYC,OAAZ,EAAqBC,OAArB,EAA8B;AAAA;;AAAA;;AAC5B,sFAAMD,OAAN,EAAeC,OAAf;;AAD4B,UAc9BC,YAd8B,GAcf,UAACC,KAAD,EAAQC,QAAR,EAAqB;AAClC,UAAID,KAAK,KAAK,qBAAd,EAAqC;AACnC,cAAKH,OAAL,CAAaK,UAAb,CAAwBC,WAAxB,CAAoC,MAAKN,OAAzC;;AACA,cAAKO,OAAL;AACD;;AACDH,MAAAA,QAAQ;AACT,KApB6B;;AAE5B,UAAKI,MAAL,GAAcR,OAAO,CAACS,aAAR,CAAsB,MAAKR,OAAL,CAAaS,cAAnC,CAAd;;AACA,QAAI,MAAKF,MAAT,EAAiB;AACf,YAAKG,MAAL,CACEb,EAAE,CAAC,MAAKU,MAAN,EAAc,OAAd,EAAuB,UAAAI,GAAG,EAAI;AAC9B,YAAIA,GAAG,CAACC,aAAJ,KAAsB,MAAKL,MAA/B,EAAuC;AACrC,gBAAKM,MAAL;AACD;AACF,OAJC,CADJ;AAOD;;AAX2B;AAY7B;;;;6BAUQ;AACP,WAAKC,WAAL,CAAiB,qBAAjB;AACD;AAED;;;;;;;;EAlCyBtB,KAAK,CAACC,eAAD,EAAkBC,qBAAlB,EAAyCC,YAAzC,EAAuDC,OAAvD,C;;AAA1BE,Y,CAsCGiB,U,GAAa,IAAIC,OAAJ,E;AAtChBlB,Y,CA6CGE,O,GAAU;AACfiB,EAAAA,YAAY,EAAE,qBADC;AAEfR,EAAAA,cAAc,EAAE,yBAFD;AAGfS,EAAAA,6BAA6B,EAAE,4BAHhB;AAIfC,EAAAA,4BAA4B,EAAE;AAJf,C;AAQnB,eAAerB,YAAf","sourcesContent":["import mixin from '../../globals/js/misc/mixin';\nimport createComponent from '../../globals/js/mixins/create-component';\nimport initComponentBySearch from '../../globals/js/mixins/init-component-by-search';\nimport eventedState from '../../globals/js/mixins/evented-state';\nimport handles from '../../globals/js/mixins/handles';\nimport on from '../../globals/js/misc/on';\n\nclass Notification extends mixin(createComponent, initComponentBySearch, eventedState, handles) {\n  /**\n   * InlineNotification.\n   * @extends CreateComponent\n   * @extends InitComponentBySearch\n   * @extends Handles\n   * @param {HTMLElement} element The element working as a InlineNotification.\n   */\n  constructor(element, options) {\n    super(element, options);\n    this.button = element.querySelector(this.options.selectorButton);\n    if (this.button) {\n      this.manage(\n        on(this.button, 'click', evt => {\n          if (evt.currentTarget === this.button) {\n            this.remove();\n          }\n        })\n      );\n    }\n  }\n\n  _changeState = (state, callback) => {\n    if (state === 'delete-notification') {\n      this.element.parentNode.removeChild(this.element);\n      this.release();\n    }\n    callback();\n  };\n\n  remove() {\n    this.changeState('delete-notification');\n  }\n\n  /**\n   * The map associating DOM element and accordion UI instance.\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * @property {string} selectorInit The CSS selector to find InlineNotification.\n   * @property {string} selectorButton The CSS selector to find close button.\n   */\n  static options = {\n    selectorInit: '[data-notification]',\n    selectorButton: '[data-notification-btn]',\n    eventBeforeDeleteNotification: 'notification-before-delete',\n    eventAfterDeleteNotification: 'notification-after-delete',\n  };\n}\n\nexport default Notification;\n"]},"metadata":{},"sourceType":"module"}