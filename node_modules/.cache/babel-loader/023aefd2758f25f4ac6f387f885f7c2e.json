{"ast":null,"code":"import _toConsumableArray from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport settings from '../../globals/js/settings';\nimport mixin from '../../globals/js/misc/mixin';\nimport createComponent from '../../globals/js/mixins/create-component';\nimport initComponentBySearch from '../../globals/js/mixins/init-component-by-search';\nimport handles from '../../globals/js/mixins/handles';\nimport eventMatches from '../../globals/js/misc/event-matches';\nimport on from '../../globals/js/misc/on';\n\nvar LeftNav =\n/*#__PURE__*/\nfunction (_mixin) {\n  _inherits(LeftNav, _mixin);\n\n  /**\n   * Left Navigation.\n   * @extends CreateComponent\n   * @extends InitComponentBySearch\n   * @extends Handles\n   * @param {HTMLElement} element The element working as a left navigation.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n   * @param {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n   * @param {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n   * @param {string} [options.selectorLeftNavToggle]\n   *   The data attribute selector for the button that will show and hide the left navigation.\n   * @param {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n   * @param {string} [options.selectorLeftNavNestedListItem]\n   *   The data attribute selector for all nested list items in the left navigation.\n   * @param {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n   * @param {string} [options.selectorLeftNavSection]\n   *   The data attribute selector for the three sections in the header of the left nav.\n   * @param {string} [options.selectorLeftNavCurrentPage]\n   *   The data attribute selector for the current section title in the left nav header.\n   * @param {string} [options.selectorLeftNavMainNavHidden] The CSS selector for the hidden main nav.\n   * @param {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n   * @param {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n   * @param {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n   * @param {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n   * @param {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n   * @param {string} [options.classItemHasChildren] The class name for when a list item has children.\n   * @param {string} [options.classTaxonomyIcon] The class name for the taxonomy icon.\n   */\n  function LeftNav(element, options) {\n    var _this;\n\n    _classCallCheck(this, LeftNav);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LeftNav).call(this, element, options));\n    _this.leftNavSectionActive = false;\n\n    _this.hookOpenActions();\n\n    _this.hookListSectionEvents();\n\n    _this.hookListItemsEvents();\n\n    _this.manage(on(_this.element.ownerDocument, 'click', function (evt) {\n      _this.handleDocumentClick(evt);\n    }));\n\n    return _this;\n  }\n  /**\n   * Closes the menu.\n   */\n\n\n  _createClass(LeftNav, [{\n    key: \"closeMenu\",\n    value: function closeMenu() {\n      this.element.classList.remove(this.options.classActiveLeftNav);\n      var toggleOpenNode = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen);\n      toggleOpenNode.classList.remove(this.options.classActiveTrigger);\n      this.element.querySelector(this.options.selectorLeftNav).parentNode.setAttribute('aria-expanded', 'false');\n    }\n    /**\n     * Toggles the menu to open and close.\n     */\n\n  }, {\n    key: \"toggleMenu\",\n    value: function toggleMenu() {\n      var leftNavContainer = this.element.querySelector(this.options.selectorLeftNav).parentNode;\n      this.element.classList.toggle(this.options.classActiveLeftNav);\n      var toggleOpenNode = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen);\n      toggleOpenNode.classList.toggle(this.options.classActiveTrigger);\n      if (leftNavContainer.getAttribute('aria-expanded') === 'false') leftNavContainer.setAttribute('aria-expanded', 'true');else leftNavContainer.setAttribute('aria-expanded', 'false');\n    }\n    /**\n     * Adds a transitional animation to the navSection\n     */\n\n  }, {\n    key: \"animateNavSection\",\n    value: function animateNavSection(selectedNav) {\n      var _this2 = this;\n\n      var selectedNavValue = selectedNav.dataset.leftNavSection;\n      var selectedNavLink = selectedNav.querySelector(this.options.selectorLeftNavSectionLink);\n      var leftNav = this.element.querySelector(this.options.selectorLeftNav);\n      var leftNavSections = this.element.querySelector(this.options.selectorLeftNavSections);\n      selectedNav.classList.remove(this.options.classNavSection);\n      selectedNav.classList.remove(\"\".concat(this.options.classNavSection, \"--\").concat(selectedNavValue));\n      selectedNav.classList.add(this.options.classNavSectionTransition);\n\n      if (leftNavSections.children[0] === selectedNav) {\n        selectedNav.classList.add(\"\".concat(this.options.classNavSectionTransition, \"--50\")); // First child only move 50px\n      } else {\n        selectedNav.classList.add(\"\".concat(this.options.classNavSectionTransition, \"--100\")); // Second move 100px\n      }\n\n      selectedNav.setAttribute('data-left-nav-section', selectedNavValue);\n      /* Not sure what trick more performant */\n\n      setTimeout(function () {\n        selectedNav.classList.add(\"\".concat(_this2.options.classNavSectionTransition, \"--0\"));\n      }, 100); // Could probably use a promise here\n\n      selectedNavLink.classList.remove(this.options.classNavSectionLink);\n      selectedNavLink.classList.add(this.options.classNavHeaderTitle);\n      selectedNavLink.setAttribute('data-left-nav-current-section-title', '');\n      selectedNavLink.removeAttribute('data-left-nav-section-link');\n      this.element.insertBefore(selectedNav, leftNav);\n    }\n    /**\n     * Adds a transitional animation to the navigation items on nav section click\n     */\n\n  }, {\n    key: \"animateNavList\",\n    value: function animateNavList(selectedNavTitle) {\n      var _this3 = this;\n\n      var currentLeftNavList = this.element.querySelector(\"\".concat(this.options.selectorLeftNavList, \":not(\").concat(this.options.selectorLeftNavMainNavHidden, \")\"));\n      var newLeftNavList = this.element.querySelector(\"[data-left-nav-list=\".concat(selectedNavTitle, \"]\"));\n\n      var currentLeftNavItems = _toConsumableArray(currentLeftNavList.querySelectorAll(this.options.selectorLeftNavListItem)).reverse();\n\n      var newLeftNavItems = _toConsumableArray(newLeftNavList.querySelectorAll(this.options.selectorLeftNavListItem));\n\n      var fadeOutTime = 300;\n      var counter = 0;\n      var counterIteration = fadeOutTime / currentLeftNavItems.length; // Length of animation divided by number of items\n\n      currentLeftNavItems.forEach(function (item) {\n        item.setAttribute('tabIndex', '-1');\n        setTimeout(function () {\n          item.classList.add(_this3.options.classItemFade);\n        }, counter);\n        counter += counterIteration;\n      });\n      newLeftNavItems.forEach(function (item) {\n        item.setAttribute('tabIndex', '0');\n        item.classList.remove(_this3.options.classItemFade);\n      });\n      setTimeout(function () {\n        currentLeftNavList.classList.add(_this3.options.classListHidden);\n        currentLeftNavList.classList.add(_this3.options.classListTop);\n        currentLeftNavList.setAttribute('aria-hidden', 'true');\n        newLeftNavList.classList.remove(_this3.options.classListHidden);\n        setTimeout(function () {\n          newLeftNavList.classList.remove(_this3.options.classListTop);\n        }, 100);\n        newLeftNavList.setAttribute('aria-hidden', 'false');\n      }, fadeOutTime + 100); // Wait for items to fade out.\n    }\n  }, {\n    key: \"hookOpenActions\",\n    value: function hookOpenActions() {\n      var _this4 = this;\n\n      var openBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen);\n      var closeBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleClose);\n      this.manage(on(openBtn, 'click', function () {\n        _this4.element.tabIndex = '0';\n\n        _this4.toggleMenu();\n      }));\n      this.manage(on(openBtn, 'keydown', function (evt) {\n        if (evt.which === 13) {\n          _this4.element.tabIndex = '0';\n\n          _this4.toggleMenu();\n        }\n      }));\n\n      if (closeBtn) {\n        this.manage(on(closeBtn, 'click', function () {\n          _this4.element.tabIndex = '-1';\n\n          _this4.closeMenu();\n        }));\n        this.manage(on(closeBtn, 'keydown', function (evt) {\n          if (evt.which === 13) {\n            _this4.element.tabIndex = '-1';\n\n            _this4.closeMenu();\n          }\n        }));\n      }\n\n      this.manage(on(this.element.ownerDocument, 'keydown', function (evt) {\n        if (evt.which === 27 && _this4.element.classList.contains(_this4.options.classActiveLeftNav)) {\n          _this4.closeMenu();\n        }\n      }));\n    }\n    /**\n     * Addes Event listeners to list sections\n     */\n\n  }, {\n    key: \"hookListSectionEvents\",\n    value: function hookListSectionEvents() {\n      var _this5 = this;\n\n      var leftNavSections = this.element.querySelector(this.options.selectorLeftNavSections);\n      this.manage(on(leftNavSections, 'click', function (evt) {\n        _this5.handleSectionItemClick(evt, leftNavSections);\n      }));\n      this.manage(on(leftNavSections, 'keydown', function (evt) {\n        if (evt.which === 13) {\n          _this5.handleSectionItemClick(evt, leftNavSections);\n\n          _this5.element.querySelector(_this5.options.selectorLeftNavCurrentSectionTitle).focus();\n        }\n      }));\n    }\n    /**\n     * Adds event listeners to list items\n     */\n\n  }, {\n    key: \"hookListItemsEvents\",\n    value: function hookListItemsEvents() {\n      var _this6 = this;\n\n      var leftNavList = _toConsumableArray(this.element.querySelectorAll(this.options.selectorLeftNavList));\n\n      leftNavList.forEach(function (list) {\n        _this6.manage(on(list, 'click', function (evt) {\n          var leftNavItem = eventMatches(evt, _this6.options.selectorLeftNavListItem);\n\n          if (leftNavItem) {\n            var childItem = eventMatches(evt, _this6.options.selectorLeftNavNestedListItem);\n            var hasChildren = eventMatches(evt, _this6.options.selectorLeftNavListItemHasChildren);\n            var flyoutItem = eventMatches(evt, _this6.options.selectorLeftNavFlyoutItem);\n\n            if (flyoutItem) {\n              _this6.addActiveListItem(flyoutItem);\n            } else if (childItem) {\n              if (childItem.querySelector(_this6.options.selectorLeftNavFlyoutMenu)) {\n                var flyoutMenu = childItem.querySelector(_this6.options.selectorLeftNavFlyoutMenu);\n                flyoutMenu.classList.toggle(_this6.options.classFlyoutDisplayed);\n              } else {\n                _this6.addActiveListItem(childItem);\n              }\n            } else if (hasChildren) {\n              _this6.handleNestedListClick(leftNavItem);\n            } else {\n              _this6.addActiveListItem(leftNavItem);\n            }\n          }\n        }));\n\n        _this6.manage(on(list, 'keydown', function (evt) {\n          if (evt.which === 13) {\n            var leftNavItem = eventMatches(evt, _this6.options.selectorLeftNavListItem);\n\n            if (leftNavItem) {\n              var childItem = eventMatches(evt, _this6.options.selectorLeftNavNestedListItem);\n              var hasChildren = eventMatches(evt, _this6.options.selectorLeftNavListItemHasChildren);\n              var flyoutItem = eventMatches(evt, _this6.options.selectorLeftNavFlyoutItem);\n              var hasLinkItem = !(leftNavItem.querySelector(_this6.options.selectorLeftNavListItemLink) === undefined);\n\n              if (flyoutItem) {\n                _this6.addActiveListItem(flyoutItem);\n              } else if (childItem) {\n                if (!childItem.querySelector(_this6.options.selectorLeftNavFlyoutMenu)) {\n                  _this6.addActiveListItem(childItem);\n                } else {\n                  childItem.querySelector(_this6.options.selectorLeftNavFlyoutMenu).setAttribute('aria-hidden', 'false');\n                  childItem.querySelector(_this6.options.selectorLeftNavFlyoutMenu).style.top = \"\".concat(childItem.offsetTop - _this6.element.querySelector(_this6.options.selectorLeftNav).scrollTop, \"px\");\n                  childItem.querySelector(_this6.options.selectorLeftNavFlyoutMenu).style.left = \"\".concat(childItem.offsetLeft + Math.round(childItem.offsetWidth), \"px\");\n                }\n              } else if (hasChildren) {\n                _this6.handleNestedListClick(leftNavItem);\n              } else if (hasLinkItem) {\n                var link = leftNavItem.querySelector(_this6.options.selectorLeftNavListItemLink);\n                link.click();\n              } else {\n                _this6.addActiveListItem(leftNavItem);\n              }\n            }\n          }\n        }));\n      });\n\n      var flyouts = _toConsumableArray(this.element.ownerDocument.querySelectorAll(this.options.selectorLeftNavListItemHasFlyout));\n\n      flyouts.forEach(function (flyout) {\n        _this6.manage(on(flyout, 'mouseenter', function () {\n          flyout.querySelector(_this6.options.selectorLeftNavFlyoutMenu).setAttribute('aria-hidden', 'false'); // eslint-disable-next-line no-param-reassign\n\n          flyout.querySelector(_this6.options.selectorLeftNavFlyoutMenu).style.top = \"\".concat(flyout.offsetTop - _this6.element.querySelector(_this6.options.selectorLeftNav).scrollTop, \"px\"); // eslint-disable-next-line no-param-reassign\n\n          flyout.querySelector(_this6.options.selectorLeftNavFlyoutMenu).style.left = \"\".concat(flyout.offsetLeft + Math.round(flyout.offsetWidth), \"px\");\n          flyout.querySelector(_this6.options.selectorLeftNavFlyoutMenu).classList.toggle(_this6.options.classFlyoutDisplayed);\n        }));\n\n        _this6.manage(on(flyout, 'mouseleave', function () {\n          flyout.querySelector(_this6.options.selectorLeftNavFlyoutMenu).setAttribute('aria-hidden', 'true');\n          flyout.querySelector(_this6.options.selectorLeftNavFlyoutMenu).classList.remove(_this6.options.classFlyoutDisplayed);\n        }));\n      });\n    }\n    /**\n     * Hides all flyout menus.\n     */\n\n  }, {\n    key: \"hideAllFlyoutMenus\",\n    value: function hideAllFlyoutMenus() {\n      var _this7 = this;\n\n      var flyoutMenus = _toConsumableArray(this.element.querySelectorAll(this.options.selectorLeftNavFlyoutMenu));\n\n      flyoutMenus.forEach(function (menu) {\n        menu.setAttribute('aria-hidden', 'true');\n        menu.classList.remove(_this7.options.classFlyoutDisplayed);\n      });\n    }\n    /**\n     * Sets a list item as active.\n     * @param {Object} item The active list item.\n     */\n\n  }, {\n    key: \"addActiveListItem\",\n    value: function addActiveListItem(item) {\n      var _this8 = this;\n\n      _toConsumableArray(this.element.querySelectorAll(this.options.selectorLeftNavAllListItems)).forEach(function (currentItem) {\n        if (!(item === currentItem)) {\n          if (!currentItem.contains(item)) {\n            currentItem.classList.remove(_this8.options.classActiveLeftNavListItem);\n          } else {\n            currentItem.classList.add(_this8.options.classActiveLeftNavListItem);\n          }\n        }\n      });\n\n      _toConsumableArray(this.element.querySelectorAll(this.options.selectorLeftNavNestedListItem)).forEach(function (currentItem) {\n        if (!(item === currentItem)) {\n          currentItem.classList.remove(_this8.options.classActiveLeftNavListItem);\n        }\n      });\n\n      item.classList.add(this.options.classActiveLeftNavListItem);\n      this.closeMenu();\n      this.hideAllFlyoutMenus();\n      this.closeMenu();\n    }\n    /**\n     * Handles click on the document.\n     * Closes the left navigation when document is clicked outside the left navigation.\n     * @param {Event} evt The event triggering this method.\n     */\n\n  }, {\n    key: \"handleDocumentClick\",\n    value: function handleDocumentClick(evt) {\n      var clickTarget = evt.target;\n      var isOfSelf = this.element.contains(clickTarget);\n      var isToggleBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen).contains(clickTarget);\n      var isOpen = this.element.classList.contains(this.options.classActiveLeftNav);\n      var isUnifiedHeader = this.element.ownerDocument.querySelector('[data-unified-header]').contains(clickTarget);\n      var shouldClose = !isOfSelf && isOpen && !isToggleBtn && !isUnifiedHeader;\n      var flyoutOpen;\n\n      if (this.element.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n        var leftnavFlyoutMenu = this.element.querySelector(this.options.selectorLeftNavFlyoutMenu);\n        flyoutOpen = leftnavFlyoutMenu.classList.contains(this.options.classFlyoutDisplayed);\n      }\n\n      if (isOfSelf && this.element.tagName === 'A') {\n        evt.preventDefault();\n      }\n\n      if (shouldClose) {\n        this.closeMenu();\n      }\n\n      if (this.element.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n        if (flyoutOpen && !isOfSelf && isOpen) {\n          this.element.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.remove(this.options.classFlyoutDisplayed);\n        }\n      }\n    }\n    /**\n     * Handles click on a list item that contains a nested list in the left navigation.\n     * It hides all flyout menus and switches the tab-index on the list items based on whether or not the list is expanded.\n     * @param {HTMLElement} listItem The list item that was clicked.\n     */\n\n  }, {\n    key: \"handleNestedListClick\",\n    value: function handleNestedListClick(listItem) {\n      var _this9 = this;\n\n      var isOpen = listItem.classList.contains(this.options.classExpandedLeftNavListItem);\n      this.hideAllFlyoutMenus();\n      listItem.classList.toggle(this.options.classExpandedLeftNavListItem, !isOpen);\n\n      var listItems = _toConsumableArray(listItem.querySelectorAll(this.options.selectorLeftNavNestedListItem));\n\n      listItems.forEach(function (item) {\n        if (isOpen) {\n          listItem.querySelector(_this9.options.selectorLeftNavNestedList).setAttribute('aria-hidden', 'true'); // eslint-disable-next-line no-param-reassign\n\n          item.querySelector(_this9.options.selectorLeftNavListItemLink).tabIndex = -1;\n        } else {\n          listItem.querySelector(_this9.options.selectorLeftNavNestedList).setAttribute('aria-hidden', 'false'); // eslint-disable-next-line no-param-reassign\n\n          item.querySelector(_this9.options.selectorLeftNavListItemLink).tabIndex = 0;\n        }\n      });\n    }\n  }, {\n    key: \"handleSectionItemClick\",\n    value: function handleSectionItemClick(evt, leftNavSections) {\n      var _this10 = this;\n\n      // Sorry\n      var leftNavSectionItem = eventMatches(evt, this.options.selectorLeftNavSection);\n\n      if (leftNavSectionItem) {\n        // currently selected\n        var selectedLeftNavSectionItem = this.element.querySelector(this.options.selectorLeftNavCurrentSection);\n        var selectedLeftNavSectionItemTitle = selectedLeftNavSectionItem.querySelector(this.options.selectorLeftNavCurrentSectionTitle);\n        var selectedLeftNavSectionItemIcon = this.element.querySelector(this.options.selectorLeftNavCurrentSectionIcon);\n        var selectedLeftNavSectionItemUse = selectedLeftNavSectionItemIcon.querySelector('use');\n        var selectedLeftNavSectionValue = selectedLeftNavSectionItem.dataset.leftNavCurrentSection; // clicked on item\n\n        var leftNavSectionItemLink = leftNavSectionItem.querySelector(this.options.selectorLeftNavSectionLink);\n        var leftNavSectionItemIcon = leftNavSectionItem.querySelector(this.options.selectorLeftNavSectionIcon);\n        var leftNavSectionItemIconUse = leftNavSectionItemIcon.querySelector('use');\n        var leftNavSectionValue = leftNavSectionItem.dataset.leftNavSection;\n\n        if (this.leftNavSectionActive) {\n          return;\n        }\n\n        this.leftNavSectionActive = true;\n        var newLeftNavSectionItem = document.createElement('li');\n        newLeftNavSectionItem.setAttribute('data-left-nav-section', selectedLeftNavSectionValue);\n        newLeftNavSectionItem.classList.add(this.options.classNavSection);\n        newLeftNavSectionItem.classList.add(\"\".concat(this.options.classNavSection, \"--\").concat(selectedLeftNavSectionValue));\n        var newLeftNavSectionItemAnchor = document.createElement('a');\n        newLeftNavSectionItemAnchor.setAttribute('href', 'javascript:void(0)'); // eslint-disable-line no-script-url\n\n        newLeftNavSectionItemAnchor.setAttribute('tabindex', 0);\n        newLeftNavSectionItemAnchor.classList.add(this.options.classNavSectionAnchor);\n        var newLeftNavSectionItemIcon = selectedLeftNavSectionItemIcon.cloneNode(true); // IE11 doesn't support classList on SVG, must revert to className\n\n        newLeftNavSectionItemIcon.setAttribute('class', this.options.classTaxonomyIcon);\n        newLeftNavSectionItemIcon.removeAttribute('data-left-nav-current-section-icon');\n        newLeftNavSectionItemIcon.setAttribute('data-left-nav-section-icon', selectedLeftNavSectionValue);\n        var newLeftNavSectionItemLink = document.createElement('span');\n        newLeftNavSectionItemLink.setAttribute('data-left-nav-section-link', '');\n        newLeftNavSectionItemLink.classList.add(this.options.classNavSectionLink);\n        newLeftNavSectionItemLink.textContent = selectedLeftNavSectionItemTitle.textContent;\n        this.animateNavSection(leftNavSectionItem);\n        this.animateNavList(leftNavSectionValue);\n        newLeftNavSectionItemAnchor.appendChild(newLeftNavSectionItemIcon);\n        newLeftNavSectionItemAnchor.appendChild(newLeftNavSectionItemLink);\n        newLeftNavSectionItem.appendChild(newLeftNavSectionItemAnchor);\n        leftNavSections.insertBefore(newLeftNavSectionItem, leftNavSections.firstChild);\n        setTimeout(function () {\n          selectedLeftNavSectionItemTitle.textContent = leftNavSectionItemLink.textContent;\n          selectedLeftNavSectionItem.setAttribute('data-left-nav-current-section', leftNavSectionValue);\n          selectedLeftNavSectionItemIcon.setAttribute('data-left-nav-current-section-icon', leftNavSectionValue);\n          selectedLeftNavSectionItemUse.setAttribute('xlink:href', leftNavSectionItemIconUse.getAttribute('xlink:href'));\n          leftNavSectionItem.parentNode.removeChild(leftNavSectionItem); // Cant use .remove() because of IE11\n\n          _this10.leftNavSectionActive = false;\n        }, 450); // Wait for nav items to animate\n      }\n    }\n    /**\n     * The component options.\n     * If `options` is specified in the constructor, {@linkcode LeftNav.create .create()}, or {@linkcode LeftNav.init .init()},\n     * properties in this object are overriden for the instance being create and how {@linkcode LeftNav.init .init()} works.\n     * @member LeftNav.options\n     * @type {Object}\n     * @property {string} selectorInit The CSS selector to find left nav containers.\n     * @property {string} [selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n     * @property {string} [selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n     * @property {string} [selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n     * @property {string} [selectorLeftNavToggle]\n     *   The data attribute selector for the button that will show and hide the left navigation.\n     * @property {string} [selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n     * @property {string} [selectorLeftNavNestedListItem]\n     *   The data attribute selector for all nested list items in the left navigation.\n     * @property {string} [selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n     * @property {string} [selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n     * @property {string} [selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n     * @property {string} [selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n     * @property {string} [selectorLeftNavCurrentPage]\n     *   The data attribute selector for the current section title in the left nav header.\n     * @property {string} [selectorLeftNavMainNavHidden] The CSS selector for the hidden main nav.\n     * @property {string} [classActiveLeftNav] The class name for when a left nav is active.\n     * @property {string} [classActiveLeftNavListItem] The class name for when a left nav list item is active.\n     * @property {string} [classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n     * @property {string} [classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n     * @property {string} [classActiveSection] The class name for an active section item in the left nav header.\n     * @property {string} [classItemHasChildren] The class name for when a list item has children.\n     * @property {string} [classTaxonomyIcon] The class name for the taxonomy icon.\n     */\n\n  }], [{\n    key: \"options\",\n    get: function get() {\n      var prefix = settings.prefix;\n      return {\n        selectorInit: '[data-left-nav-container]',\n        // Data Attribute selectors\n        selectorLeftNav: '[data-left-nav]',\n        selectorLeftNavList: '[data-left-nav-list]',\n        selectorLeftNavNestedList: '[data-left-nav-nested-list]',\n        selectorLeftNavToggleOpen: '[data-left-nav-toggle=\"open\"]',\n        selectorLeftNavToggleClose: '[data-left-nav-toggle=\"close\"]',\n        selectorLeftNavListItem: '[data-left-nav-item]',\n        selectorLeftNavListItemLink: '[data-left-nav-item-link]',\n        selectorLeftNavNestedListItem: '[data-left-nav-nested-item]',\n        selectorLeftNavArrowIcon: '[data-left-nav-icon]',\n        selectorLeftNavFlyoutMenu: '[data-left-nav-flyout]',\n        selectorLeftNavFlyoutItem: '[data-left-nav-flyout-item]',\n        selectorLeftNavSections: '[data-left-nav-sections]',\n        selectorLeftNavSection: '[data-left-nav-section]',\n        selectorLeftNavSectionLink: '[data-left-nav-section-link]',\n        selectorLeftNavSectionIcon: '[data-left-nav-section-icon]',\n        selectorLeftNavCurrentSection: '[data-left-nav-current-section]',\n        selectorLeftNavCurrentSectionTitle: '[data-left-nav-current-section-title]',\n        selectorLeftNavCurrentSectionIcon: '[data-left-nav-current-section-icon]',\n        selectorLeftNavListItemHasChildren: '[data-left-nav-item-with-children]',\n        selectorLeftNavListItemHasFlyout: '[data-left-nav-has-flyout]',\n        selectorLeftNavAllListItems: '[data-left-nav-item], [data-left-nav-nested-item], [data-left-nav-flyout-item]',\n        selectorLeftNavMainNavHidden: \".\".concat(prefix, \"--left-nav__main-nav--hidden\"),\n        // CSS Class Selectors\n        classActiveTrigger: \"\".concat(prefix, \"--left-nav__trigger--active\"),\n        classActiveLeftNav: \"\".concat(prefix, \"--left-nav--active\"),\n        classActiveLeftNavListItem: \"\".concat(prefix, \"--active-list-item\"),\n        classExpandedLeftNavListItem: \"\".concat(prefix, \"--main-nav__parent-item--expanded\"),\n        classFlyoutDisplayed: \"\".concat(prefix, \"--nested-list__flyout-menu--displayed\"),\n        classItemHasChildren: \"\".concat(prefix, \"--main-nav__parent-item--has-children\"),\n        classNavSection: \"\".concat(prefix, \"--left-nav__section\"),\n        classNavSectionTransition: \"\".concat(prefix, \"--left-nav__section--transition\"),\n        classNavSectionAnchor: \"\".concat(prefix, \"--left-nav__section--anchor\"),\n        classNavSectionLink: \"\".concat(prefix, \"--left-nav__section--link\"),\n        classNavHeaderTitle: \"\".concat(prefix, \"--left-nav__header--title\"),\n        classItemFade: \"\".concat(prefix, \"--main-nav__parent-item--fade\"),\n        classItemHidden: \"\".concat(prefix, \"--main-nav__parent-item--hidden\"),\n        classListHidden: \"\".concat(prefix, \"--left-nav__main-nav--hidden\"),\n        classListTop: \"\".concat(prefix, \"--left-nav__main-nav--top\"),\n        classTaxonomyIcon: \"\".concat(prefix, \"--left-nav__section--taxonomy-icon\")\n      };\n    }\n    /**\n     * The map associating DOM element and left navigation instance.\n     * @member LeftNav.components\n     * @type {WeakMap}\n     */\n\n  }]);\n\n  return LeftNav;\n}(mixin(createComponent, initComponentBySearch, handles));\n\nLeftNav.components = new WeakMap();\nexport default LeftNav;","map":{"version":3,"sources":["/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/src/components/unified-header/left-nav.js"],"names":["settings","mixin","createComponent","initComponentBySearch","handles","eventMatches","on","LeftNav","element","options","leftNavSectionActive","hookOpenActions","hookListSectionEvents","hookListItemsEvents","manage","ownerDocument","evt","handleDocumentClick","classList","remove","classActiveLeftNav","toggleOpenNode","querySelector","selectorLeftNavToggleOpen","classActiveTrigger","selectorLeftNav","parentNode","setAttribute","leftNavContainer","toggle","getAttribute","selectedNav","selectedNavValue","dataset","leftNavSection","selectedNavLink","selectorLeftNavSectionLink","leftNav","leftNavSections","selectorLeftNavSections","classNavSection","add","classNavSectionTransition","children","setTimeout","classNavSectionLink","classNavHeaderTitle","removeAttribute","insertBefore","selectedNavTitle","currentLeftNavList","selectorLeftNavList","selectorLeftNavMainNavHidden","newLeftNavList","currentLeftNavItems","querySelectorAll","selectorLeftNavListItem","reverse","newLeftNavItems","fadeOutTime","counter","counterIteration","length","forEach","item","classItemFade","classListHidden","classListTop","openBtn","closeBtn","selectorLeftNavToggleClose","tabIndex","toggleMenu","which","closeMenu","contains","handleSectionItemClick","selectorLeftNavCurrentSectionTitle","focus","leftNavList","list","leftNavItem","childItem","selectorLeftNavNestedListItem","hasChildren","selectorLeftNavListItemHasChildren","flyoutItem","selectorLeftNavFlyoutItem","addActiveListItem","selectorLeftNavFlyoutMenu","flyoutMenu","classFlyoutDisplayed","handleNestedListClick","hasLinkItem","selectorLeftNavListItemLink","undefined","style","top","offsetTop","scrollTop","left","offsetLeft","Math","round","offsetWidth","link","click","flyouts","selectorLeftNavListItemHasFlyout","flyout","flyoutMenus","menu","selectorLeftNavAllListItems","currentItem","classActiveLeftNavListItem","hideAllFlyoutMenus","clickTarget","target","isOfSelf","isToggleBtn","isOpen","isUnifiedHeader","shouldClose","flyoutOpen","leftnavFlyoutMenu","tagName","preventDefault","listItem","classExpandedLeftNavListItem","listItems","selectorLeftNavNestedList","leftNavSectionItem","selectorLeftNavSection","selectedLeftNavSectionItem","selectorLeftNavCurrentSection","selectedLeftNavSectionItemTitle","selectedLeftNavSectionItemIcon","selectorLeftNavCurrentSectionIcon","selectedLeftNavSectionItemUse","selectedLeftNavSectionValue","leftNavCurrentSection","leftNavSectionItemLink","leftNavSectionItemIcon","selectorLeftNavSectionIcon","leftNavSectionItemIconUse","leftNavSectionValue","newLeftNavSectionItem","document","createElement","newLeftNavSectionItemAnchor","classNavSectionAnchor","newLeftNavSectionItemIcon","cloneNode","classTaxonomyIcon","newLeftNavSectionItemLink","textContent","animateNavSection","animateNavList","appendChild","firstChild","removeChild","prefix","selectorInit","selectorLeftNavArrowIcon","classItemHasChildren","classItemHidden","components","WeakMap"],"mappings":"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","sourcesContent":["import settings from '../../globals/js/settings';\nimport mixin from '../../globals/js/misc/mixin';\nimport createComponent from '../../globals/js/mixins/create-component';\nimport initComponentBySearch from '../../globals/js/mixins/init-component-by-search';\nimport handles from '../../globals/js/mixins/handles';\nimport eventMatches from '../../globals/js/misc/event-matches';\nimport on from '../../globals/js/misc/on';\n\nclass LeftNav extends mixin(createComponent, initComponentBySearch, handles) {\n  /**\n   * Left Navigation.\n   * @extends CreateComponent\n   * @extends InitComponentBySearch\n   * @extends Handles\n   * @param {HTMLElement} element The element working as a left navigation.\n   * @param {Object} [options] The component options\n   * @param {string} [options.selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n   * @param {string} [options.selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n   * @param {string} [options.selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n   * @param {string} [options.selectorLeftNavToggle]\n   *   The data attribute selector for the button that will show and hide the left navigation.\n   * @param {string} [options.selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n   * @param {string} [options.selectorLeftNavNestedListItem]\n   *   The data attribute selector for all nested list items in the left navigation.\n   * @param {string} [options.selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n   * @param {string} [options.selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n   * @param {string} [options.selectorLeftNavSection]\n   *   The data attribute selector for the three sections in the header of the left nav.\n   * @param {string} [options.selectorLeftNavCurrentPage]\n   *   The data attribute selector for the current section title in the left nav header.\n   * @param {string} [options.selectorLeftNavMainNavHidden] The CSS selector for the hidden main nav.\n   * @param {string} [options.classActiveLeftNav] The class name for when a left nav is active.\n   * @param {string} [options.classActiveLeftNavListItem] The class name for when a left nav list item is active.\n   * @param {string} [options.classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n   * @param {string} [options.classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n   * @param {string} [options.classActiveSection] The class name for an active section item in the left nav header.\n   * @param {string} [options.classItemHasChildren] The class name for when a list item has children.\n   * @param {string} [options.classTaxonomyIcon] The class name for the taxonomy icon.\n   */\n  constructor(element, options) {\n    super(element, options);\n    this.leftNavSectionActive = false;\n    this.hookOpenActions();\n    this.hookListSectionEvents();\n    this.hookListItemsEvents();\n    this.manage(\n      on(this.element.ownerDocument, 'click', evt => {\n        this.handleDocumentClick(evt);\n      })\n    );\n  }\n\n  /**\n   * Closes the menu.\n   */\n  closeMenu() {\n    this.element.classList.remove(this.options.classActiveLeftNav);\n    const toggleOpenNode = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen);\n    toggleOpenNode.classList.remove(this.options.classActiveTrigger);\n    this.element.querySelector(this.options.selectorLeftNav).parentNode.setAttribute('aria-expanded', 'false');\n  }\n\n  /**\n   * Toggles the menu to open and close.\n   */\n  toggleMenu() {\n    const leftNavContainer = this.element.querySelector(this.options.selectorLeftNav).parentNode;\n    this.element.classList.toggle(this.options.classActiveLeftNav);\n    const toggleOpenNode = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen);\n    toggleOpenNode.classList.toggle(this.options.classActiveTrigger);\n    if (leftNavContainer.getAttribute('aria-expanded') === 'false') leftNavContainer.setAttribute('aria-expanded', 'true');\n    else leftNavContainer.setAttribute('aria-expanded', 'false');\n  }\n\n  /**\n   * Adds a transitional animation to the navSection\n   */\n  animateNavSection(selectedNav) {\n    const selectedNavValue = selectedNav.dataset.leftNavSection;\n    const selectedNavLink = selectedNav.querySelector(this.options.selectorLeftNavSectionLink);\n    const leftNav = this.element.querySelector(this.options.selectorLeftNav);\n    const leftNavSections = this.element.querySelector(this.options.selectorLeftNavSections);\n\n    selectedNav.classList.remove(this.options.classNavSection);\n    selectedNav.classList.remove(`${this.options.classNavSection}--${selectedNavValue}`);\n    selectedNav.classList.add(this.options.classNavSectionTransition);\n    if (leftNavSections.children[0] === selectedNav) {\n      selectedNav.classList.add(`${this.options.classNavSectionTransition}--50`); // First child only move 50px\n    } else {\n      selectedNav.classList.add(`${this.options.classNavSectionTransition}--100`); // Second move 100px\n    }\n    selectedNav.setAttribute('data-left-nav-section', selectedNavValue);\n    /* Not sure what trick more performant */\n    setTimeout(() => {\n      selectedNav.classList.add(`${this.options.classNavSectionTransition}--0`);\n    }, 100); // Could probably use a promise here\n\n    selectedNavLink.classList.remove(this.options.classNavSectionLink);\n    selectedNavLink.classList.add(this.options.classNavHeaderTitle);\n    selectedNavLink.setAttribute('data-left-nav-current-section-title', '');\n    selectedNavLink.removeAttribute('data-left-nav-section-link');\n\n    this.element.insertBefore(selectedNav, leftNav);\n  }\n\n  /**\n   * Adds a transitional animation to the navigation items on nav section click\n   */\n  animateNavList(selectedNavTitle) {\n    const currentLeftNavList = this.element.querySelector(\n      `${this.options.selectorLeftNavList}:not(${this.options.selectorLeftNavMainNavHidden})`\n    );\n    const newLeftNavList = this.element.querySelector(`[data-left-nav-list=${selectedNavTitle}]`);\n    const currentLeftNavItems = [...currentLeftNavList.querySelectorAll(this.options.selectorLeftNavListItem)].reverse();\n    const newLeftNavItems = [...newLeftNavList.querySelectorAll(this.options.selectorLeftNavListItem)];\n\n    const fadeOutTime = 300;\n    let counter = 0;\n    const counterIteration = fadeOutTime / currentLeftNavItems.length; // Length of animation divided by number of items\n    currentLeftNavItems.forEach(item => {\n      item.setAttribute('tabIndex', '-1');\n      setTimeout(() => {\n        item.classList.add(this.options.classItemFade);\n      }, counter);\n      counter += counterIteration;\n    });\n\n    newLeftNavItems.forEach(item => {\n      item.setAttribute('tabIndex', '0');\n      item.classList.remove(this.options.classItemFade);\n    });\n\n    setTimeout(() => {\n      currentLeftNavList.classList.add(this.options.classListHidden);\n      currentLeftNavList.classList.add(this.options.classListTop);\n      currentLeftNavList.setAttribute('aria-hidden', 'true');\n      newLeftNavList.classList.remove(this.options.classListHidden);\n      setTimeout(() => {\n        newLeftNavList.classList.remove(this.options.classListTop);\n      }, 100);\n      newLeftNavList.setAttribute('aria-hidden', 'false');\n    }, fadeOutTime + 100); // Wait for items to fade out.\n  }\n\n  hookOpenActions() {\n    const openBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen);\n    const closeBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleClose);\n\n    this.manage(\n      on(openBtn, 'click', () => {\n        this.element.tabIndex = '0';\n        this.toggleMenu();\n      })\n    );\n\n    this.manage(\n      on(openBtn, 'keydown', evt => {\n        if (evt.which === 13) {\n          this.element.tabIndex = '0';\n          this.toggleMenu();\n        }\n      })\n    );\n\n    if (closeBtn) {\n      this.manage(\n        on(closeBtn, 'click', () => {\n          this.element.tabIndex = '-1';\n          this.closeMenu();\n        })\n      );\n\n      this.manage(\n        on(closeBtn, 'keydown', evt => {\n          if (evt.which === 13) {\n            this.element.tabIndex = '-1';\n            this.closeMenu();\n          }\n        })\n      );\n    }\n\n    this.manage(\n      on(this.element.ownerDocument, 'keydown', evt => {\n        if (evt.which === 27 && this.element.classList.contains(this.options.classActiveLeftNav)) {\n          this.closeMenu();\n        }\n      })\n    );\n  }\n\n  /**\n   * Addes Event listeners to list sections\n   */\n  hookListSectionEvents() {\n    const leftNavSections = this.element.querySelector(this.options.selectorLeftNavSections);\n    this.manage(\n      on(leftNavSections, 'click', evt => {\n        this.handleSectionItemClick(evt, leftNavSections);\n      })\n    );\n\n    this.manage(\n      on(leftNavSections, 'keydown', evt => {\n        if (evt.which === 13) {\n          this.handleSectionItemClick(evt, leftNavSections);\n          this.element.querySelector(this.options.selectorLeftNavCurrentSectionTitle).focus();\n        }\n      })\n    );\n  }\n\n  /**\n   * Adds event listeners to list items\n   */\n  hookListItemsEvents() {\n    const leftNavList = [...this.element.querySelectorAll(this.options.selectorLeftNavList)];\n    leftNavList.forEach(list => {\n      this.manage(\n        on(list, 'click', evt => {\n          const leftNavItem = eventMatches(evt, this.options.selectorLeftNavListItem);\n          if (leftNavItem) {\n            const childItem = eventMatches(evt, this.options.selectorLeftNavNestedListItem);\n            const hasChildren = eventMatches(evt, this.options.selectorLeftNavListItemHasChildren);\n            const flyoutItem = eventMatches(evt, this.options.selectorLeftNavFlyoutItem);\n            if (flyoutItem) {\n              this.addActiveListItem(flyoutItem);\n            } else if (childItem) {\n              if (childItem.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n                const flyoutMenu = childItem.querySelector(this.options.selectorLeftNavFlyoutMenu);\n                flyoutMenu.classList.toggle(this.options.classFlyoutDisplayed);\n              } else {\n                this.addActiveListItem(childItem);\n              }\n            } else if (hasChildren) {\n              this.handleNestedListClick(leftNavItem);\n            } else {\n              this.addActiveListItem(leftNavItem);\n            }\n          }\n        })\n      );\n      this.manage(\n        on(list, 'keydown', evt => {\n          if (evt.which === 13) {\n            const leftNavItem = eventMatches(evt, this.options.selectorLeftNavListItem);\n            if (leftNavItem) {\n              const childItem = eventMatches(evt, this.options.selectorLeftNavNestedListItem);\n              const hasChildren = eventMatches(evt, this.options.selectorLeftNavListItemHasChildren);\n              const flyoutItem = eventMatches(evt, this.options.selectorLeftNavFlyoutItem);\n              const hasLinkItem = !(leftNavItem.querySelector(this.options.selectorLeftNavListItemLink) === undefined);\n              if (flyoutItem) {\n                this.addActiveListItem(flyoutItem);\n              } else if (childItem) {\n                if (!childItem.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n                  this.addActiveListItem(childItem);\n                } else {\n                  childItem.querySelector(this.options.selectorLeftNavFlyoutMenu).setAttribute('aria-hidden', 'false');\n                  childItem.querySelector(this.options.selectorLeftNavFlyoutMenu).style.top = `${childItem.offsetTop -\n                    this.element.querySelector(this.options.selectorLeftNav).scrollTop}px`;\n                  childItem.querySelector(this.options.selectorLeftNavFlyoutMenu).style.left = `${childItem.offsetLeft +\n                    Math.round(childItem.offsetWidth)}px`;\n                }\n              } else if (hasChildren) {\n                this.handleNestedListClick(leftNavItem);\n              } else if (hasLinkItem) {\n                const link = leftNavItem.querySelector(this.options.selectorLeftNavListItemLink);\n                link.click();\n              } else {\n                this.addActiveListItem(leftNavItem);\n              }\n            }\n          }\n        })\n      );\n    });\n    const flyouts = [...this.element.ownerDocument.querySelectorAll(this.options.selectorLeftNavListItemHasFlyout)];\n    flyouts.forEach(flyout => {\n      this.manage(\n        on(flyout, 'mouseenter', () => {\n          flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).setAttribute('aria-hidden', 'false');\n          // eslint-disable-next-line no-param-reassign\n          flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).style.top = `${flyout.offsetTop -\n            this.element.querySelector(this.options.selectorLeftNav).scrollTop}px`;\n          // eslint-disable-next-line no-param-reassign\n          flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).style.left = `${flyout.offsetLeft +\n            Math.round(flyout.offsetWidth)}px`;\n          flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.toggle(this.options.classFlyoutDisplayed);\n        })\n      );\n      this.manage(\n        on(flyout, 'mouseleave', () => {\n          flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).setAttribute('aria-hidden', 'true');\n          flyout.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.remove(this.options.classFlyoutDisplayed);\n        })\n      );\n    });\n  }\n\n  /**\n   * Hides all flyout menus.\n   */\n  hideAllFlyoutMenus() {\n    const flyoutMenus = [...this.element.querySelectorAll(this.options.selectorLeftNavFlyoutMenu)];\n    flyoutMenus.forEach(menu => {\n      menu.setAttribute('aria-hidden', 'true');\n      menu.classList.remove(this.options.classFlyoutDisplayed);\n    });\n  }\n\n  /**\n   * Sets a list item as active.\n   * @param {Object} item The active list item.\n   */\n  addActiveListItem(item) {\n    [...this.element.querySelectorAll(this.options.selectorLeftNavAllListItems)].forEach(currentItem => {\n      if (!(item === currentItem)) {\n        if (!currentItem.contains(item)) {\n          currentItem.classList.remove(this.options.classActiveLeftNavListItem);\n        } else {\n          currentItem.classList.add(this.options.classActiveLeftNavListItem);\n        }\n      }\n    });\n    [...this.element.querySelectorAll(this.options.selectorLeftNavNestedListItem)].forEach(currentItem => {\n      if (!(item === currentItem)) {\n        currentItem.classList.remove(this.options.classActiveLeftNavListItem);\n      }\n    });\n    item.classList.add(this.options.classActiveLeftNavListItem);\n    this.closeMenu();\n    this.hideAllFlyoutMenus();\n    this.closeMenu();\n  }\n\n  /**\n   * Handles click on the document.\n   * Closes the left navigation when document is clicked outside the left navigation.\n   * @param {Event} evt The event triggering this method.\n   */\n  handleDocumentClick(evt) {\n    const clickTarget = evt.target;\n    const isOfSelf = this.element.contains(clickTarget);\n    const isToggleBtn = this.element.ownerDocument.querySelector(this.options.selectorLeftNavToggleOpen).contains(clickTarget);\n    const isOpen = this.element.classList.contains(this.options.classActiveLeftNav);\n    const isUnifiedHeader = this.element.ownerDocument.querySelector('[data-unified-header]').contains(clickTarget);\n    const shouldClose = !isOfSelf && isOpen && !isToggleBtn && !isUnifiedHeader;\n    let flyoutOpen;\n    if (this.element.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n      const leftnavFlyoutMenu = this.element.querySelector(this.options.selectorLeftNavFlyoutMenu);\n      flyoutOpen = leftnavFlyoutMenu.classList.contains(this.options.classFlyoutDisplayed);\n    }\n    if (isOfSelf && this.element.tagName === 'A') {\n      evt.preventDefault();\n    }\n    if (shouldClose) {\n      this.closeMenu();\n    }\n    if (this.element.querySelector(this.options.selectorLeftNavFlyoutMenu)) {\n      if (flyoutOpen && !isOfSelf && isOpen) {\n        this.element.querySelector(this.options.selectorLeftNavFlyoutMenu).classList.remove(this.options.classFlyoutDisplayed);\n      }\n    }\n  }\n\n  /**\n   * Handles click on a list item that contains a nested list in the left navigation.\n   * It hides all flyout menus and switches the tab-index on the list items based on whether or not the list is expanded.\n   * @param {HTMLElement} listItem The list item that was clicked.\n   */\n  handleNestedListClick(listItem) {\n    const isOpen = listItem.classList.contains(this.options.classExpandedLeftNavListItem);\n    this.hideAllFlyoutMenus();\n    listItem.classList.toggle(this.options.classExpandedLeftNavListItem, !isOpen);\n    const listItems = [...listItem.querySelectorAll(this.options.selectorLeftNavNestedListItem)];\n    listItems.forEach(item => {\n      if (isOpen) {\n        listItem.querySelector(this.options.selectorLeftNavNestedList).setAttribute('aria-hidden', 'true');\n        // eslint-disable-next-line no-param-reassign\n        item.querySelector(this.options.selectorLeftNavListItemLink).tabIndex = -1;\n      } else {\n        listItem.querySelector(this.options.selectorLeftNavNestedList).setAttribute('aria-hidden', 'false');\n        // eslint-disable-next-line no-param-reassign\n        item.querySelector(this.options.selectorLeftNavListItemLink).tabIndex = 0;\n      }\n    });\n  }\n\n  handleSectionItemClick(evt, leftNavSections) {\n    // Sorry\n    const leftNavSectionItem = eventMatches(evt, this.options.selectorLeftNavSection);\n    if (leftNavSectionItem) {\n      // currently selected\n      const selectedLeftNavSectionItem = this.element.querySelector(this.options.selectorLeftNavCurrentSection);\n      const selectedLeftNavSectionItemTitle = selectedLeftNavSectionItem.querySelector(\n        this.options.selectorLeftNavCurrentSectionTitle\n      );\n      const selectedLeftNavSectionItemIcon = this.element.querySelector(this.options.selectorLeftNavCurrentSectionIcon);\n      const selectedLeftNavSectionItemUse = selectedLeftNavSectionItemIcon.querySelector('use');\n      const selectedLeftNavSectionValue = selectedLeftNavSectionItem.dataset.leftNavCurrentSection;\n\n      // clicked on item\n      const leftNavSectionItemLink = leftNavSectionItem.querySelector(this.options.selectorLeftNavSectionLink);\n      const leftNavSectionItemIcon = leftNavSectionItem.querySelector(this.options.selectorLeftNavSectionIcon);\n      const leftNavSectionItemIconUse = leftNavSectionItemIcon.querySelector('use');\n      const leftNavSectionValue = leftNavSectionItem.dataset.leftNavSection;\n\n      if (this.leftNavSectionActive) {\n        return;\n      }\n      this.leftNavSectionActive = true;\n\n      const newLeftNavSectionItem = document.createElement('li');\n      newLeftNavSectionItem.setAttribute('data-left-nav-section', selectedLeftNavSectionValue);\n      newLeftNavSectionItem.classList.add(this.options.classNavSection);\n      newLeftNavSectionItem.classList.add(`${this.options.classNavSection}--${selectedLeftNavSectionValue}`);\n\n      const newLeftNavSectionItemAnchor = document.createElement('a');\n      newLeftNavSectionItemAnchor.setAttribute('href', 'javascript:void(0)'); // eslint-disable-line no-script-url\n      newLeftNavSectionItemAnchor.setAttribute('tabindex', 0);\n      newLeftNavSectionItemAnchor.classList.add(this.options.classNavSectionAnchor);\n\n      const newLeftNavSectionItemIcon = selectedLeftNavSectionItemIcon.cloneNode(true);\n      // IE11 doesn't support classList on SVG, must revert to className\n      newLeftNavSectionItemIcon.setAttribute('class', this.options.classTaxonomyIcon);\n      newLeftNavSectionItemIcon.removeAttribute('data-left-nav-current-section-icon');\n      newLeftNavSectionItemIcon.setAttribute('data-left-nav-section-icon', selectedLeftNavSectionValue);\n\n      const newLeftNavSectionItemLink = document.createElement('span');\n      newLeftNavSectionItemLink.setAttribute('data-left-nav-section-link', '');\n      newLeftNavSectionItemLink.classList.add(this.options.classNavSectionLink);\n      newLeftNavSectionItemLink.textContent = selectedLeftNavSectionItemTitle.textContent;\n\n      this.animateNavSection(leftNavSectionItem);\n      this.animateNavList(leftNavSectionValue);\n\n      newLeftNavSectionItemAnchor.appendChild(newLeftNavSectionItemIcon);\n      newLeftNavSectionItemAnchor.appendChild(newLeftNavSectionItemLink);\n      newLeftNavSectionItem.appendChild(newLeftNavSectionItemAnchor);\n      leftNavSections.insertBefore(newLeftNavSectionItem, leftNavSections.firstChild);\n\n      setTimeout(() => {\n        selectedLeftNavSectionItemTitle.textContent = leftNavSectionItemLink.textContent;\n        selectedLeftNavSectionItem.setAttribute('data-left-nav-current-section', leftNavSectionValue);\n        selectedLeftNavSectionItemIcon.setAttribute('data-left-nav-current-section-icon', leftNavSectionValue);\n        selectedLeftNavSectionItemUse.setAttribute('xlink:href', leftNavSectionItemIconUse.getAttribute('xlink:href'));\n\n        leftNavSectionItem.parentNode.removeChild(leftNavSectionItem); // Cant use .remove() because of IE11\n        this.leftNavSectionActive = false;\n      }, 450); // Wait for nav items to animate\n    }\n  }\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode LeftNav.create .create()}, or {@linkcode LeftNav.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode LeftNav.init .init()} works.\n   * @member LeftNav.options\n   * @type {Object}\n   * @property {string} selectorInit The CSS selector to find left nav containers.\n   * @property {string} [selectorLeftNav] The data attribute selector for the nav element in the left nav container.\n   * @property {string} [selectorLeftNavList] The data attribute selector for the main ul element in the left nav.\n   * @property {string} [selectorLeftNavNestedList] The data attribute selector for the nested ul elements in the left nav.\n   * @property {string} [selectorLeftNavToggle]\n   *   The data attribute selector for the button that will show and hide the left navigation.\n   * @property {string} [selectorLeftNavListItem] The data attribute selector for all list items in the left navigation.\n   * @property {string} [selectorLeftNavNestedListItem]\n   *   The data attribute selector for all nested list items in the left navigation.\n   * @property {string} [selectorLeftNavArrowIcon] The data attribute selector for the arrow icons in the left nav.\n   * @property {string} [selectorLeftNavFlyoutMenu] The data attribute selector for the flyout menus in the left nav.\n   * @property {string} [selectorLeftNavFlyoutItem] The data attribute selector for the flyout menu items in the left nav.\n   * @property {string} [selectorLeftNavSection] The data attribute selector for the three sections in the header of the left nav.\n   * @property {string} [selectorLeftNavCurrentPage]\n   *   The data attribute selector for the current section title in the left nav header.\n   * @property {string} [selectorLeftNavMainNavHidden] The CSS selector for the hidden main nav.\n   * @property {string} [classActiveLeftNav] The class name for when a left nav is active.\n   * @property {string} [classActiveLeftNavListItem] The class name for when a left nav list item is active.\n   * @property {string} [classExpandedLeftNavListItem] The class name for when a nested list is expanded.\n   * @property {string} [classFlyoutDisplayed] The class name for when a flyout menu is displayed.\n   * @property {string} [classActiveSection] The class name for an active section item in the left nav header.\n   * @property {string} [classItemHasChildren] The class name for when a list item has children.\n   * @property {string} [classTaxonomyIcon] The class name for the taxonomy icon.\n   */\n  static get options() {\n    const { prefix } = settings;\n    return {\n      selectorInit: '[data-left-nav-container]',\n      // Data Attribute selectors\n      selectorLeftNav: '[data-left-nav]',\n      selectorLeftNavList: '[data-left-nav-list]',\n      selectorLeftNavNestedList: '[data-left-nav-nested-list]',\n      selectorLeftNavToggleOpen: '[data-left-nav-toggle=\"open\"]',\n      selectorLeftNavToggleClose: '[data-left-nav-toggle=\"close\"]',\n      selectorLeftNavListItem: '[data-left-nav-item]',\n      selectorLeftNavListItemLink: '[data-left-nav-item-link]',\n      selectorLeftNavNestedListItem: '[data-left-nav-nested-item]',\n      selectorLeftNavArrowIcon: '[data-left-nav-icon]',\n      selectorLeftNavFlyoutMenu: '[data-left-nav-flyout]',\n      selectorLeftNavFlyoutItem: '[data-left-nav-flyout-item]',\n      selectorLeftNavSections: '[data-left-nav-sections]',\n      selectorLeftNavSection: '[data-left-nav-section]',\n      selectorLeftNavSectionLink: '[data-left-nav-section-link]',\n      selectorLeftNavSectionIcon: '[data-left-nav-section-icon]',\n      selectorLeftNavCurrentSection: '[data-left-nav-current-section]',\n      selectorLeftNavCurrentSectionTitle: '[data-left-nav-current-section-title]',\n      selectorLeftNavCurrentSectionIcon: '[data-left-nav-current-section-icon]',\n      selectorLeftNavListItemHasChildren: '[data-left-nav-item-with-children]',\n      selectorLeftNavListItemHasFlyout: '[data-left-nav-has-flyout]',\n      selectorLeftNavAllListItems: '[data-left-nav-item], [data-left-nav-nested-item], [data-left-nav-flyout-item]',\n      selectorLeftNavMainNavHidden: `.${prefix}--left-nav__main-nav--hidden`,\n      // CSS Class Selectors\n      classActiveTrigger: `${prefix}--left-nav__trigger--active`,\n      classActiveLeftNav: `${prefix}--left-nav--active`,\n      classActiveLeftNavListItem: `${prefix}--active-list-item`,\n      classExpandedLeftNavListItem: `${prefix}--main-nav__parent-item--expanded`,\n      classFlyoutDisplayed: `${prefix}--nested-list__flyout-menu--displayed`,\n      classItemHasChildren: `${prefix}--main-nav__parent-item--has-children`,\n      classNavSection: `${prefix}--left-nav__section`,\n      classNavSectionTransition: `${prefix}--left-nav__section--transition`,\n      classNavSectionAnchor: `${prefix}--left-nav__section--anchor`,\n      classNavSectionLink: `${prefix}--left-nav__section--link`,\n      classNavHeaderTitle: `${prefix}--left-nav__header--title`,\n      classItemFade: `${prefix}--main-nav__parent-item--fade`,\n      classItemHidden: `${prefix}--main-nav__parent-item--hidden`,\n      classListHidden: `${prefix}--left-nav__main-nav--hidden`,\n      classListTop: `${prefix}--left-nav__main-nav--top`,\n      classTaxonomyIcon: `${prefix}--left-nav__section--taxonomy-icon`,\n    };\n  }\n\n  /**\n   * The map associating DOM element and left navigation instance.\n   * @member LeftNav.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n}\n\nexport default LeftNav;\n"]},"metadata":{},"sourceType":"module"}