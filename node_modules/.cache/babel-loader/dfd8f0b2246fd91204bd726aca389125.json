{"ast":null,"code":"import _toConsumableArray from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport settings from '../../globals/js/settings';\nimport mixin from '../../globals/js/misc/mixin';\nimport createComponent from '../../globals/js/mixins/create-component';\nimport initComponentBySearch from '../../globals/js/mixins/init-component-by-search';\nimport eventedState from '../../globals/js/mixins/evented-state';\nimport eventMatches from '../../globals/js/misc/event-matches';\n\nvar DataTableV2 =\n/*#__PURE__*/\nfunction (_mixin) {\n  _inherits(DataTableV2, _mixin);\n\n  /**\n   * Data Table\n   * @extends CreateComponent\n   * @extends InitComponentBySearch\n   * @extends   EventedState\n   * @param {HTMLElement} element The root element of tables\n   * @param {Object} [options] the... options\n   * @param {string} [options.selectorInit] selector initialization\n   * @param {string} [options.selectorExpandCells] css selector for expand\n   * @param {string} [options.expandableRow] css selector for expand\n   * @param {string} [options.selectorParentRows] css selector for rows housing expansion\n   * @param {string} [options.selectorTableBody] root css for table body\n   * @param {string} [options.eventTrigger] selector for event bubble capture points\n   * @param {string} [options.eventParentContainer] used find the bubble container\n   */\n  function DataTableV2(_element, options) {\n    var _this;\n\n    _classCallCheck(this, DataTableV2);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataTableV2).call(this, _element, options));\n\n    _this._sortToggle = function (detail) {\n      var element = detail.element,\n          previousValue = detail.previousValue;\n\n      _toConsumableArray(_this.tableHeaders).forEach(function (header) {\n        var sortEl = header.querySelector(_this.options.selectorTableSort);\n\n        if (sortEl !== null && sortEl !== element) {\n          sortEl.classList.remove(_this.options.classTableSortActive);\n          sortEl.classList.remove(_this.options.classTableSortAscending);\n        }\n      });\n\n      if (!previousValue || previousValue === 'descending') {\n        element.dataset.previousValue = 'ascending';\n        element.classList.add(_this.options.classTableSortActive);\n        element.classList.add(_this.options.classTableSortAscending);\n      } else {\n        element.dataset.previousValue = 'descending';\n        element.classList.add(_this.options.classTableSortActive);\n        element.classList.remove(_this.options.classTableSortAscending);\n      }\n    };\n\n    _this._selectToggle = function (detail) {\n      var element = detail.element;\n      var checked = element.checked; // increment the  count\n\n      _this.state.checkboxCount += checked ? 1 : -1;\n      _this.countEl.textContent = _this.state.checkboxCount;\n      var row = element.parentNode.parentNode;\n      row.classList.toggle(_this.options.classTableSelected); // toggle on/off batch action bar\n\n      _this._actionBarToggle(_this.state.checkboxCount > 0);\n    };\n\n    _this._selectAllToggle = function (detail) {\n      var checked = detail.element.checked;\n\n      var inputs = _toConsumableArray(_this.element.querySelectorAll(_this.options.selectorCheckbox));\n\n      _this.state.checkboxCount = checked ? inputs.length - 1 : 0;\n      inputs.forEach(function (item) {\n        item.checked = checked;\n        var row = item.parentNode.parentNode;\n\n        if (checked && row) {\n          row.classList.add(_this.options.classTableSelected);\n        } else {\n          row.classList.remove(_this.options.classTableSelected);\n        }\n      });\n\n      _this._actionBarToggle(_this.state.checkboxCount > 0);\n\n      if (_this.batchActionEl) {\n        _this.countEl.textContent = _this.state.checkboxCount;\n      }\n    };\n\n    _this._actionBarCancel = function () {\n      var inputs = _toConsumableArray(_this.element.querySelectorAll(_this.options.selectorCheckbox));\n\n      var row = _toConsumableArray(_this.element.querySelectorAll(_this.options.selectorTableSelected));\n\n      row.forEach(function (item) {\n        item.classList.remove(_this.options.classTableSelected);\n      });\n      inputs.forEach(function (item) {\n        item.checked = false;\n      });\n      _this.state.checkboxCount = 0;\n\n      _this._actionBarToggle(false);\n\n      if (_this.batchActionEl) {\n        _this.countEl.textContent = _this.state.checkboxCount;\n      }\n    };\n\n    _this._actionBarToggle = function (toggleOn) {\n      var transition = function transition(evt) {\n        _this.batchActionEl.removeEventListener('transitionend', transition);\n\n        if (evt.target.matches(_this.options.selectorActions)) {\n          if (_this.batchActionEl.dataset.active === 'false') {\n            _this.batchActionEl.setAttribute('tabIndex', -1);\n          } else {\n            _this.batchActionEl.setAttribute('tabIndex', 0);\n          }\n        }\n      };\n\n      if (toggleOn) {\n        _this.batchActionEl.dataset.active = true;\n\n        _this.batchActionEl.classList.add(_this.options.classActionBarActive);\n      } else if (_this.batchActionEl) {\n        _this.batchActionEl.dataset.active = false;\n\n        _this.batchActionEl.classList.remove(_this.options.classActionBarActive);\n      }\n\n      if (_this.batchActionEl) {\n        _this.batchActionEl.addEventListener('transitionend', transition);\n      }\n    };\n\n    _this._expandableRowsInit = function (expandableRows) {\n      expandableRows.forEach(function (item) {\n        item.classList.remove(_this.options.classExpandableRowHidden);\n\n        _this.tableBody.removeChild(item);\n      });\n    };\n\n    _this._rowExpandToggle = function (detail) {\n      var element = detail.element;\n      var parent = eventMatches(detail.initialEvt, _this.options.eventParentContainer);\n\n      var index = _this.expandCells.indexOf(element);\n\n      if (element.dataset.previousValue === undefined || element.dataset.previousValue === 'expanded') {\n        element.dataset.previousValue = 'collapsed';\n        parent.classList.add(_this.options.classExpandableRow);\n\n        _this.tableBody.insertBefore(_this.expandableRows[index], _this.parentRows[index + 1]);\n      } else {\n        parent.classList.remove(_this.options.classExpandableRow);\n\n        _this.tableBody.removeChild(parent.nextElementSibling);\n\n        element.dataset.previousValue = 'expanded';\n      }\n    };\n\n    _this._expandableHoverToggle = function (element) {\n      element.previousElementSibling.classList.add(_this.options.classExpandableRowHover);\n\n      var mouseout = function mouseout() {\n        element.previousElementSibling.classList.remove(_this.options.classExpandableRowHover);\n        element.removeEventListener('mouseout', mouseout);\n      };\n\n      element.addEventListener('mouseout', mouseout);\n    };\n\n    _this._toggleState = function (element, evt) {\n      var data = element.dataset;\n      var label = data.label ? data.label : '';\n      var previousValue = data.previousValue ? data.previousValue : '';\n      var initialEvt = evt;\n\n      _this.changeState({\n        group: data.event,\n        element: element,\n        label: label,\n        previousValue: previousValue,\n        initialEvt: initialEvt\n      });\n    };\n\n    _this._keydownHandler = function (evt) {\n      if (evt.which === 27) {\n        _this._actionBarCancel();\n      }\n    };\n\n    _this.refreshRows = function () {\n      var newExpandCells = _toConsumableArray(_this.element.querySelectorAll(_this.options.selectorExpandCells));\n\n      var newExpandableRows = _toConsumableArray(_this.element.querySelectorAll(_this.options.selectorExpandableRows));\n\n      var newParentRows = _toConsumableArray(_this.element.querySelectorAll(_this.options.selectorParentRows)); // check if this is a refresh or the first time\n\n\n      if (_this.parentRows.length > 0) {\n        var diffParentRows = newParentRows.filter(function (newRow) {\n          return !_this.parentRows.some(function (oldRow) {\n            return oldRow === newRow;\n          });\n        }); // check if there are expandable rows\n\n        if (newExpandableRows.length > 0) {\n          var diffExpandableRows = diffParentRows.map(function (newRow) {\n            return newRow.nextElementSibling;\n          });\n\n          var mergedExpandableRows = _toConsumableArray(_this.expandableRows).concat(_toConsumableArray(diffExpandableRows));\n\n          _this._expandableRowsInit(diffExpandableRows);\n\n          _this.expandableRows = mergedExpandableRows;\n        }\n      } else if (newExpandableRows.length > 0) {\n        _this._expandableRowsInit(newExpandableRows);\n\n        _this.expandableRows = newExpandableRows;\n      }\n\n      _this.expandCells = newExpandCells;\n      _this.parentRows = newParentRows;\n    };\n\n    _this.container = _element.parentNode;\n    _this.toolbarEl = _this.element.querySelector(_this.options.selectorToolbar);\n    _this.batchActionEl = _this.element.querySelector(_this.options.selectorActions);\n    _this.countEl = _this.element.querySelector(_this.options.selectorCount);\n    _this.cancelEl = _this.element.querySelector(_this.options.selectorActionCancel);\n    _this.tableHeaders = _this.element.querySelectorAll('th');\n    _this.tableBody = _this.element.querySelector(_this.options.selectorTableBody);\n    _this.expandCells = [];\n    _this.expandableRows = [];\n    _this.parentRows = [];\n\n    _this.refreshRows();\n\n    _this.element.addEventListener('mouseover', function (evt) {\n      var eventElement = eventMatches(evt, _this.options.selectorChildRow);\n\n      if (eventElement) {\n        _this._expandableHoverToggle(eventElement, true);\n      }\n    });\n\n    _this.element.addEventListener('click', function (evt) {\n      var eventElement = eventMatches(evt, _this.options.eventTrigger);\n\n      if (eventElement) {\n        _this._toggleState(eventElement, evt);\n      }\n    });\n\n    _this.element.addEventListener('keydown', _this._keydownHandler);\n\n    _this.state = {\n      checkboxCount: 0\n    };\n    return _this;\n  }\n\n  _createClass(DataTableV2, [{\n    key: \"_changeState\",\n    value: function _changeState(detail, callback) {\n      this[this.constructor.eventHandlers[detail.group]](detail);\n      callback();\n    }\n  }], [{\n    key: \"options\",\n    get: function get() {\n      var prefix = settings.prefix;\n      return {\n        selectorInit: '[data-table-v2]',\n        selectorToolbar: \".\".concat(prefix, \"--table--toolbar\"),\n        selectorActions: \".\".concat(prefix, \"--batch-actions\"),\n        selectorCount: '[data-items-selected]',\n        selectorActionCancel: \".\".concat(prefix, \"--batch-summary__cancel\"),\n        selectorCheckbox: \".\".concat(prefix, \"--checkbox\"),\n        selectorExpandCells: \".\".concat(prefix, \"--table-expand-v2\"),\n        selectorExpandableRows: \".\".concat(prefix, \"--expandable-row-v2\"),\n        selectorParentRows: \".\".concat(prefix, \"--parent-row-v2\"),\n        selectorChildRow: '[data-child-row]',\n        selectorTableBody: 'tbody',\n        selectorTableSort: \".\".concat(prefix, \"--table-sort-v2\"),\n        selectorTableSelected: \".\".concat(prefix, \"--data-table-v2--selected\"),\n        classExpandableRow: \"\".concat(prefix, \"--expandable-row-v2\"),\n        classExpandableRowHidden: \"\".concat(prefix, \"--expandable-row--hidden-v2\"),\n        classExpandableRowHover: \"\".concat(prefix, \"--expandable-row--hover-v2\"),\n        classTableSortAscending: \"\".concat(prefix, \"--table-sort-v2--ascending\"),\n        classTableSortActive: \"\".concat(prefix, \"--table-sort-v2--active\"),\n        classActionBarActive: \"\".concat(prefix, \"--batch-actions--active\"),\n        classTableSelected: \"\".concat(prefix, \"--data-table-v2--selected\"),\n        eventBeforeExpand: 'data-table-v2-beforetoggleexpand',\n        eventAfterExpand: 'data-table-v2-aftertoggleexpand',\n        eventBeforeSort: 'data-table-v2-beforetogglesort',\n        eventAfterSort: 'data-table-v2-aftertogglesort',\n        eventTrigger: '[data-event]',\n        eventParentContainer: '[data-parent-row]'\n      };\n    }\n  }]);\n\n  return DataTableV2;\n}(mixin(createComponent, initComponentBySearch, eventedState));\n\nDataTableV2.components = new WeakMap();\nDataTableV2.eventHandlers = {\n  expand: '_rowExpandToggle',\n  sort: '_sortToggle',\n  select: '_selectToggle',\n  'select-all': '_selectAllToggle',\n  'action-bar-cancel': '_actionBarCancel'\n};\nexport default DataTableV2;","map":{"version":3,"sources":["/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/src/components/data-table-v2/data-table-v2.js"],"names":["settings","mixin","createComponent","initComponentBySearch","eventedState","eventMatches","DataTableV2","element","options","_sortToggle","detail","previousValue","tableHeaders","forEach","header","sortEl","querySelector","selectorTableSort","classList","remove","classTableSortActive","classTableSortAscending","dataset","add","_selectToggle","checked","state","checkboxCount","countEl","textContent","row","parentNode","toggle","classTableSelected","_actionBarToggle","_selectAllToggle","inputs","querySelectorAll","selectorCheckbox","length","item","batchActionEl","_actionBarCancel","selectorTableSelected","toggleOn","transition","evt","removeEventListener","target","matches","selectorActions","active","setAttribute","classActionBarActive","addEventListener","_expandableRowsInit","expandableRows","classExpandableRowHidden","tableBody","removeChild","_rowExpandToggle","parent","initialEvt","eventParentContainer","index","expandCells","indexOf","undefined","classExpandableRow","insertBefore","parentRows","nextElementSibling","_expandableHoverToggle","previousElementSibling","classExpandableRowHover","mouseout","_toggleState","data","label","changeState","group","event","_keydownHandler","which","refreshRows","newExpandCells","selectorExpandCells","newExpandableRows","selectorExpandableRows","newParentRows","selectorParentRows","diffParentRows","filter","newRow","some","oldRow","diffExpandableRows","map","mergedExpandableRows","container","toolbarEl","selectorToolbar","selectorCount","cancelEl","selectorActionCancel","selectorTableBody","eventElement","selectorChildRow","eventTrigger","callback","constructor","eventHandlers","prefix","selectorInit","eventBeforeExpand","eventAfterExpand","eventBeforeSort","eventAfterSort","components","WeakMap","expand","sort","select"],"mappings":"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","sourcesContent":["import settings from '../../globals/js/settings';\nimport mixin from '../../globals/js/misc/mixin';\nimport createComponent from '../../globals/js/mixins/create-component';\nimport initComponentBySearch from '../../globals/js/mixins/init-component-by-search';\nimport eventedState from '../../globals/js/mixins/evented-state';\nimport eventMatches from '../../globals/js/misc/event-matches';\n\nclass DataTableV2 extends mixin(createComponent, initComponentBySearch, eventedState) {\n  /**\n   * Data Table\n   * @extends CreateComponent\n   * @extends InitComponentBySearch\n   * @extends   EventedState\n   * @param {HTMLElement} element The root element of tables\n   * @param {Object} [options] the... options\n   * @param {string} [options.selectorInit] selector initialization\n   * @param {string} [options.selectorExpandCells] css selector for expand\n   * @param {string} [options.expandableRow] css selector for expand\n   * @param {string} [options.selectorParentRows] css selector for rows housing expansion\n   * @param {string} [options.selectorTableBody] root css for table body\n   * @param {string} [options.eventTrigger] selector for event bubble capture points\n   * @param {string} [options.eventParentContainer] used find the bubble container\n   */\n  constructor(element, options) {\n    super(element, options);\n\n    this.container = element.parentNode;\n    this.toolbarEl = this.element.querySelector(this.options.selectorToolbar);\n    this.batchActionEl = this.element.querySelector(this.options.selectorActions);\n    this.countEl = this.element.querySelector(this.options.selectorCount);\n    this.cancelEl = this.element.querySelector(this.options.selectorActionCancel);\n    this.tableHeaders = this.element.querySelectorAll('th');\n    this.tableBody = this.element.querySelector(this.options.selectorTableBody);\n    this.expandCells = [];\n    this.expandableRows = [];\n    this.parentRows = [];\n\n    this.refreshRows();\n\n    this.element.addEventListener('mouseover', evt => {\n      const eventElement = eventMatches(evt, this.options.selectorChildRow);\n\n      if (eventElement) {\n        this._expandableHoverToggle(eventElement, true);\n      }\n    });\n\n    this.element.addEventListener('click', evt => {\n      const eventElement = eventMatches(evt, this.options.eventTrigger);\n      if (eventElement) {\n        this._toggleState(eventElement, evt);\n      }\n    });\n\n    this.element.addEventListener('keydown', this._keydownHandler);\n\n    this.state = {\n      checkboxCount: 0,\n    };\n  }\n\n  _sortToggle = detail => {\n    const { element, previousValue } = detail;\n\n    [...this.tableHeaders].forEach(header => {\n      const sortEl = header.querySelector(this.options.selectorTableSort);\n\n      if (sortEl !== null && sortEl !== element) {\n        sortEl.classList.remove(this.options.classTableSortActive);\n        sortEl.classList.remove(this.options.classTableSortAscending);\n      }\n    });\n\n    if (!previousValue || previousValue === 'descending') {\n      element.dataset.previousValue = 'ascending';\n      element.classList.add(this.options.classTableSortActive);\n      element.classList.add(this.options.classTableSortAscending);\n    } else {\n      element.dataset.previousValue = 'descending';\n      element.classList.add(this.options.classTableSortActive);\n      element.classList.remove(this.options.classTableSortAscending);\n    }\n  };\n\n  _selectToggle = detail => {\n    const { element } = detail;\n    const checked = element.checked;\n\n    // increment the  count\n    this.state.checkboxCount += checked ? 1 : -1;\n    this.countEl.textContent = this.state.checkboxCount;\n\n    const row = element.parentNode.parentNode;\n\n    row.classList.toggle(this.options.classTableSelected);\n\n    // toggle on/off batch action bar\n    this._actionBarToggle(this.state.checkboxCount > 0);\n  };\n\n  _selectAllToggle = detail => {\n    const checked = detail.element.checked;\n\n    const inputs = [...this.element.querySelectorAll(this.options.selectorCheckbox)];\n\n    this.state.checkboxCount = checked ? inputs.length - 1 : 0;\n\n    inputs.forEach(item => {\n      item.checked = checked;\n\n      const row = item.parentNode.parentNode;\n      if (checked && row) {\n        row.classList.add(this.options.classTableSelected);\n      } else {\n        row.classList.remove(this.options.classTableSelected);\n      }\n    });\n\n    this._actionBarToggle(this.state.checkboxCount > 0);\n\n    if (this.batchActionEl) {\n      this.countEl.textContent = this.state.checkboxCount;\n    }\n  };\n\n  _actionBarCancel = () => {\n    const inputs = [...this.element.querySelectorAll(this.options.selectorCheckbox)];\n    const row = [...this.element.querySelectorAll(this.options.selectorTableSelected)];\n\n    row.forEach(item => {\n      item.classList.remove(this.options.classTableSelected);\n    });\n\n    inputs.forEach(item => {\n      item.checked = false;\n    });\n\n    this.state.checkboxCount = 0;\n    this._actionBarToggle(false);\n\n    if (this.batchActionEl) {\n      this.countEl.textContent = this.state.checkboxCount;\n    }\n  };\n\n  _actionBarToggle = toggleOn => {\n    const transition = evt => {\n      this.batchActionEl.removeEventListener('transitionend', transition);\n\n      if (evt.target.matches(this.options.selectorActions)) {\n        if (this.batchActionEl.dataset.active === 'false') {\n          this.batchActionEl.setAttribute('tabIndex', -1);\n        } else {\n          this.batchActionEl.setAttribute('tabIndex', 0);\n        }\n      }\n    };\n\n    if (toggleOn) {\n      this.batchActionEl.dataset.active = true;\n      this.batchActionEl.classList.add(this.options.classActionBarActive);\n    } else if (this.batchActionEl) {\n      this.batchActionEl.dataset.active = false;\n      this.batchActionEl.classList.remove(this.options.classActionBarActive);\n    }\n    if (this.batchActionEl) {\n      this.batchActionEl.addEventListener('transitionend', transition);\n    }\n  };\n\n  _expandableRowsInit = expandableRows => {\n    expandableRows.forEach(item => {\n      item.classList.remove(this.options.classExpandableRowHidden);\n      this.tableBody.removeChild(item);\n    });\n  };\n\n  _rowExpandToggle = detail => {\n    const element = detail.element;\n    const parent = eventMatches(detail.initialEvt, this.options.eventParentContainer);\n\n    const index = this.expandCells.indexOf(element);\n    if (element.dataset.previousValue === undefined || element.dataset.previousValue === 'expanded') {\n      element.dataset.previousValue = 'collapsed';\n      parent.classList.add(this.options.classExpandableRow);\n      this.tableBody.insertBefore(this.expandableRows[index], this.parentRows[index + 1]);\n    } else {\n      parent.classList.remove(this.options.classExpandableRow);\n      this.tableBody.removeChild(parent.nextElementSibling);\n      element.dataset.previousValue = 'expanded';\n    }\n  };\n\n  _expandableHoverToggle = element => {\n    element.previousElementSibling.classList.add(this.options.classExpandableRowHover);\n\n    const mouseout = () => {\n      element.previousElementSibling.classList.remove(this.options.classExpandableRowHover);\n      element.removeEventListener('mouseout', mouseout);\n    };\n\n    element.addEventListener('mouseout', mouseout);\n  };\n\n  _toggleState = (element, evt) => {\n    const data = element.dataset;\n    const label = data.label ? data.label : '';\n    const previousValue = data.previousValue ? data.previousValue : '';\n    const initialEvt = evt;\n\n    this.changeState({\n      group: data.event,\n      element,\n      label,\n      previousValue,\n      initialEvt,\n    });\n  };\n\n  _keydownHandler = evt => {\n    if (evt.which === 27) {\n      this._actionBarCancel();\n    }\n  };\n\n  _changeState(detail, callback) {\n    this[this.constructor.eventHandlers[detail.group]](detail);\n    callback();\n  }\n\n  refreshRows = () => {\n    const newExpandCells = [...this.element.querySelectorAll(this.options.selectorExpandCells)];\n    const newExpandableRows = [...this.element.querySelectorAll(this.options.selectorExpandableRows)];\n    const newParentRows = [...this.element.querySelectorAll(this.options.selectorParentRows)];\n\n    // check if this is a refresh or the first time\n    if (this.parentRows.length > 0) {\n      const diffParentRows = newParentRows.filter(newRow => !this.parentRows.some(oldRow => oldRow === newRow));\n\n      // check if there are expandable rows\n      if (newExpandableRows.length > 0) {\n        const diffExpandableRows = diffParentRows.map(newRow => newRow.nextElementSibling);\n        const mergedExpandableRows = [...this.expandableRows, ...diffExpandableRows];\n        this._expandableRowsInit(diffExpandableRows);\n        this.expandableRows = mergedExpandableRows;\n      }\n    } else if (newExpandableRows.length > 0) {\n      this._expandableRowsInit(newExpandableRows);\n      this.expandableRows = newExpandableRows;\n    }\n\n    this.expandCells = newExpandCells;\n    this.parentRows = newParentRows;\n  };\n\n  static components = new WeakMap();\n\n  // UI Events\n  static eventHandlers = {\n    expand: '_rowExpandToggle',\n    sort: '_sortToggle',\n    select: '_selectToggle',\n    'select-all': '_selectAllToggle',\n    'action-bar-cancel': '_actionBarCancel',\n  };\n\n  static get options() {\n    const { prefix } = settings;\n    return {\n      selectorInit: '[data-table-v2]',\n      selectorToolbar: `.${prefix}--table--toolbar`,\n      selectorActions: `.${prefix}--batch-actions`,\n      selectorCount: '[data-items-selected]',\n      selectorActionCancel: `.${prefix}--batch-summary__cancel`,\n      selectorCheckbox: `.${prefix}--checkbox`,\n      selectorExpandCells: `.${prefix}--table-expand-v2`,\n      selectorExpandableRows: `.${prefix}--expandable-row-v2`,\n      selectorParentRows: `.${prefix}--parent-row-v2`,\n      selectorChildRow: '[data-child-row]',\n      selectorTableBody: 'tbody',\n      selectorTableSort: `.${prefix}--table-sort-v2`,\n      selectorTableSelected: `.${prefix}--data-table-v2--selected`,\n      classExpandableRow: `${prefix}--expandable-row-v2`,\n      classExpandableRowHidden: `${prefix}--expandable-row--hidden-v2`,\n      classExpandableRowHover: `${prefix}--expandable-row--hover-v2`,\n      classTableSortAscending: `${prefix}--table-sort-v2--ascending`,\n      classTableSortActive: `${prefix}--table-sort-v2--active`,\n      classActionBarActive: `${prefix}--batch-actions--active`,\n      classTableSelected: `${prefix}--data-table-v2--selected`,\n      eventBeforeExpand: 'data-table-v2-beforetoggleexpand',\n      eventAfterExpand: 'data-table-v2-aftertoggleexpand',\n      eventBeforeSort: 'data-table-v2-beforetogglesort',\n      eventAfterSort: 'data-table-v2-aftertogglesort',\n      eventTrigger: '[data-event]',\n      eventParentContainer: '[data-parent-row]',\n    };\n  }\n}\n\nexport default DataTableV2;\n"]},"metadata":{},"sourceType":"module"}