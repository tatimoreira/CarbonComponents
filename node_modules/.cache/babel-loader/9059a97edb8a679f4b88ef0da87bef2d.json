{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classnames from 'classnames';\nimport Link from '../Link';\nimport Button from '../Button';\n\nvar Footer = function Footer(_ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      labelOne = _ref.labelOne,\n      linkTextOne = _ref.linkTextOne,\n      linkHrefOne = _ref.linkHrefOne,\n      labelTwo = _ref.labelTwo,\n      linkTextTwo = _ref.linkTextTwo,\n      linkHrefTwo = _ref.linkHrefTwo,\n      buttonText = _ref.buttonText,\n      other = _objectWithoutProperties(_ref, [\"className\", \"children\", \"labelOne\", \"linkTextOne\", \"linkHrefOne\", \"labelTwo\", \"linkTextTwo\", \"linkHrefTwo\", \"buttonText\"]);\n\n  var classNames = classnames('bx--footer bx--footer--bottom-fixed', className);\n  var footer = children ? React.createElement(\"footer\", _extends({}, other, {\n    className: classNames\n  }), children) : React.createElement(\"footer\", _extends({}, other, {\n    className: classNames\n  }), React.createElement(\"div\", {\n    className: \"bx--footer-info\"\n  }, React.createElement(\"div\", {\n    className: \"bx--footer-info__item\"\n  }, React.createElement(\"p\", {\n    className: \"bx--footer-label\"\n  }, labelOne), React.createElement(Link, {\n    href: linkHrefOne\n  }, linkTextOne)), React.createElement(\"div\", {\n    className: \"bx--footer-info__item\"\n  }, React.createElement(\"p\", {\n    className: \"bx--footer-label\"\n  }, labelTwo), React.createElement(Link, {\n    href: linkHrefTwo\n  }, linkTextTwo))), React.createElement(\"div\", {\n    className: \"bx--footer-cta\"\n  }, React.createElement(Button, {\n    type: \"submit\"\n  }, buttonText)));\n  return footer;\n};\n\nFooter.propTypes = {\n  /**\n   * Provide children to be rendered instead of the default footer information\n   */\n  children: PropTypes.node,\n\n  /**\n   * Provide a custom className to be applied to the containing <footer> node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Provide the label for the first footer information item\n   */\n  labelOne: PropTypes.string,\n\n  /**\n   * Provide the text for the first footer information item\n   */\n  linkTextOne: PropTypes.string,\n\n  /**\n   * Provide the href attribute for the first footer information item\n   */\n  linkHrefOne: PropTypes.string,\n\n  /**\n   * Provide the label for the second footer information item\n   */\n  labelTwo: PropTypes.string,\n\n  /**\n   * Provide the text for the second footer information item\n   */\n  linkTextTwo: PropTypes.string,\n\n  /**\n   * Provide the href for the second footer information item\n   */\n  linkHrefTwo: PropTypes.string,\n\n  /**\n   * Provide the text for the footer button\n   */\n  buttonText: PropTypes.string\n};\nFooter.defaultProps = {\n  labelOne: 'Need Help?',\n  linkTextOne: 'Contact Bluemix Sales',\n  linkHrefOne: '#',\n  labelTwo: 'Estimate Monthly Cost',\n  linkTextTwo: 'Cost Calculator',\n  linkHrefTwo: '#',\n  buttonText: 'Create'\n};\nexport default Footer;","map":null,"metadata":{},"sourceType":"module"}