{"ast":null,"code":"import _classCallCheck from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport settings from '../../globals/js/settings';\nimport mixin from '../../globals/js/misc/mixin';\nimport createComponent from '../../globals/js/mixins/create-component';\nimport InitComponentBySearch from '../../globals/js/mixins/init-component-by-search';\nimport handles from '../../globals/js/mixins/handles';\nimport on from '../../globals/js/misc/on';\n\nvar CopyButton =\n/*#__PURE__*/\nfunction (_mixin) {\n  _inherits(CopyButton, _mixin);\n\n  /**\n   * CopyBtn UI.\n   * @extends CreateComponent\n   * @extends InitComponentBySearch\n   * @extends Handles\n   * @param {HTMLElement} element The element working as a copy button UI.\n   */\n  function CopyButton(element, options) {\n    var _this;\n\n    _classCallCheck(this, CopyButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CopyButton).call(this, element, options));\n\n    _this.manage(on(_this.element, 'click', function () {\n      return _this.handleClick();\n    }));\n\n    return _this;\n  }\n  /**\n   * Show the feedback tooltip on click. Hide the feedback tooltip after specified timeout value.\n   */\n\n\n  _createClass(CopyButton, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      var _this2 = this;\n\n      var feedback = this.element.querySelector(this.options.feedbackTooltip);\n\n      if (feedback) {\n        feedback.classList.add(this.options.classShowFeedback);\n        setTimeout(function () {\n          feedback.classList.remove(_this2.options.classShowFeedback);\n        }, this.options.timeoutValue);\n      }\n    }\n    /**\n     * The map associating DOM element and copy button UI instance.\n     * @member CopyBtn.components\n     * @type {WeakMap}\n     */\n\n  }], [{\n    key: \"options\",\n\n    /**\n     * The component options.\n     * If `options` is specified in the constructor, {@linkcode CopyBtn.create .create()}, or {@linkcode CopyBtn.init .init()},\n     * properties in this object are overriden for the instance being create and how {@linkcode CopyBtn.init .init()} works.\n     * @member CopyBtn.options\n     * @type {Object}\n     * @property {string} selectorInit The data attribute to find copy button UIs.\n     * @property {string} feedbackTooltip The data attribute to find feedback tooltip.\n     * @property {string} classShowFeedback The CSS selector for showing the feedback tooltip.\n     * @property {number} timeoutValue The specified timeout value before the feedback tooltip is hidden.\n     */\n    get: function get() {\n      var prefix = settings.prefix;\n      return {\n        selectorInit: '[data-copy-btn]',\n        feedbackTooltip: '[data-feedback]',\n        classShowFeedback: \"\".concat(prefix, \"--btn--copy__feedback--displayed\"),\n        timeoutValue: 2000\n      };\n    }\n  }]);\n\n  return CopyButton;\n}(mixin(createComponent, InitComponentBySearch, handles));\n\nCopyButton.components = new WeakMap();\nexport default CopyButton;","map":{"version":3,"sources":["/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/src/components/copy-button/copy-button.js"],"names":["settings","mixin","createComponent","InitComponentBySearch","handles","on","CopyButton","element","options","manage","handleClick","feedback","querySelector","feedbackTooltip","classList","add","classShowFeedback","setTimeout","remove","timeoutValue","prefix","selectorInit","components","WeakMap"],"mappings":";;;;;AAAA,OAAOA,QAAP,MAAqB,2BAArB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,eAAP,MAA4B,0CAA5B;AACA,OAAOC,qBAAP,MAAkC,kDAAlC;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,EAAP,MAAe,0BAAf;;IAEMC,U;;;;;AACJ;;;;;;;AAOA,sBAAYC,OAAZ,EAAqBC,OAArB,EAA8B;AAAA;;AAAA;;AAC5B,oFAAMD,OAAN,EAAeC,OAAf;;AACA,UAAKC,MAAL,CAAYJ,EAAE,CAAC,MAAKE,OAAN,EAAe,OAAf,EAAwB;AAAA,aAAM,MAAKG,WAAL,EAAN;AAAA,KAAxB,CAAd;;AAF4B;AAG7B;AAED;;;;;;;kCAGc;AAAA;;AACZ,UAAMC,QAAQ,GAAG,KAAKJ,OAAL,CAAaK,aAAb,CAA2B,KAAKJ,OAAL,CAAaK,eAAxC,CAAjB;;AACA,UAAIF,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACG,SAAT,CAAmBC,GAAnB,CAAuB,KAAKP,OAAL,CAAaQ,iBAApC;AACAC,QAAAA,UAAU,CAAC,YAAM;AACfN,UAAAA,QAAQ,CAACG,SAAT,CAAmBI,MAAnB,CAA0B,MAAI,CAACV,OAAL,CAAaQ,iBAAvC;AACD,SAFS,EAEP,KAAKR,OAAL,CAAaW,YAFN,CAAV;AAGD;AACF;AAED;;;;;;;;;AAOA;;;;;;;;;;;wBAWqB;AAAA,UACXC,MADW,GACApB,QADA,CACXoB,MADW;AAEnB,aAAO;AACLC,QAAAA,YAAY,EAAE,iBADT;AAELR,QAAAA,eAAe,EAAE,iBAFZ;AAGLG,QAAAA,iBAAiB,YAAKI,MAAL,qCAHZ;AAILD,QAAAA,YAAY,EAAE;AAJT,OAAP;AAMD;;;;EApDsBlB,KAAK,CAACC,eAAD,EAAkBC,qBAAlB,EAAyCC,OAAzC,C;;AAAxBE,U,CA+BGgB,U,GAAa,IAAIC,OAAJ,E;AAwBtB,eAAejB,UAAf","sourcesContent":["import settings from '../../globals/js/settings';\nimport mixin from '../../globals/js/misc/mixin';\nimport createComponent from '../../globals/js/mixins/create-component';\nimport InitComponentBySearch from '../../globals/js/mixins/init-component-by-search';\nimport handles from '../../globals/js/mixins/handles';\nimport on from '../../globals/js/misc/on';\n\nclass CopyButton extends mixin(createComponent, InitComponentBySearch, handles) {\n  /**\n   * CopyBtn UI.\n   * @extends CreateComponent\n   * @extends InitComponentBySearch\n   * @extends Handles\n   * @param {HTMLElement} element The element working as a copy button UI.\n   */\n  constructor(element, options) {\n    super(element, options);\n    this.manage(on(this.element, 'click', () => this.handleClick()));\n  }\n\n  /**\n   * Show the feedback tooltip on click. Hide the feedback tooltip after specified timeout value.\n   */\n  handleClick() {\n    const feedback = this.element.querySelector(this.options.feedbackTooltip);\n    if (feedback) {\n      feedback.classList.add(this.options.classShowFeedback);\n      setTimeout(() => {\n        feedback.classList.remove(this.options.classShowFeedback);\n      }, this.options.timeoutValue);\n    }\n  }\n\n  /**\n   * The map associating DOM element and copy button UI instance.\n   * @member CopyBtn.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  /**\n   * The component options.\n   * If `options` is specified in the constructor, {@linkcode CopyBtn.create .create()}, or {@linkcode CopyBtn.init .init()},\n   * properties in this object are overriden for the instance being create and how {@linkcode CopyBtn.init .init()} works.\n   * @member CopyBtn.options\n   * @type {Object}\n   * @property {string} selectorInit The data attribute to find copy button UIs.\n   * @property {string} feedbackTooltip The data attribute to find feedback tooltip.\n   * @property {string} classShowFeedback The CSS selector for showing the feedback tooltip.\n   * @property {number} timeoutValue The specified timeout value before the feedback tooltip is hidden.\n   */\n  static get options() {\n    const { prefix } = settings;\n    return {\n      selectorInit: '[data-copy-btn]',\n      feedbackTooltip: '[data-feedback]',\n      classShowFeedback: `${prefix}--btn--copy__feedback--displayed`,\n      timeoutValue: 2000,\n    };\n  }\n}\n\nexport default CopyButton;\n"]},"metadata":{},"sourceType":"module"}