{"ast":null,"code":"import _typeof2 from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/typeof\";\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash.debounce';\nimport Icon from '../Icon';\nimport classNames from 'classnames';\nimport { iconInfoGlyph } from 'carbon-icons';\nimport FloatingMenu, { DIRECTION_LEFT, DIRECTION_TOP, DIRECTION_RIGHT, DIRECTION_BOTTOM } from '../../internal/FloatingMenu';\nimport ClickListener from '../../internal/ClickListener';\nvar matchesFuncName = typeof Element !== 'undefined' && ['matches', 'webkitMatchesSelector', 'msMatchesSelector'].filter(function (name) {\n  return typeof Element.prototype[name] === 'function';\n})[0];\n/**\n * @param {Node} elem A DOM node.\n * @param {string} selector A CSS selector\n * @returns {boolean} `true` if the given DOM element is a element node and matches the given selector.\n * @private\n */\n\nvar matches = function matches(elem, selector) {\n  return typeof elem[matchesFuncName] === 'function' && elem[matchesFuncName](selector);\n};\n/**\n * @param {Element} elem An element.\n * @param {string} selector An query selector.\n * @returns {Element} The ancestor of the given element matching the given selector.\n * @private\n */\n\n\nvar closest = function closest(elem, selector) {\n  var doc = elem.ownerDocument;\n\n  for (var traverse = elem; traverse && traverse !== doc; traverse = traverse.parentNode) {\n    if (matches(traverse, selector)) {\n      return traverse;\n    }\n  }\n\n  return null;\n};\n/**\n * @param {Element} menuBody The menu body with the menu arrow.\n * @param {string} menuDirection Where the floating menu menu should be placed relative to the trigger button.\n * @returns {FloatingMenu~offset} The adjustment of the floating menu position, upon the position of the menu arrow.\n * @private\n */\n\n\nvar getMenuOffset = function getMenuOffset(menuBody, menuDirection) {\n  var _DIRECTION_LEFT$DIREC, _DIRECTION_LEFT$DIREC2;\n\n  var arrowStyle = menuBody.ownerDocument.defaultView.getComputedStyle(menuBody, ':before');\n  var arrowPositionProp = (_DIRECTION_LEFT$DIREC = {}, _defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_LEFT, 'right'), _defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_TOP, 'bottom'), _defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_RIGHT, 'left'), _defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_BOTTOM, 'top'), _DIRECTION_LEFT$DIREC)[menuDirection];\n  var menuPositionAdjustmentProp = (_DIRECTION_LEFT$DIREC2 = {}, _defineProperty(_DIRECTION_LEFT$DIREC2, DIRECTION_LEFT, 'left'), _defineProperty(_DIRECTION_LEFT$DIREC2, DIRECTION_TOP, 'top'), _defineProperty(_DIRECTION_LEFT$DIREC2, DIRECTION_RIGHT, 'left'), _defineProperty(_DIRECTION_LEFT$DIREC2, DIRECTION_BOTTOM, 'top'), _DIRECTION_LEFT$DIREC2)[menuDirection];\n  var values = [arrowPositionProp, 'border-bottom-width'].reduce(function (o, name) {\n    return _objectSpread({}, o, _defineProperty({}, name, Number((/^([\\d-]+)px$/.exec(arrowStyle.getPropertyValue(name)) || [])[1])));\n  }, {});\n  values[arrowPositionProp] = values[arrowPositionProp] || -6; // IE, etc.\n\n  if (Object.keys(values).every(function (name) {\n    return !isNaN(values[name]);\n  })) {\n    var arrowPosition = values[arrowPositionProp],\n        borderBottomWidth = values['border-bottom-width'];\n    return _defineProperty({\n      left: 0,\n      top: 0\n    }, menuPositionAdjustmentProp, Math.sqrt(Math.pow(borderBottomWidth, 2) * 2) - arrowPosition);\n  }\n};\n\nvar Tooltip =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Tooltip, _Component);\n\n  function Tooltip() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Tooltip);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tooltip)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {});\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_hasContextMenu\", false);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_tooltipEl\", null);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getTriggerPosition\", function () {\n      if (_this.triggerEl) {\n        var triggerPosition = _this.triggerEl.getBoundingClientRect();\n\n        _this.setState({\n          triggerPosition: triggerPosition\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_handleHover\", function (state, relatedTarget) {\n      if (state === 'over') {\n        _this.getTriggerPosition();\n\n        _this.setState({\n          open: true\n        });\n      } else {\n        // Note: SVGElement in IE11 does not have `.contains()`\n        var shouldPreventClose = relatedTarget && (_this.triggerEl && _this.triggerEl.contains && _this.triggerEl.contains(relatedTarget) || _this._tooltipEl && _this._tooltipEl.contains(relatedTarget));\n\n        if (!shouldPreventClose) {\n          _this.setState({\n            open: false\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_debouncedHandleHover\", debounce(_this._handleHover, 200));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_getTarget\", function () {\n      return _this.triggerEl && closest(_this.triggerEl, '[data-floating-menu-container]') || document.body;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleMouse\", function (evt) {\n      var state = typeof evt === 'string' ? evt : {\n        mouseover: 'over',\n        mouseout: 'out',\n        focus: 'over',\n        blur: 'out'\n      }[evt.type];\n      var hadContextMenu = _this._hasContextMenu;\n      _this._hasContextMenu = evt.type === 'contextmenu';\n\n      if (_this.props.clickToOpen) {\n        if (state === 'click') {\n          var shouldOpen = !_this.state.open;\n\n          if (shouldOpen) {\n            _this.getTriggerPosition();\n          }\n\n          _this.setState({\n            open: shouldOpen\n          });\n        }\n      } else if (state && (state !== 'out' || !hadContextMenu)) {\n        _this._debouncedHandleHover(state, evt.relatedTarget);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClickOutside\", function (evt) {\n      var shouldPreventClose = evt && evt.target && _this._tooltipEl && _this._tooltipEl.contains(evt.target);\n\n      if (!shouldPreventClose) {\n        _this.setState({\n          open: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleKeyPress\", function (evt) {\n      var key = evt.key || evt.which;\n\n      if (key === 'Enter' || key === 13 || key === ' ' || key === 32) {\n        _this.setState({\n          open: !_this.state.open\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Tooltip, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      requestAnimationFrame(function () {\n        _this2.getTriggerPosition();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          _this$props$triggerId = _this$props.triggerId,\n          triggerId = _this$props$triggerId === void 0 ? this.triggerId = this.triggerId || \"__carbon-tooltip-trigger_\".concat(Math.random().toString(36).substr(2)) : _this$props$triggerId,\n          _this$props$tooltipId = _this$props.tooltipId,\n          tooltipId = _this$props$tooltipId === void 0 ? this.tooltipId = this.tooltipId || \"__carbon-tooltip_\".concat(Math.random().toString(36).substr(2)) : _this$props$tooltipId,\n          children = _this$props.children,\n          className = _this$props.className,\n          triggerClassName = _this$props.triggerClassName,\n          direction = _this$props.direction,\n          triggerText = _this$props.triggerText,\n          showIcon = _this$props.showIcon,\n          icon = _this$props.icon,\n          iconName = _this$props.iconName,\n          iconDescription = _this$props.iconDescription,\n          menuOffset = _this$props.menuOffset,\n          clickToOpen = _this$props.clickToOpen,\n          other = _objectWithoutProperties(_this$props, [\"triggerId\", \"tooltipId\", \"children\", \"className\", \"triggerClassName\", \"direction\", \"triggerText\", \"showIcon\", \"icon\", \"iconName\", \"iconDescription\", \"menuOffset\", \"clickToOpen\"]);\n\n      var open = this.state.open;\n      var tooltipClasses = classNames('bx--tooltip', {\n        'bx--tooltip--shown': open\n      }, className);\n      var triggerClasses = classNames('bx--tooltip__trigger', triggerClassName);\n      var ariaOwnsProps = !open ? {} : {\n        'aria-owns': tooltipId\n      };\n      return React.createElement(React.Fragment, null, React.createElement(ClickListener, {\n        onClickOutside: this.handleClickOutside\n      }, showIcon ? React.createElement(\"div\", {\n        className: triggerClasses\n      }, triggerText, React.createElement(\"div\", _extends({\n        id: triggerId,\n        role: \"button\",\n        tabIndex: \"0\",\n        onMouseOver: function onMouseOver(evt) {\n          return _this3.handleMouse(evt);\n        },\n        onMouseOut: function onMouseOut(evt) {\n          return _this3.handleMouse(evt);\n        },\n        onFocus: function onFocus(evt) {\n          return _this3.handleMouse(evt);\n        },\n        onBlur: function onBlur(evt) {\n          return _this3.handleMouse(evt);\n        },\n        \"aria-haspopup\": \"true\",\n        \"aria-expanded\": open\n      }, ariaOwnsProps), React.createElement(Icon, {\n        onKeyDown: this.handleKeyPress,\n        onClick: function onClick() {\n          return _this3.handleMouse('click');\n        },\n        icon: !icon && !iconName ? iconInfoGlyph : icon,\n        name: iconName,\n        description: iconDescription,\n        iconRef: function iconRef(node) {\n          _this3.triggerEl = node;\n        }\n      }))) : React.createElement(\"div\", _extends({\n        // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n        tabIndex: \"0\",\n        id: triggerId,\n        className: triggerClasses,\n        ref: function ref(node) {\n          _this3.triggerEl = node;\n        },\n        onMouseOver: function onMouseOver(evt) {\n          return _this3.handleMouse(evt);\n        },\n        onMouseOut: function onMouseOut(evt) {\n          return _this3.handleMouse(evt);\n        },\n        onFocus: function onFocus(evt) {\n          return _this3.handleMouse(evt);\n        },\n        onBlur: function onBlur(evt) {\n          return _this3.handleMouse(evt);\n        },\n        \"aria-haspopup\": \"true\",\n        \"aria-expanded\": open\n      }, ariaOwnsProps), triggerText)), open && React.createElement(FloatingMenu, {\n        target: this._getTarget,\n        menuPosition: this.state.triggerPosition,\n        menuDirection: direction,\n        menuOffset: menuOffset,\n        menuRef: function menuRef(node) {\n          _this3._tooltipEl = node;\n        }\n      }, React.createElement(\"div\", _extends({\n        id: tooltipId,\n        className: tooltipClasses\n      }, other, {\n        \"data-floating-menu-direction\": direction,\n        \"aria-labelledby\": triggerId,\n        onMouseOver: function onMouseOver(evt) {\n          return _this3.handleMouse(evt);\n        },\n        onMouseOut: function onMouseOut(evt) {\n          return _this3.handleMouse(evt);\n        },\n        onFocus: function onFocus(evt) {\n          return _this3.handleMouse(evt);\n        },\n        onBlur: function onBlur(evt) {\n          return _this3.handleMouse(evt);\n        },\n        onContextMenu: function onContextMenu(evt) {\n          return _this3.handleMouse(evt);\n        }\n      }), React.createElement(\"span\", {\n        className: \"bx--tooltip__caret\"\n      }), children)));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_ref2, state) {\n      var open = _ref2.open;\n      /**\n       * so that tooltip can be controlled programmatically through this `open` prop\n       */\n\n      var prevOpen = state.prevOpen;\n      return prevOpen === open ? null : {\n        open: open,\n        prevOpen: open\n      };\n    }\n  }]);\n\n  return Tooltip;\n}(Component);\n\n_defineProperty(Tooltip, \"propTypes\", {\n  /**\n   * The ID of the trigger button.\n   */\n  triggerId: PropTypes.string,\n\n  /**\n   * The ID of the tooltip content.\n   */\n  tooltipId: PropTypes.string,\n\n  /**\n   * Open/closed state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Contents to put into the tooltip.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The CSS class names of the tooltip.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The CSS class names of the trigger UI.\n   */\n  triggerClassName: PropTypes.string,\n\n  /**\n   * Where to put the tooltip, relative to the trigger UI.\n   */\n  direction: PropTypes.oneOf(['bottom', 'top', 'left', 'right']),\n\n  /**\n   * The adjustment of the tooltip position.\n   */\n  menuOffset: PropTypes.oneOfType([PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number\n  }), PropTypes.func]),\n\n  /**\n   * The content to put into the trigger UI, except the (default) tooltip icon.\n   */\n  triggerText: PropTypes.node,\n\n  /**\n   * `true` to show the default tooltip icon.\n   */\n  showIcon: PropTypes.bool,\n\n  /**\n   * The the default tooltip icon.\n   */\n  icon: PropTypes.shape({\n    width: PropTypes.string,\n    height: PropTypes.string,\n    viewBox: PropTypes.string.isRequired,\n    svgData: PropTypes.object.isRequired\n  }),\n\n  /**\n   * The name of the default tooltip icon.\n   */\n  iconName: PropTypes.string,\n\n  /**\n   * The description of the default tooltip icon, to be put in its SVG `<title>` element.\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * `true` if opening tooltip should be triggered by clicking the trigger button.\n   */\n  clickToOpen: PropTypes.bool\n});\n\n_defineProperty(Tooltip, \"defaultProps\", {\n  open: false,\n  direction: DIRECTION_BOTTOM,\n  showIcon: true,\n  iconDescription: 'tooltip',\n  triggerText: 'Provide triggerText',\n  menuOffset: getMenuOffset\n});\n\nexport { Tooltip as default };","map":null,"metadata":{},"sourceType":"module"}