{"ast":null,"code":"import _typeof2 from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/typeof\";\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { iconCaretDown } from 'carbon-icons';\nimport Icon from '../Icon';\nimport TabContent from '../TabContent';\n\nvar Tabs =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tabs, _React$Component);\n\n  function Tabs() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Tabs);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tabs)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      dropdownHidden: true\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getTabAt\", function (index) {\n      return _this[\"tab\".concat(index)] || React.Children.toArray(_this.props.children)[index];\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setTabAt\", function (index, tabRef) {\n      _this[\"tab\".concat(index)] = tabRef;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleTabClick\", function (onSelectionChange) {\n      return function (index, label, evt) {\n        evt.preventDefault();\n\n        _this.selectTabAt(index, onSelectionChange);\n\n        _this.setState({\n          dropdownHidden: true\n        });\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleTabKeyDown\", function (onSelectionChange) {\n      return function (index, label, evt) {\n        var key = evt.key || evt.which;\n\n        if (key === 'Enter' || key === 13 || key === ' ' || key === 32) {\n          _this.selectTabAt(index, onSelectionChange);\n\n          _this.setState({\n            dropdownHidden: true\n          });\n        }\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleTabAnchorFocus\", function (onSelectionChange) {\n      return function (index) {\n        var tabCount = React.Children.count(_this.props.children) - 1;\n        var tabIndex = index;\n\n        if (index < 0) {\n          tabIndex = tabCount;\n        } else if (index > tabCount) {\n          tabIndex = 0;\n        }\n\n        var tab = _this.getTabAt(tabIndex);\n\n        if (tab) {\n          _this.selectTabAt(tabIndex, onSelectionChange);\n\n          if (tab.tabAnchor) {\n            tab.tabAnchor.focus();\n          }\n        }\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleDropdownClick\", function () {\n      _this.setState({\n        dropdownHidden: !_this.state.dropdownHidden\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"selectTabAt\", function (index, onSelectionChange) {\n      if (_this.state.selected !== index) {\n        _this.setState({\n          selected: index\n        });\n\n        if (typeof onSelectionChange === 'function') {\n          onSelectionChange(index);\n        }\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Tabs, [{\n    key: \"getTabs\",\n    value: function getTabs() {\n      return React.Children.map(this.props.children, function (tab) {\n        return tab;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          ariaLabel = _this$props.ariaLabel,\n          iconDescription = _this$props.iconDescription,\n          className = _this$props.className,\n          triggerHref = _this$props.triggerHref,\n          role = _this$props.role,\n          onSelectionChange = _this$props.onSelectionChange,\n          other = _objectWithoutProperties(_this$props, [\"ariaLabel\", \"iconDescription\", \"className\", \"triggerHref\", \"role\", \"onSelectionChange\"]);\n\n      var tabsWithProps = this.getTabs().map(function (tab, index) {\n        var newTab = React.cloneElement(tab, {\n          index: index,\n          selected: index === _this2.state.selected,\n          handleTabClick: _this2.handleTabClick(onSelectionChange),\n          handleTabAnchorFocus: _this2.handleTabAnchorFocus(onSelectionChange),\n          ref: function ref(e) {\n            _this2.setTabAt(index, e);\n          },\n          handleTabKeyDown: _this2.handleTabKeyDown(onSelectionChange)\n        });\n        return newTab;\n      });\n      var tabContentWithProps = React.Children.map(tabsWithProps, function (tab) {\n        var _tab$props = tab.props,\n            children = _tab$props.children,\n            selected = _tab$props.selected;\n        return React.createElement(TabContent, {\n          className: \"tab-content\",\n          \"aria-hidden\": !selected,\n          hidden: !selected,\n          selected: selected\n        }, children);\n      });\n      var classes = {\n        tabs: classNames('bx--tabs', className),\n        tablist: classNames('bx--tabs__nav', {\n          'bx--tabs__nav--hidden': this.state.dropdownHidden\n        })\n      };\n      var selectedTab = this.getTabAt(this.state.selected);\n      var selectedLabel = selectedTab ? selectedTab.props.label : '';\n      return React.createElement(React.Fragment, null, React.createElement(\"nav\", _extends({}, other, {\n        className: classes.tabs,\n        role: role\n      }), React.createElement(\"div\", {\n        role: \"listbox\",\n        \"aria-label\": ariaLabel,\n        tabIndex: 0,\n        className: \"bx--tabs-trigger\",\n        onClick: this.handleDropdownClick,\n        onKeyPress: this.handleDropdownClick\n      }, React.createElement(\"a\", {\n        tabIndex: -1,\n        className: \"bx--tabs-trigger-text\",\n        href: triggerHref,\n        onClick: this.handleDropdownClick\n      }, selectedLabel), React.createElement(Icon, {\n        description: iconDescription,\n        icon: iconCaretDown\n      })), React.createElement(\"ul\", {\n        role: \"tablist\",\n        className: classes.tablist\n      }, tabsWithProps)), tabContentWithProps);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_ref, state) {\n      var selected = _ref.selected;\n      var prevSelected = state.prevSelected;\n      return prevSelected === selected ? null : {\n        selected: selected,\n        prevSelected: selected\n      };\n    }\n  }]);\n\n  return Tabs;\n}(React.Component);\n\n_defineProperty(Tabs, \"propTypes\", {\n  /**\n   * Specify the text to be read by screen-readers when visiting the <Tabs>\n   * component\n   */\n  ariaLabel: PropTypes.string,\n\n  /**\n   * Pass in a collection of <Tab> children to be rendered depending on the\n   * currently selected tab\n   */\n  children: PropTypes.node,\n\n  /**\n   * Provide a className that is applied to the root <nav> component for the\n   * <Tabs>\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether the Tab content is hidden\n   */\n  hidden: PropTypes.bool,\n\n  /**\n   * By default, this value is \"navigation\". You can also provide an alternate\n   * role if it makes sense from the accessibility-side\n   */\n  role: PropTypes.string.isRequired,\n\n  /**\n   * Optionally provide an `onClick` handler that is invoked when a <Tab> is\n   * clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Optionally provide an `onKeyDown` handler that is invoked when keyed\n   * navigation is triggered\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * Provide an optional handler that is called whenever the selection\n   * changes. This method is called with the index of the tab that was\n   * selected\n   */\n  onSelectionChange: PropTypes.func,\n\n  /**\n   * Provide a string that represents the `href` for the triggered <Tab>\n   */\n  triggerHref: PropTypes.string.isRequired,\n\n  /**\n   * Optionally provide an index for the currently selected <Tab>\n   */\n  selected: PropTypes.number,\n\n  /**\n   * Provide a description that is read out when a user visits the caret icon\n   * for the dropdown menu of items\n   */\n  iconDescription: PropTypes.string.isRequired\n});\n\n_defineProperty(Tabs, \"defaultProps\", {\n  iconDescription: 'show menu options',\n  role: 'navigation',\n  triggerHref: '#',\n  selected: 0,\n  ariaLabel: 'listbox'\n});\n\nexport { Tabs as default };","map":null,"metadata":{},"sourceType":"module"}