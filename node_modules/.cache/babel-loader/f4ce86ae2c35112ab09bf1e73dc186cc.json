{"ast":null,"code":"import _typeof2 from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/typeof\";\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* eslint react/no-multi-comp: \"off\" */\n\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Icon from '../Icon';\nimport uid from '../../tools/uniqueId';\nimport { ButtonTypes } from '../../prop-types/types';\nimport { iconCloseSolid, iconCheckmarkSolid } from 'carbon-icons';\nexport var FileUploaderButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FileUploaderButton, _Component);\n\n  function FileUploaderButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FileUploaderButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FileUploaderButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {});\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleChange\", function (evt) {\n      var files = evt.target.files;\n      var length = evt.target.files.length;\n\n      if (files && !_this.props.disableLabelChanges) {\n        if (length > 1) {\n          _this.setState({\n            labelText: \"\".concat(length, \" files\")\n          });\n        } else if (length === 1) {\n          _this.setState({\n            labelText: files[0].name\n          });\n        }\n      }\n\n      _this.props.onChange(evt);\n    });\n\n    return _this;\n  }\n\n  _createClass(FileUploaderButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          disableLabelChanges = _this$props.disableLabelChanges,\n          labelText = _this$props.labelText,\n          multiple = _this$props.multiple,\n          role = _this$props.role,\n          tabIndex = _this$props.tabIndex,\n          buttonKind = _this$props.buttonKind,\n          accept = _this$props.accept,\n          name = _this$props.name,\n          other = _objectWithoutProperties(_this$props, [\"className\", \"disableLabelChanges\", \"labelText\", \"multiple\", \"role\", \"tabIndex\", \"buttonKind\", \"accept\", \"name\"]);\n\n      var classes = classNames(_defineProperty({\n        'bx--file': true\n      }, className, className));\n      this.uid = this.props.id || uid();\n      return React.createElement(\"div\", {\n        role: \"button\",\n        tabIndex: \"0\",\n        className: classes,\n        onKeyDown: function onKeyDown(evt) {\n          if (evt.which === 13 || evt.which === 32) {\n            _this2.input.click();\n          }\n        }\n      }, React.createElement(\"label\", _extends({\n        className: \"bx--btn bx--btn--\".concat(buttonKind),\n        tabIndex: tabIndex,\n        htmlFor: this.uid,\n        role: role\n      }, other), this.state.labelText), React.createElement(\"input\", {\n        className: \"bx--visually-hidden\",\n        ref: function ref(input) {\n          return _this2.input = input;\n        },\n        id: this.uid,\n        type: \"file\",\n        tabIndex: \"-1\",\n        multiple: multiple,\n        accept: accept,\n        name: name,\n        onChange: this.handleChange,\n        onClick: function onClick(evt) {\n          evt.target.value = null;\n        }\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_ref, state) {\n      var labelText = _ref.labelText;\n\n      var _ref2 = state || {},\n          prevLabelText = _ref2.prevLabelText;\n\n      return state && prevLabelText === labelText ? null : {\n        labelText: labelText,\n        prevLabelText: labelText\n      };\n    }\n  }]);\n\n  return FileUploaderButton;\n}(Component);\n\n_defineProperty(FileUploaderButton, \"propTypes\", {\n  /**\n   * Provide a custom className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether you want to disable any updates to the FileUploaderButton\n   * label\n   */\n  disableLabelChanges: PropTypes.bool,\n\n  /**\n   * Provide a unique id for the underlying <input> node\n   */\n  id: PropTypes.string,\n\n  /**\n   * Provide the label text to be read by screen readers when interacting with\n   * this control\n   */\n  labelText: PropTypes.string,\n\n  /**\n   * Specify whether you want the component to list the files that have been\n   * submitted to be uploaded\n   */\n  listFiles: PropTypes.bool,\n\n  /**\n   * Specify if the component should accept multiple files to upload\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Provide a name for the underlying <input> node\n   */\n  name: PropTypes.string,\n\n  /**\n   * Provide an optional `onChange` hook that is called each time the <input>\n   * value changes\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Provide an optional `onClick` hook that is called each time the button is\n   * clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Provide an accessibility role for the <FileUploaderButton>\n   */\n  role: PropTypes.string,\n\n  /**\n   * Provide a custom tabIndex value for the <FileUploaderButton>\n   */\n  tabIndex: PropTypes.number,\n\n  /**\n   * Specify the type of underlying button\n   */\n  buttonKind: ButtonTypes.buttonKind,\n\n  /**\n   * Specify the types of files that this input should be able to receive\n   */\n  accept: PropTypes.arrayOf(PropTypes.string)\n});\n\n_defineProperty(FileUploaderButton, \"defaultProps\", {\n  tabIndex: 0,\n  disableLabelChanges: false,\n  labelText: 'Add file',\n  buttonKind: 'primary',\n  multiple: false,\n  onChange: function onChange() {},\n  onClick: function onClick() {},\n  accept: []\n});\n\nexport var Filename =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Filename, _Component2);\n\n  function Filename() {\n    _classCallCheck(this, Filename);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Filename).apply(this, arguments));\n  }\n\n  _createClass(Filename, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          iconDescription = _this$props2.iconDescription,\n          status = _this$props2.status,\n          style = _this$props2.style,\n          other = _objectWithoutProperties(_this$props2, [\"iconDescription\", \"status\", \"style\"]);\n\n      if (status === 'uploading') {\n        return React.createElement(\"div\", _extends({\n          className: \"bx--loading\",\n          style: _objectSpread({}, style, {\n            width: '1rem',\n            height: '1rem'\n          })\n        }, other), React.createElement(\"svg\", {\n          className: \"bx--loading__svg\",\n          viewBox: \"-42 -42 84 84\"\n        }, React.createElement(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: \"37.5\"\n        })));\n      } else if (status === 'edit') {\n        return React.createElement(Icon, _extends({\n          description: iconDescription,\n          className: \"bx--file-close\",\n          icon: iconCloseSolid,\n          style: style\n        }, other));\n      } else if (status === 'complete') {\n        return React.createElement(Icon, _extends({\n          description: iconDescription,\n          className: \"bx--file-complete\",\n          icon: iconCheckmarkSolid,\n          style: style\n        }, other));\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return Filename;\n}(Component);\n\n_defineProperty(Filename, \"propTypes\", {\n  /**\n   * Specify an optional object of styles to be applied inline to the root\n   * node\n   */\n  style: PropTypes.object,\n\n  /**\n   * Specify the status of the File Upload\n   */\n  status: PropTypes.oneOf(['edit', 'complete', 'uploading'])\n});\n\n_defineProperty(Filename, \"defaultProps\", {\n  onKeyDown: function onKeyDown() {},\n  status: 'uploading',\n  style: {},\n  tabIndex: 0\n});\n\nvar FileUploader =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(FileUploader, _Component3);\n\n  function FileUploader() {\n    var _getPrototypeOf3;\n\n    var _this3;\n\n    _classCallCheck(this, FileUploader);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(FileUploader)).call.apply(_getPrototypeOf3, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this3)), \"state\", {\n      filenames: []\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this3)), \"nodes\", []);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this3)), \"handleChange\", function (evt) {\n      evt.stopPropagation();\n\n      _this3.setState({\n        filenames: _this3.state.filenames.concat(Array.prototype.map.call(evt.target.files, function (file) {\n          return file.name;\n        }))\n      });\n\n      _this3.props.onChange(evt);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this3)), \"handleClick\", function (evt, index) {\n      var filteredArray = _this3.state.filenames.filter(function (filename) {\n        return filename !== _this3.nodes[index].innerText.trim();\n      });\n\n      _this3.setState({\n        filenames: filteredArray\n      });\n\n      _this3.props.onClick(evt);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this3)), \"clearFiles\", function () {\n      // A clearFiles function that resets filenames and can be referenced using a ref by the parent.\n      _this3.setState({\n        filenames: []\n      });\n    });\n\n    return _this3;\n  }\n\n  _createClass(FileUploader, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props3 = this.props,\n          iconDescription = _this$props3.iconDescription,\n          buttonLabel = _this$props3.buttonLabel,\n          buttonKind = _this$props3.buttonKind,\n          filenameStatus = _this$props3.filenameStatus,\n          labelDescription = _this$props3.labelDescription,\n          labelTitle = _this$props3.labelTitle,\n          className = _this$props3.className,\n          multiple = _this$props3.multiple,\n          accept = _this$props3.accept,\n          name = _this$props3.name,\n          other = _objectWithoutProperties(_this$props3, [\"iconDescription\", \"buttonLabel\", \"buttonKind\", \"filenameStatus\", \"labelDescription\", \"labelTitle\", \"className\", \"multiple\", \"accept\", \"name\"]);\n\n      var classes = classNames(_defineProperty({\n        'bx--form-item': true\n      }, className, className));\n      return React.createElement(\"div\", _extends({\n        className: classes\n      }, other), React.createElement(\"strong\", {\n        className: \"bx--label\"\n      }, labelTitle), React.createElement(\"p\", {\n        className: \"bx--label-description\"\n      }, labelDescription), React.createElement(FileUploaderButton, {\n        labelText: buttonLabel,\n        multiple: multiple,\n        buttonKind: buttonKind,\n        onChange: this.handleChange,\n        disableLabelChanges: true,\n        accept: accept,\n        name: name\n      }), React.createElement(\"div\", {\n        className: \"bx--file-container\"\n      }, this.state.filenames.length === 0 ? null : this.state.filenames.map(function (name, index) {\n        return React.createElement(\"span\", _extends({\n          key: index,\n          className: \"bx--file__selected-file\",\n          ref: function ref(node) {\n            return _this4.nodes[index] = node;\n          } // eslint-disable-line\n\n        }, other), React.createElement(\"p\", {\n          className: \"bx--file-filename\"\n        }, name), React.createElement(\"span\", {\n          className: \"bx--file__state-container\"\n        }, React.createElement(Filename, {\n          iconDescription: iconDescription,\n          status: filenameStatus,\n          onKeyDown: function onKeyDown(evt) {\n            if (evt.which === 13 || evt.which === 32) {\n              _this4.handleClick(evt, index);\n            }\n          },\n          onClick: function onClick(evt) {\n            if (filenameStatus === 'edit') {\n              _this4.handleClick(evt, index);\n            }\n          }\n        })));\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_ref3, state) {\n      var filenameStatus = _ref3.filenameStatus;\n      var prevFilenameStatus = state.prevFilenameStatus;\n      return prevFilenameStatus === filenameStatus ? null : {\n        filenameStatus: filenameStatus,\n        prevFilenameStatus: filenameStatus\n      };\n    }\n  }]);\n\n  return FileUploader;\n}(Component);\n\n_defineProperty(FileUploader, \"propTypes\", {\n  iconDescription: PropTypes.string,\n  buttonLabel: PropTypes.string,\n  buttonKind: ButtonTypes.buttonKind,\n  filenameStatus: PropTypes.oneOf(['edit', 'complete', 'uploading']).isRequired,\n  labelDescription: PropTypes.string,\n  labelTitle: PropTypes.string,\n  multiple: PropTypes.bool,\n  name: PropTypes.string,\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n  accept: PropTypes.arrayOf(PropTypes.string)\n});\n\n_defineProperty(FileUploader, \"defaultProps\", {\n  iconDescription: 'Provide icon description',\n  filenameStatus: 'uploading',\n  buttonLabel: '',\n  buttonKind: 'primary',\n  multiple: false,\n  onClick: function onClick() {},\n  accept: []\n});\n\nexport { FileUploader as default };","map":null,"metadata":{},"sourceType":"module"}