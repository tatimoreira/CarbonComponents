{"ast":null,"code":"import { getCellId } from './cells';\n/**\n * Default implemention of how we filter rows internally. The idea behind this\n * implementation is to use the given list of row ids and headers to get the\n * individual cell values for a row. Then, we go through each cell value and see\n * if any of them includes the given inputValue.\n *\n * @param {Object} config\n * @param {Array<string>} config.rowIds array of all the row ids in the table\n * @param {Array<Object>} config.headers\n * @param {Object} config.cellsById object containing a map of cell id to cell\n * @param {string} config.inputValue the current input value in the Table Search\n * @returns {Array<string>} rowIds\n */\n\nexport var defaultFilterRows = function defaultFilterRows(_ref) {\n  var rowIds = _ref.rowIds,\n      headers = _ref.headers,\n      cellsById = _ref.cellsById,\n      inputValue = _ref.inputValue;\n  return rowIds.filter(function (rowId) {\n    return headers.some(function (_ref2) {\n      var key = _ref2.key;\n      var id = getCellId(rowId, key);\n      return ('' + cellsById[id].value).toLowerCase().includes(inputValue.toLowerCase());\n    });\n  });\n};","map":null,"metadata":{},"sourceType":"module"}