{"ast":null,"code":"import _typeof2 from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/typeof\";\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { iconCaretUp, iconCaretDown } from 'carbon-icons';\nimport Icon from '../Icon';\nimport classNames from 'classnames';\n\nvar NumberInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NumberInput, _Component);\n\n  function NumberInput(props) {\n    var _this;\n\n    _classCallCheck(this, NumberInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NumberInput).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_inputRef\", null);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleChange\", function (evt) {\n      if (!_this.props.disabled) {\n        evt.persist();\n        evt.imaginaryTarget = _this._inputRef;\n\n        _this.setState({\n          value: evt.target.value\n        }, function () {\n          _this.props.onChange(evt);\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleArrowClick\", function (evt, direction) {\n      var value = typeof _this.state.value === 'string' ? Number(_this.state.value) : _this.state.value;\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          min = _this$props.min,\n          max = _this$props.max,\n          step = _this$props.step;\n      var conditional = direction === 'down' ? min !== undefined && value > min || min === undefined : max !== undefined && value < max || max === undefined;\n\n      if (!disabled && conditional) {\n        value = direction === 'down' ? value - step : value + step;\n        evt.persist();\n        evt.imaginaryTarget = _this._inputRef;\n\n        _this.setState({\n          value: value\n        }, function () {\n          _this.props.onClick(evt, direction);\n\n          _this.props.onChange(evt, direction);\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_handleInputRef\", function (ref) {\n      _this._inputRef = ref;\n    });\n\n    var _value = props.value;\n\n    if (props.min || props.min === 0) {\n      _value = Math.max(props.min, _value);\n    }\n\n    _this.state = {\n      value: _value\n    };\n    return _this;\n  }\n\n  _createClass(NumberInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          disabled = _this$props2.disabled,\n          iconDescription = _this$props2.iconDescription,\n          id = _this$props2.id,\n          label = _this$props2.label,\n          max = _this$props2.max,\n          min = _this$props2.min,\n          step = _this$props2.step,\n          invalid = _this$props2.invalid,\n          invalidText = _this$props2.invalidText,\n          helperText = _this$props2.helperText,\n          light = _this$props2.light,\n          other = _objectWithoutProperties(_this$props2, [\"className\", \"disabled\", \"iconDescription\", \"id\", \"label\", \"max\", \"min\", \"step\", \"invalid\", \"invalidText\", \"helperText\", \"light\"]);\n\n      var numberInputClasses = classNames('bx--number', className, {\n        'bx--number--light': light\n      });\n      var props = {\n        disabled: disabled,\n        id: id,\n        max: max,\n        min: min,\n        step: step,\n        onChange: this.handleChange,\n        value: this.state.value\n      };\n      var buttonProps = {\n        disabled: disabled,\n        type: 'button'\n      };\n      var inputWrapperProps = {};\n      var error = null;\n\n      if (invalid || this.state.value === '') {\n        inputWrapperProps['data-invalid'] = true;\n        error = React.createElement(\"div\", {\n          className: \"bx--form-requirement\"\n        }, invalidText);\n      }\n\n      var helper = helperText ? React.createElement(\"div\", {\n        className: \"bx--form__helper-text\"\n      }, helperText) : null;\n      return React.createElement(\"div\", {\n        className: \"bx--form-item\"\n      }, React.createElement(\"div\", _extends({\n        className: numberInputClasses\n      }, inputWrapperProps), React.createElement(\"div\", {\n        className: \"bx--number__controls\"\n      }, React.createElement(\"button\", _extends({\n        className: \"bx--number__control-btn up-icon\"\n      }, buttonProps, {\n        onClick: function onClick(evt) {\n          return _this2.handleArrowClick(evt, 'up');\n        }\n      }), React.createElement(Icon, {\n        className: \"up-icon\",\n        icon: iconCaretUp,\n        description: this.props.iconDescription,\n        viewBox: \"0 0 10 5\"\n      })), React.createElement(\"button\", _extends({\n        className: \"bx--number__control-btn down-icon\"\n      }, buttonProps, {\n        onClick: function onClick(evt) {\n          return _this2.handleArrowClick(evt, 'down');\n        }\n      }), React.createElement(Icon, {\n        className: \"down-icon\",\n        icon: iconCaretDown,\n        viewBox: \"0 0 10 5\",\n        description: this.props.iconDescription\n      }))), React.createElement(\"label\", {\n        htmlFor: id,\n        className: \"bx--label\"\n      }, label), React.createElement(\"input\", _extends({\n        type: \"number\",\n        pattern: \"[0-9]*\"\n      }, other, props, {\n        ref: this._handleInputRef\n      })), error, helper));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_ref, state) {\n      var min = _ref.min,\n          value = _ref.value;\n\n      var _ref2 = state || {},\n          prevValue = _ref2.prevValue;\n\n      return prevValue === value ? null : {\n        value: isNaN(min) ? value : Math.max(min, value),\n        prevValue: value\n      };\n    }\n  }]);\n\n  return NumberInput;\n}(Component);\n\n_defineProperty(NumberInput, \"propTypes\", {\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  iconDescription: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  label: PropTypes.node,\n  max: PropTypes.number,\n  min: PropTypes.number,\n\n  /**\n   * The new value is available in 'imaginaryTarget.value'\n   * i.e. to get the value: evt.imaginaryTarget.value\n   */\n  onChange: PropTypes.func,\n  onClick: PropTypes.func,\n  step: PropTypes.number,\n  value: PropTypes.number,\n  invalid: PropTypes.bool,\n  invalidText: PropTypes.string,\n  helperText: PropTypes.node,\n\n  /**\n   * `true` to use the light version.\n   */\n  light: PropTypes.bool\n});\n\n_defineProperty(NumberInput, \"defaultProps\", {\n  disabled: false,\n  iconDescription: 'choose a number',\n  label: ' ',\n  onChange: function onChange() {},\n  onClick: function onClick() {},\n  step: 1,\n  value: 0,\n  invalid: false,\n  invalidText: 'Provide invalidText',\n  helperText: '',\n  light: false\n});\n\nexport { NumberInput as default };","map":null,"metadata":{},"sourceType":"module"}