{"ast":null,"code":"/**\n * @param {Event} event The event.\n * @param {string} selector The selector.\n * @returns {Element}\n *   The closest ancestor of the event target (or the event target itself) which matches the selectors given in parameter.\n */\nexport default function eventMatches(event, selector) {\n  // <svg> in IE does not have `Element#msMatchesSelector()` (that should be copied to `Element#matches()` by a polyfill).\n  // Also a weird behavior is seen in IE where DOM tree seems broken when `event.target` is on <svg>.\n  // Therefore this function simply returns `undefined` when `event.target` is on <svg>.\n  var target = event.target,\n      currentTarget = event.currentTarget;\n\n  if (typeof target.matches === 'function') {\n    if (target.matches(selector)) {\n      // If event target itself matches the given selector, return it\n      return target;\n    } else if (target.matches(\"\".concat(selector, \" *\"))) {\n      var closest = target.closest(selector);\n\n      if ((currentTarget.nodeType === Node.DOCUMENT_NODE ? currentTarget.documentElement : currentTarget).contains(closest)) {\n        return closest;\n      }\n    }\n  }\n\n  return undefined;\n}","map":{"version":3,"sources":["/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/src/globals/js/misc/event-matches.js"],"names":["eventMatches","event","selector","target","currentTarget","matches","closest","nodeType","Node","DOCUMENT_NODE","documentElement","contains","undefined"],"mappings":"AAAA;;;;;;AAMA,eAAe,SAASA,YAAT,CAAsBC,KAAtB,EAA6BC,QAA7B,EAAuC;AACpD;AACA;AACA;AAHoD,MAI5CC,MAJ4C,GAIlBF,KAJkB,CAI5CE,MAJ4C;AAAA,MAIpCC,aAJoC,GAIlBH,KAJkB,CAIpCG,aAJoC;;AAKpD,MAAI,OAAOD,MAAM,CAACE,OAAd,KAA0B,UAA9B,EAA0C;AACxC,QAAIF,MAAM,CAACE,OAAP,CAAeH,QAAf,CAAJ,EAA8B;AAC5B;AACA,aAAOC,MAAP;AACD,KAHD,MAGO,IAAIA,MAAM,CAACE,OAAP,WAAkBH,QAAlB,QAAJ,EAAqC;AAC1C,UAAMI,OAAO,GAAGH,MAAM,CAACG,OAAP,CAAeJ,QAAf,CAAhB;;AACA,UAAI,CAACE,aAAa,CAACG,QAAd,KAA2BC,IAAI,CAACC,aAAhC,GAAgDL,aAAa,CAACM,eAA9D,GAAgFN,aAAjF,EAAgGO,QAAhG,CAAyGL,OAAzG,CAAJ,EAAuH;AACrH,eAAOA,OAAP;AACD;AACF;AACF;;AACD,SAAOM,SAAP;AACD","sourcesContent":["/**\n * @param {Event} event The event.\n * @param {string} selector The selector.\n * @returns {Element}\n *   The closest ancestor of the event target (or the event target itself) which matches the selectors given in parameter.\n */\nexport default function eventMatches(event, selector) {\n  // <svg> in IE does not have `Element#msMatchesSelector()` (that should be copied to `Element#matches()` by a polyfill).\n  // Also a weird behavior is seen in IE where DOM tree seems broken when `event.target` is on <svg>.\n  // Therefore this function simply returns `undefined` when `event.target` is on <svg>.\n  const { target, currentTarget } = event;\n  if (typeof target.matches === 'function') {\n    if (target.matches(selector)) {\n      // If event target itself matches the given selector, return it\n      return target;\n    } else if (target.matches(`${selector} *`)) {\n      const closest = target.closest(selector);\n      if ((currentTarget.nodeType === Node.DOCUMENT_NODE ? currentTarget.documentElement : currentTarget).contains(closest)) {\n        return closest;\n      }\n    }\n  }\n  return undefined;\n}\n"]},"metadata":{},"sourceType":"module"}