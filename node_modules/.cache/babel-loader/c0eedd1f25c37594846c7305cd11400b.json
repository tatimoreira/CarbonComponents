{"ast":null,"code":"import _toConsumableArray from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport settings from '../../globals/js/settings';\nimport mixin from '../../globals/js/misc/mixin';\nimport createComponent from '../../globals/js/mixins/create-component';\nimport initComponentBySearch from '../../globals/js/mixins/init-component-by-search';\nimport eventedState from '../../globals/js/mixins/evented-state';\nimport handles from '../../globals/js/mixins/handles';\nimport eventMatches from '../../globals/js/misc/event-matches';\nimport on from '../../globals/js/misc/on';\n\nvar FileUploader =\n/*#__PURE__*/\nfunction (_mixin) {\n  _inherits(FileUploader, _mixin);\n\n  /**\n   * File uploader.\n   * @extends CreateComponent\n   * @extends InitComponentBySearch\n   * @extends eventedState\n   * @extends Handles\n   * @param {HTMLElement} element The element working as a file uploader.\n   * @param {Object} [options] The component options. See static options.\n   */\n  function FileUploader(element) {\n    var _this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, FileUploader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FileUploader).call(this, element, options));\n\n    _this._changeState = function (state, detail, callback) {\n      if (state === 'delete-filename-fileuploader') {\n        _this.container.removeChild(detail.filenameElement);\n      }\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    };\n\n    _this._handleDeleteButton = function (evt) {\n      var target = eventMatches(evt, \"[data-for=\".concat(_this.inputId, \"]\"));\n\n      if (target) {\n        _this._changeState('delete-filename-fileuploader', {\n          initialEvt: evt,\n          filenameElement: target.parentNode\n        });\n      }\n    };\n\n    _this.input = _this.element.querySelector(_this.options.selectorInput);\n    _this.container = _this.element.querySelector(_this.options.selectorContainer);\n\n    if (!_this.input) {\n      throw new TypeError('Cannot find the file input box.');\n    }\n\n    if (!_this.container) {\n      throw new TypeError('Cannot find the file names container.');\n    }\n\n    _this.inputId = _this.input.getAttribute('id');\n\n    _this.manage(on(_this.input, 'change', function () {\n      return _this._displayFilenames();\n    }));\n\n    _this.manage(on(_this.container, 'click', _this._handleDeleteButton));\n\n    return _this;\n  }\n\n  _createClass(FileUploader, [{\n    key: \"_filenamesHTML\",\n    value: function _filenamesHTML(name, id) {\n      return \"<span class=\\\"\".concat(this.options.classSelectedFile, \"\\\">\\n      <p class=\\\"\").concat(this.options.classFileName, \"\\\">\").concat(name, \"</p>\\n      <span data-for=\\\"\").concat(id, \"\\\" class=\\\"\").concat(this.options.classStateContainer, \"\\\"></span>\\n    </span>\");\n    }\n  }, {\n    key: \"_uploadHTML\",\n    value: function _uploadHTML() {\n      return \"\\n      <div data-loading class=\\\"\".concat(this.options.classLoading, \"\\\">\\n        <svg class=\\\"\").concat(this.options.classLoadingSvg, \"\\\" viewBox=\\\"-42 -42 84 84\\\">\\n          <circle cx=\\\"0\\\" cy=\\\"0\\\" r=\\\"37.5\\\" />\\n        </svg>\\n      </div>\");\n    }\n  }, {\n    key: \"_closeButtonHTML\",\n    value: function _closeButtonHTML() {\n      return \"\\n      <svg class=\\\"\".concat(this.options.classFileClose, \"\\\" tabindex=\\\"0\\\" viewBox=\\\"0 0 16 16\\\" fill-rule=\\\"evenodd\\\" width=\\\"16\\\" height=\\\"16\\\">\\n        <path d=\\\"M8 0C3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zm3.5 10.1l-1.4 1.4L8\\n          9.4l-2.1 2.1-1.4-1.4L6.6 8 4.5 5.9l1.4-1.4L8 6.6l2.1-2.1 1.4 1.4L9.4 8l2.1 2.1z\\\" />\\n      </svg>\");\n    }\n  }, {\n    key: \"_checkmarkHTML\",\n    value: function _checkmarkHTML() {\n      return \"\\n      <svg class=\\\"\".concat(this.options.classFileComplete, \"\\\" viewBox=\\\"0 0 16 16\\\" fill-rule=\\\"evenodd\\\" width=\\\"16\\\" height=\\\"16\\\">\\n       <path d=\\\"M8 0C3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zM6.7 11.5L3.4 8.1l1.4-1.4 1.9 1.9 4.1-4.1 1.4 1.4-5.5 5.6z\\\"/>\\n      </svg>\");\n    }\n  }, {\n    key: \"_getStateContainers\",\n    value: function _getStateContainers() {\n      var stateContainers = _toConsumableArray(this.element.querySelectorAll(\"[data-for=\".concat(this.inputId, \"]\")));\n\n      if (stateContainers.length === 0) {\n        throw new TypeError('State container elements not found; invoke _displayFilenames() first');\n      }\n\n      if (stateContainers[0].dataset.for !== this.inputId) {\n        throw new TypeError('File input id must equal [data-for] attribute');\n      }\n\n      return stateContainers;\n    }\n    /**\n     * Inject selected files into DOM. Invoked on change event.\n     */\n\n  }, {\n    key: \"_displayFilenames\",\n    value: function _displayFilenames() {\n      var _this2 = this;\n\n      var container = this.element.querySelector(this.options.selectorContainer);\n\n      var HTMLString = _toConsumableArray(this.input.files).map(function (file) {\n        return _this2._filenamesHTML(file.name, _this2.inputId);\n      }).join('');\n\n      container.insertAdjacentHTML('afterbegin', HTMLString);\n    }\n  }, {\n    key: \"_removeState\",\n    value: function _removeState(element) {\n      if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n        throw new TypeError('DOM element should be given to initialize this widget.');\n      }\n\n      while (element.firstChild) {\n        element.removeChild(element.firstChild);\n      }\n    }\n  }, {\n    key: \"_handleStateChange\",\n    value: function _handleStateChange(elements, selectIndex, html) {\n      var _this3 = this;\n\n      if (selectIndex === undefined) {\n        elements.forEach(function (el) {\n          _this3._removeState(el);\n\n          el.insertAdjacentHTML('beforeend', html);\n        });\n      } else {\n        elements.forEach(function (el, index) {\n          if (index === selectIndex) {\n            _this3._removeState(el);\n\n            el.insertAdjacentHTML('beforeend', html);\n          }\n        });\n      }\n    }\n    /**\n     * Handles delete button.\n     * @param {Event} evt The event triggering this action.\n     * @private\n     */\n\n  }, {\n    key: \"setState\",\n    value: function setState(state, selectIndex) {\n      var stateContainers = this._getStateContainers();\n\n      if (state === 'edit') {\n        this._handleStateChange(stateContainers, selectIndex, this._closeButtonHTML());\n      }\n\n      if (state === 'upload') {\n        this._handleStateChange(stateContainers, selectIndex, this._uploadHTML());\n      }\n\n      if (state === 'complete') {\n        this._handleStateChange(stateContainers, selectIndex, this._checkmarkHTML());\n      }\n    }\n    /**\n     * The map associating DOM element and file uploader instance.\n     * @member FileUploader.components\n     * @type {WeakMap}\n     */\n\n  }], [{\n    key: \"options\",\n    get: function get() {\n      var prefix = settings.prefix;\n      return {\n        selectorInit: '[data-file]',\n        selectorInput: \"input[type=\\\"file\\\"].\".concat(prefix, \"--file-input\"),\n        selectorContainer: '[data-file-container]',\n        selectorCloseButton: \".\".concat(prefix, \"--file-close\"),\n        classLoading: \"\".concat(prefix, \"--loading\"),\n        classLoadingSvg: \"\".concat(prefix, \"--loading__svg\"),\n        classFileName: \"\".concat(prefix, \"--file-filename\"),\n        classFileClose: \"\".concat(prefix, \"--file-close\"),\n        classFileComplete: \"\".concat(prefix, \"--file-complete\"),\n        classSelectedFile: \"\".concat(prefix, \"--file__selected-file\"),\n        classStateContainer: \"\".concat(prefix, \"--file__state-container\"),\n        eventBeforeDeleteFilenameFileuploader: 'fileuploader-before-delete-filename',\n        eventAfterDeleteFilenameFileuploader: 'fileuploader-after-delete-filename'\n      };\n    }\n  }]);\n\n  return FileUploader;\n}(mixin(createComponent, initComponentBySearch, eventedState, handles));\n\nFileUploader.components = new WeakMap();\nexport default FileUploader;","map":{"version":3,"sources":["/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/src/components/file-uploader/file-uploader.js"],"names":["settings","mixin","createComponent","initComponentBySearch","eventedState","handles","eventMatches","on","FileUploader","element","options","_changeState","state","detail","callback","container","removeChild","filenameElement","_handleDeleteButton","evt","target","inputId","initialEvt","parentNode","input","querySelector","selectorInput","selectorContainer","TypeError","getAttribute","manage","_displayFilenames","name","id","classSelectedFile","classFileName","classStateContainer","classLoading","classLoadingSvg","classFileClose","classFileComplete","stateContainers","querySelectorAll","length","dataset","for","HTMLString","files","map","file","_filenamesHTML","join","insertAdjacentHTML","nodeType","Node","ELEMENT_NODE","firstChild","elements","selectIndex","html","undefined","forEach","el","_removeState","index","_getStateContainers","_handleStateChange","_closeButtonHTML","_uploadHTML","_checkmarkHTML","prefix","selectorInit","selectorCloseButton","eventBeforeDeleteFilenameFileuploader","eventAfterDeleteFilenameFileuploader","components","WeakMap"],"mappings":"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","sourcesContent":["import settings from '../../globals/js/settings';\nimport mixin from '../../globals/js/misc/mixin';\nimport createComponent from '../../globals/js/mixins/create-component';\nimport initComponentBySearch from '../../globals/js/mixins/init-component-by-search';\nimport eventedState from '../../globals/js/mixins/evented-state';\nimport handles from '../../globals/js/mixins/handles';\nimport eventMatches from '../../globals/js/misc/event-matches';\nimport on from '../../globals/js/misc/on';\n\nclass FileUploader extends mixin(createComponent, initComponentBySearch, eventedState, handles) {\n  /**\n   * File uploader.\n   * @extends CreateComponent\n   * @extends InitComponentBySearch\n   * @extends eventedState\n   * @extends Handles\n   * @param {HTMLElement} element The element working as a file uploader.\n   * @param {Object} [options] The component options. See static options.\n   */\n  constructor(element, options = {}) {\n    super(element, options);\n    this.input = this.element.querySelector(this.options.selectorInput);\n    this.container = this.element.querySelector(this.options.selectorContainer);\n\n    if (!this.input) {\n      throw new TypeError('Cannot find the file input box.');\n    }\n\n    if (!this.container) {\n      throw new TypeError('Cannot find the file names container.');\n    }\n\n    this.inputId = this.input.getAttribute('id');\n    this.manage(on(this.input, 'change', () => this._displayFilenames()));\n    this.manage(on(this.container, 'click', this._handleDeleteButton));\n  }\n\n  _filenamesHTML(name, id) {\n    return `<span class=\"${this.options.classSelectedFile}\">\n      <p class=\"${this.options.classFileName}\">${name}</p>\n      <span data-for=\"${id}\" class=\"${this.options.classStateContainer}\"></span>\n    </span>`;\n  }\n\n  _uploadHTML() {\n    return `\n      <div data-loading class=\"${this.options.classLoading}\">\n        <svg class=\"${this.options.classLoadingSvg}\" viewBox=\"-42 -42 84 84\">\n          <circle cx=\"0\" cy=\"0\" r=\"37.5\" />\n        </svg>\n      </div>`;\n  }\n\n  _closeButtonHTML() {\n    return `\n      <svg class=\"${this.options.classFileClose}\" tabindex=\"0\" viewBox=\"0 0 16 16\" fill-rule=\"evenodd\" width=\"16\" height=\"16\">\n        <path d=\"M8 0C3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zm3.5 10.1l-1.4 1.4L8\n          9.4l-2.1 2.1-1.4-1.4L6.6 8 4.5 5.9l1.4-1.4L8 6.6l2.1-2.1 1.4 1.4L9.4 8l2.1 2.1z\" />\n      </svg>`;\n  }\n\n  _checkmarkHTML() {\n    return `\n      <svg class=\"${this.options.classFileComplete}\" viewBox=\"0 0 16 16\" fill-rule=\"evenodd\" width=\"16\" height=\"16\">\n       <path d=\"M8 0C3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zM6.7 11.5L3.4 8.1l1.4-1.4 1.9 1.9 4.1-4.1 1.4 1.4-5.5 5.6z\"/>\n      </svg>`;\n  }\n\n  _changeState = (state, detail, callback) => {\n    if (state === 'delete-filename-fileuploader') {\n      this.container.removeChild(detail.filenameElement);\n    }\n    if (typeof callback === 'function') {\n      callback();\n    }\n  };\n\n  _getStateContainers() {\n    const stateContainers = [...this.element.querySelectorAll(`[data-for=${this.inputId}]`)];\n\n    if (stateContainers.length === 0) {\n      throw new TypeError('State container elements not found; invoke _displayFilenames() first');\n    }\n\n    if (stateContainers[0].dataset.for !== this.inputId) {\n      throw new TypeError('File input id must equal [data-for] attribute');\n    }\n\n    return stateContainers;\n  }\n\n  /**\n   * Inject selected files into DOM. Invoked on change event.\n   */\n  _displayFilenames() {\n    const container = this.element.querySelector(this.options.selectorContainer);\n    const HTMLString = [...this.input.files].map(file => this._filenamesHTML(file.name, this.inputId)).join('');\n\n    container.insertAdjacentHTML('afterbegin', HTMLString);\n  }\n\n  _removeState(element) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      throw new TypeError('DOM element should be given to initialize this widget.');\n    }\n    while (element.firstChild) {\n      element.removeChild(element.firstChild);\n    }\n  }\n\n  _handleStateChange(elements, selectIndex, html) {\n    if (selectIndex === undefined) {\n      elements.forEach(el => {\n        this._removeState(el);\n        el.insertAdjacentHTML('beforeend', html);\n      });\n    } else {\n      elements.forEach((el, index) => {\n        if (index === selectIndex) {\n          this._removeState(el);\n          el.insertAdjacentHTML('beforeend', html);\n        }\n      });\n    }\n  }\n\n  /**\n   * Handles delete button.\n   * @param {Event} evt The event triggering this action.\n   * @private\n   */\n  _handleDeleteButton = evt => {\n    const target = eventMatches(evt, `[data-for=${this.inputId}]`);\n    if (target) {\n      this._changeState('delete-filename-fileuploader', {\n        initialEvt: evt,\n        filenameElement: target.parentNode,\n      });\n    }\n  };\n\n  setState(state, selectIndex) {\n    const stateContainers = this._getStateContainers();\n\n    if (state === 'edit') {\n      this._handleStateChange(stateContainers, selectIndex, this._closeButtonHTML());\n    }\n\n    if (state === 'upload') {\n      this._handleStateChange(stateContainers, selectIndex, this._uploadHTML());\n    }\n\n    if (state === 'complete') {\n      this._handleStateChange(stateContainers, selectIndex, this._checkmarkHTML());\n    }\n  }\n\n  /**\n   * The map associating DOM element and file uploader instance.\n   * @member FileUploader.components\n   * @type {WeakMap}\n   */\n  static components = new WeakMap();\n\n  static get options() {\n    const { prefix } = settings;\n    return {\n      selectorInit: '[data-file]',\n      selectorInput: `input[type=\"file\"].${prefix}--file-input`,\n      selectorContainer: '[data-file-container]',\n      selectorCloseButton: `.${prefix}--file-close`,\n      classLoading: `${prefix}--loading`,\n      classLoadingSvg: `${prefix}--loading__svg`,\n      classFileName: `${prefix}--file-filename`,\n      classFileClose: `${prefix}--file-close`,\n      classFileComplete: `${prefix}--file-complete`,\n      classSelectedFile: `${prefix}--file__selected-file`,\n      classStateContainer: `${prefix}--file__state-container`,\n      eventBeforeDeleteFilenameFileuploader: 'fileuploader-before-delete-filename',\n      eventAfterDeleteFilenameFileuploader: 'fileuploader-after-delete-filename',\n    };\n  }\n}\n\nexport default FileUploader;\n"]},"metadata":{},"sourceType":"module"}