{"ast":null,"code":"import _typeof2 from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/typeof\";\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport flatpickr from 'flatpickr';\nimport l10n from 'flatpickr/dist/l10n/index';\nimport rangePlugin from 'flatpickr/dist/plugins/rangePlugin';\nimport DatePickerInput from '../DatePickerInput';\nimport Icon from '../Icon'; // Weekdays shorthand for english locale\n\nl10n.en.weekdays.shorthand.forEach(function (day, index) {\n  var currentDay = l10n.en.weekdays.shorthand;\n\n  if (currentDay[index] === 'Thu' || currentDay[index] === 'Th') {\n    currentDay[index] = 'Th';\n  } else {\n    currentDay[index] = currentDay[index].charAt(0);\n  }\n});\nvar forEach = Array.prototype.forEach;\n\nvar DatePicker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DatePicker, _Component);\n\n  function DatePicker() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DatePicker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DatePicker)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onChange\", function (e) {\n      if (e.target.value === '' && _this.cal.selectedDates.length > 0) {\n        _this.cal.clear();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"addKeyboardEvents\", function (cal) {\n      if (_this.inputField) {\n        _this.inputField.addEventListener('keydown', function (e) {\n          if (e.which === 40) {\n            cal.calendarContainer.focus();\n          }\n        });\n\n        _this.inputField.addEventListener('change', _this.onChange);\n      }\n\n      if (_this.toInputField) {\n        _this.toInputField.addEventListener('blur', function () {\n          _this.cal.close();\n        });\n\n        _this.toInputField.addEventListener('change', _this.onChange);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"openCalendar\", function () {\n      _this.cal.open();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"updateClassNames\", function (calendar) {\n      var calendarContainer = calendar.calendarContainer;\n      var daysContainer = calendar.days;\n\n      if (calendarContainer && daysContainer) {\n        // calendarContainer and daysContainer are undefined if flatpickr detects a mobile device\n        calendarContainer.classList.add('bx--date-picker__calendar');\n        calendarContainer.querySelector('.flatpickr-month').classList.add('bx--date-picker__month');\n        calendarContainer.querySelector('.flatpickr-weekdays').classList.add('bx--date-picker__weekdays');\n        calendarContainer.querySelector('.flatpickr-days').classList.add('bx--date-picker__days');\n        forEach.call(calendarContainer.querySelectorAll('.flatpickr-weekday'), function (item) {\n          var currentItem = item;\n          currentItem.innerHTML = currentItem.innerHTML.replace(/\\s+/g, '');\n          currentItem.classList.add('bx--date-picker__weekday');\n        });\n        forEach.call(daysContainer.querySelectorAll('.flatpickr-day'), function (item) {\n          item.classList.add('bx--date-picker__day');\n\n          if (item.classList.contains('today') && calendar.selectedDates.length > 0) {\n            item.classList.add('no-border');\n          } else if (item.classList.contains('today') && calendar.selectedDates.length === 0) {\n            item.classList.remove('no-border');\n          }\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"assignInputFieldRef\", function (node) {\n      _this.inputField = !node ? null : // Child is a regular DOM node, seen in tests\n      node.nodeType === Node.ELEMENT_NODE ? node.querySelector('.bx--date-picker__input') : // Child is a React component\n      node.input && node.input.nodeType === Node.ELEMENT_NODE ? node.input : null;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"assignToInputFieldRef\", function (node) {\n      _this.toInputField = !node ? null : // Child is a regular DOM node, seen in tests\n      node.nodeType === Node.ELEMENT_NODE ? node.querySelector('.bx--date-picker__input') : // Child is a React component\n      node.input && node.input.nodeType === Node.ELEMENT_NODE ? node.input : null;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"isLabelTextEmpty\", function (children) {\n      return children.every(function (child) {\n        return !child.props.labelText;\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(DatePicker, [{\n    key: \"UNSAFE_componentWillUpdate\",\n    value: function UNSAFE_componentWillUpdate(nextProps) {\n      if (nextProps.value !== this.props.value) {\n        if (this.props.datePickerType === 'single' || this.props.datePickerType === 'range') {\n          this.cal.setDate(nextProps.value);\n          this.updateClassNames(this.cal);\n        } else {\n          if (this.inputField) {\n            this.inputField.value = nextProps.value;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          datePickerType = _this$props.datePickerType,\n          dateFormat = _this$props.dateFormat,\n          locale = _this$props.locale,\n          appendTo = _this$props.appendTo,\n          _onChange = _this$props.onChange,\n          minDate = _this$props.minDate,\n          maxDate = _this$props.maxDate,\n          value = _this$props.value;\n\n      if (datePickerType === 'single' || datePickerType === 'range') {\n        var onHook = function onHook(electedDates, dateStr, instance) {\n          _this2.updateClassNames(instance);\n        };\n\n        var appendToNode = typeof appendTo === 'string' ? document.querySelector(appendTo) : appendTo;\n        this.cal = new flatpickr(this.inputField, {\n          defaultDate: value,\n          appendTo: appendToNode,\n          mode: datePickerType,\n          allowInput: true,\n          dateFormat: dateFormat,\n          locale: l10n[locale],\n          minDate: minDate,\n          maxDate: maxDate,\n          plugins: datePickerType === 'range' ? [new rangePlugin({\n            input: this.toInputField\n          })] : '',\n          clickOpens: true,\n          nextArrow: this.rightArrowHTML(),\n          leftArrow: this.leftArrowHTML(),\n          onChange: function onChange() {\n            if (_onChange) {\n              _onChange.apply(void 0, arguments);\n            }\n          },\n          onReady: onHook,\n          onMonthChange: onHook,\n          onYearChange: onHook,\n          onOpen: onHook,\n          onValueUpdate: onHook\n        });\n        this.addKeyboardEvents(this.cal);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.datePickerType === 'range' || this.props.datePickerType === 'single') {\n        this.cal.destroy();\n      }\n\n      if (this.inputField) {\n        this.inputField.removeEventListener('change', this.onChange);\n      }\n\n      if (this.toInputField) {\n        this.toInputField.removeEventListener('change', this.onChange);\n      }\n    }\n  }, {\n    key: \"rightArrowHTML\",\n    value: function rightArrowHTML() {\n      return \"\\n      <svg height=\\\"12\\\" width=\\\"7\\\" viewBox=\\\"0 0 7 12\\\">\\n        <path d=\\\"M5.569 5.994L0 .726.687 0l6.336 5.994-6.335 6.002L0 11.27z\\\"></path>\\n      </svg>\";\n    }\n  }, {\n    key: \"leftArrowHTML\",\n    value: function leftArrowHTML() {\n      return \"\\n      <svg width=\\\"7\\\" height=\\\"12\\\" viewBox=\\\"0 0 7 12\\\" fill-rule=\\\"evenodd\\\">\\n        <path d=\\\"M1.45 6.002L7 11.27l-.685.726L0 6.003 6.315 0 7 .726z\\\"></path>\\n      </svg>\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          appendTo = _this$props2.appendTo,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          short = _this$props2.short,\n          light = _this$props2.light,\n          datePickerType = _this$props2.datePickerType,\n          minDate = _this$props2.minDate,\n          maxDate = _this$props2.maxDate,\n          dateFormat = _this$props2.dateFormat,\n          onChange = _this$props2.onChange,\n          locale = _this$props2.locale,\n          value = _this$props2.value,\n          iconDescription = _this$props2.iconDescription,\n          other = _objectWithoutProperties(_this$props2, [\"appendTo\", \"children\", \"className\", \"short\", \"light\", \"datePickerType\", \"minDate\", \"maxDate\", \"dateFormat\", \"onChange\", \"locale\", \"value\", \"iconDescription\"]);\n\n      var datePickerClasses = classNames('bx--date-picker', className, {\n        'bx--date-picker--short': short,\n        'bx--date-picker--light': light,\n        'bx--date-picker--simple': datePickerType === 'simple',\n        'bx--date-picker--single': datePickerType === 'single',\n        'bx--date-picker--range': datePickerType === 'range',\n        'bx--date-picker--nolabel': datePickerType === 'range' && this.isLabelTextEmpty(children)\n      });\n      var datePickerIcon = datePickerType === 'range' ? React.createElement(Icon, {\n        name: \"calendar\",\n        className: \"bx--date-picker__icon\",\n        description: iconDescription,\n        onClick: this.openCalendar\n      }) : '';\n      var childArray = React.Children.toArray(children);\n      var childrenWithProps = childArray.map(function (child, index) {\n        if (index === 0 && child.type === DatePickerInput) {\n          return React.cloneElement(child, {\n            datePickerType: datePickerType,\n            ref: _this3.assignInputFieldRef,\n            openCalendar: _this3.openCalendar\n          });\n        } else if (index === 1 && child.type === DatePickerInput) {\n          return React.cloneElement(child, {\n            datePickerType: datePickerType,\n            ref: _this3.assignToInputFieldRef\n          });\n        } else if (index === 0) {\n          return React.cloneElement(child, {\n            ref: _this3.assignInputFieldRef\n          });\n        } else if (index === 1) {\n          return React.cloneElement(child, {\n            ref: _this3.assignToInputFieldRef\n          });\n        }\n      });\n      return React.createElement(\"div\", {\n        className: \"bx--form-item\"\n      }, React.createElement(\"div\", _extends({\n        className: datePickerClasses\n      }, other), childrenWithProps, datePickerIcon));\n    }\n  }]);\n\n  return DatePicker;\n}(Component);\n\n_defineProperty(DatePicker, \"propTypes\", {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n\n  /**\n   * `true` to use the short version.\n   */\n  short: PropTypes.bool,\n\n  /**\n   * `true` to use the light version.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The type of the date picker:\n   *\n   * * `simple` - Without calendar dropdown.\n   * * `single` - With calendar dropdown and single date.\n   * * `range` - With calendar dropdown and a date range.\n   */\n  datePickerType: PropTypes.oneOf(['simple', 'single', 'range']),\n\n  /**\n   * The description of the calendar icon.\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * The date format.\n   */\n  dateFormat: PropTypes.string,\n\n  /**\n   *  The language locale used to format the days of the week, months, and numbers.\n   *\n   * * `ar` - Arabic\n   * * `at` - Austria\n   * * `be` - Belarusian\n   * * `bg` - Bulgarian\n   * * `bn` - Bangla\n   * * `cat` - Catalan\n   * * `cs` - Czech\n   * * `cy` - Welsh\n   * * `da` - Danish\n   * * `de` - German\n   * * `en` - English\n   * * `eo` - Esperanto\n   * * `es` - Spanish\n   * * `et` - Estonian\n   * * `fa` - Persian\n   * * `fi` - Finnish\n   * * `fr` - French\n   * * `gr` - Greek\n   * * `he` - Hebrew\n   * * `hi` - Hindi\n   * * `hr` - Croatian\n   * * `hu` - Hungarian\n   * * `id` - Indonesian\n   * * `it` - Italian\n   * * `ja` - Japanese\n   * * `ko` - Korean\n   * * `lt` - Lithuanian\n   * * `lv` - Latvian\n   * * `mk` - Macedonian\n   * * `mn` - Mongolian\n   * * `ms` - Malaysian\n   * * `my` - Burmese\n   * * `nl` - Dutch\n   * * `no` - Norwegian\n   * * `pa` - Punjabi\n   * * `pl` - Polish\n   * * `pt` - Portuguese\n   * * `ro` - Romanian\n   * * `si` - Sinhala\n   * * `sk` - Slovak\n   * * `sl` - Slovenian\n   * * `sq` - Albanian\n   * * `sr` - Serbian\n   * * `sv` - Swedish\n   * * `th` - Thai\n   * * `tr` - Turkish\n   * * `uk` - Ukrainian\n   * * `vn` - Vietnamese\n   * * `zh` - Mandarin\n   */\n  locale: PropTypes.oneOf(['ar', 'at', 'be', 'bg', 'bn', 'cat', 'cs', 'cy', 'da', 'de', 'en', 'en', 'eo', 'es', 'et', 'fa', 'fi', 'fr', 'gr', 'he', 'hi', 'hr', 'hu', 'id', 'it', 'ja', 'ko', 'lt', 'lv', 'mk', 'mn', 'ms', 'my', 'nl', 'no', 'pa', 'pl', 'pt', 'ro', 'ru', 'si', 'sk', 'sl', 'sq', 'sr', 'sv', 'th', 'tr', 'uk', 'vn', 'zh']),\n\n  /**\n   * The value of the date value provided to flatpickr, could\n   * be a date, a date number, a date string, an array of dates.\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object])), PropTypes.object, PropTypes.number]),\n\n  /**\n   * The DOM element or selector the Flatpicker should be inserted into. `<body>` by default.\n   */\n  appendTo: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n\n  /**\n   * The `change` event handler.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The minimum date that a user can start picking from.\n   */\n  minDate: PropTypes.string,\n\n  /**\n   * The maximum date that a user can pick to.\n   */\n  maxDate: PropTypes.string\n});\n\n_defineProperty(DatePicker, \"defaultProps\", {\n  short: false,\n  light: false,\n  dateFormat: 'm/d/Y',\n  locale: 'en'\n});\n\nexport { DatePicker as default };","map":null,"metadata":{},"sourceType":"module"}