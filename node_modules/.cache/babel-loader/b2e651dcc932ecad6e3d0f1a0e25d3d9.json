{"ast":null,"code":"import _classCallCheck from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport debounce from 'lodash.debounce';\nimport settings from '../../globals/js/settings';\nimport mixin from '../../globals/js/misc/mixin';\nimport createComponent from '../../globals/js/mixins/create-component';\nimport initComponentByEvent from '../../globals/js/mixins/init-component-by-event';\nimport eventedShowHideState from '../../globals/js/mixins/evented-show-hide-state';\nimport handles from '../../globals/js/mixins/handles';\nimport FloatingMenu, { DIRECTION_LEFT, DIRECTION_TOP, DIRECTION_RIGHT, DIRECTION_BOTTOM } from '../floating-menu/floating-menu';\nimport getLaunchingDetails from '../../globals/js/misc/get-launching-details';\nimport on from '../../globals/js/misc/on';\n/**\n * @param {Element} menuBody The menu body with the menu arrow.\n * @param {string} menuDirection Where the floating menu menu should be placed relative to the trigger button.\n * @returns {FloatingMenu~offset} The adjustment of the floating menu position, upon the position of the menu arrow.\n * @private\n */\n\nvar getMenuOffset = function getMenuOffset(menuBody, menuDirection) {\n  var _DIRECTION_LEFT$DIREC, _DIRECTION_LEFT$DIREC2;\n\n  var arrowStyle = menuBody.ownerDocument.defaultView.getComputedStyle(menuBody, ':before');\n  var arrowPositionProp = (_DIRECTION_LEFT$DIREC = {}, _defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_LEFT, 'right'), _defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_TOP, 'bottom'), _defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_RIGHT, 'left'), _defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_BOTTOM, 'top'), _DIRECTION_LEFT$DIREC)[menuDirection];\n  var menuPositionAdjustmentProp = (_DIRECTION_LEFT$DIREC2 = {}, _defineProperty(_DIRECTION_LEFT$DIREC2, DIRECTION_LEFT, 'left'), _defineProperty(_DIRECTION_LEFT$DIREC2, DIRECTION_TOP, 'top'), _defineProperty(_DIRECTION_LEFT$DIREC2, DIRECTION_RIGHT, 'left'), _defineProperty(_DIRECTION_LEFT$DIREC2, DIRECTION_BOTTOM, 'top'), _DIRECTION_LEFT$DIREC2)[menuDirection];\n  var values = [arrowPositionProp, 'border-bottom-width'].reduce(function (o, name) {\n    return _objectSpread({}, o, _defineProperty({}, name, Number((/^([\\d-.]+)px$/.exec(arrowStyle.getPropertyValue(name)) || [])[1])));\n  }, {});\n  values[arrowPositionProp] = values[arrowPositionProp] || -6; // IE, etc.\n\n  if (Object.keys(values).every(function (name) {\n    return !isNaN(values[name]);\n  })) {\n    var arrowPosition = values[arrowPositionProp],\n        borderBottomWidth = values['border-bottom-width'];\n    return _defineProperty({\n      left: 0,\n      top: 0\n    }, menuPositionAdjustmentProp, Math.sqrt(Math.pow(borderBottomWidth, 2) * 2) - arrowPosition);\n  }\n\n  return undefined;\n};\n\nvar Tooltip =\n/*#__PURE__*/\nfunction (_mixin) {\n  _inherits(Tooltip, _mixin);\n\n  /**\n   * Tooltip.\n   * @extends CreateComponent\n   * @extends InitComponentBySearch\n   * @extends Handles\n   */\n  function Tooltip(element, options) {\n    var _this;\n\n    _classCallCheck(this, Tooltip);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tooltip).call(this, element, options));\n    _this._hasContextMenu = false;\n    _this._debouncedHandleClick = debounce(_this._handleClick, 200);\n\n    _this._hookOn(element);\n\n    return _this;\n  }\n  /**\n   * A flag to detect if `oncontextmenu` event is fired right before `focus`/`blur` events.\n   * @type {boolean}\n   */\n\n\n  _createClass(Tooltip, [{\n    key: \"createdByEvent\",\n\n    /**\n     * A method called when this widget is created upon events.\n     * @param {Event} event The event triggering the creation.\n     */\n    value: function createdByEvent(event) {\n      var relatedTarget = event.relatedTarget,\n          type = event.type;\n\n      this._debouncedHandleClick({\n        relatedTarget: relatedTarget,\n        type: type === 'focusin' ? 'focus' : type,\n        details: getLaunchingDetails(event)\n      });\n    }\n    /**\n     * Changes the shown/hidden state.\n     * @param {string} state The new state.\n     * @param {Object} detail The detail of the event trigging this action.\n     * @param {Function} callback Callback called when change in state completes.\n     // */\n\n  }, {\n    key: \"changeState\",\n    value: function changeState(state, detail, callback) {\n      if (!this.tooltip) {\n        var tooltip = this.element.ownerDocument.querySelector(this.element.getAttribute(this.options.attribTooltipTarget));\n\n        if (!tooltip) {\n          throw new Error('Cannot find the target tooltip.');\n        } // Lazily create a component instance for tooltip\n\n\n        this.tooltip = FloatingMenu.create(tooltip, {\n          refNode: this.element,\n          classShown: this.options.classShown,\n          offset: this.options.objMenuOffset\n        });\n\n        this._hookOn(tooltip);\n\n        this.children.push(this.tooltip);\n      } // Delegates the action of changing state to the tooltip.\n      // (And thus the before/after shown/hidden events are fired from the tooltip)\n\n\n      this.tooltip.changeState(state, Object.assign(detail, {\n        delegatorNode: this.element\n      }), callback);\n    }\n    /**\n     * Attaches event handlers to show/hide the tooltip.\n     * @param {Element} element The element to attach the events to.\n     * @private\n     */\n\n  }, {\n    key: \"_hookOn\",\n    value: function _hookOn(element) {\n      var _this2 = this;\n\n      var hasFocusin = 'onfocusin' in window;\n      var focusinEventName = hasFocusin ? 'focusin' : 'focus';\n      [focusinEventName, 'blur', 'touchleave', 'touchcancel'].forEach(function (name) {\n        _this2.manage(on(element, name, function (event) {\n          var relatedTarget = event.relatedTarget,\n              type = event.type;\n          var hadContextMenu = _this2._hasContextMenu;\n          _this2._hasContextMenu = type === 'contextmenu';\n\n          _this2._debouncedHandleClick({\n            relatedTarget: relatedTarget,\n            type: type === 'focusin' ? 'focus' : type,\n            hadContextMenu: hadContextMenu,\n            details: getLaunchingDetails(event)\n          });\n        }, name === focusinEventName && !hasFocusin));\n      });\n    }\n    /**\n     * Handles click/focus events.\n     * @param {Object} params The parameters.\n     * @param {Element} params.relatedTarget The element that focus went to. (For `blur` event)\n     * @param {string} params.type The event type triggering this method.\n     * @param {boolean} params.hadContextMenu\n     * @param {Object} params.details The event details.\n     * @private\n     */\n\n  }, {\n    key: \"_handleClick\",\n    value: function _handleClick(_ref2) {\n      var relatedTarget = _ref2.relatedTarget,\n          type = _ref2.type,\n          hadContextMenu = _ref2.hadContextMenu,\n          details = _ref2.details;\n      var state = {\n        focus: 'shown',\n        blur: 'hidden',\n        touchleave: 'hidden',\n        touchcancel: 'hidden'\n      }[type];\n      var shouldPreventClose;\n\n      if (type === 'blur') {\n        // Note: SVGElement in IE11 does not have `.contains()`\n        var wentToSelf = relatedTarget && this.element.contains && this.element.contains(relatedTarget) || this.tooltip && this.tooltip.element.contains(relatedTarget);\n        shouldPreventClose = hadContextMenu || wentToSelf;\n      }\n\n      if (!shouldPreventClose) {\n        this.changeState(state, details);\n      }\n    }\n  }], [{\n    key: \"options\",\n    get: function get() {\n      var prefix = settings.prefix;\n      return {\n        selectorInit: '[data-tooltip-trigger]',\n        classShown: \"\".concat(prefix, \"--tooltip--shown\"),\n        attribTooltipTarget: 'data-tooltip-target',\n        objMenuOffset: getMenuOffset,\n        initEventNames: ['focus']\n      };\n    }\n  }]);\n\n  return Tooltip;\n}(mixin(createComponent, initComponentByEvent, eventedShowHideState, handles));\n\nTooltip.components = new WeakMap();\nexport default Tooltip;","map":{"version":3,"sources":["/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/src/components/tooltip/tooltip.js"],"names":["debounce","settings","mixin","createComponent","initComponentByEvent","eventedShowHideState","handles","FloatingMenu","DIRECTION_LEFT","DIRECTION_TOP","DIRECTION_RIGHT","DIRECTION_BOTTOM","getLaunchingDetails","on","getMenuOffset","menuBody","menuDirection","arrowStyle","ownerDocument","defaultView","getComputedStyle","arrowPositionProp","menuPositionAdjustmentProp","values","reduce","o","name","Number","exec","getPropertyValue","Object","keys","every","isNaN","arrowPosition","borderBottomWidth","left","top","Math","sqrt","undefined","Tooltip","element","options","_hasContextMenu","_debouncedHandleClick","_handleClick","_hookOn","event","relatedTarget","type","details","state","detail","callback","tooltip","querySelector","getAttribute","attribTooltipTarget","Error","create","refNode","classShown","offset","objMenuOffset","children","push","changeState","assign","delegatorNode","hasFocusin","window","focusinEventName","forEach","manage","hadContextMenu","focus","blur","touchleave","touchcancel","shouldPreventClose","wentToSelf","contains","prefix","selectorInit","initEventNames","components","WeakMap"],"mappings":"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","sourcesContent":["import debounce from 'lodash.debounce';\nimport settings from '../../globals/js/settings';\nimport mixin from '../../globals/js/misc/mixin';\nimport createComponent from '../../globals/js/mixins/create-component';\nimport initComponentByEvent from '../../globals/js/mixins/init-component-by-event';\nimport eventedShowHideState from '../../globals/js/mixins/evented-show-hide-state';\nimport handles from '../../globals/js/mixins/handles';\nimport FloatingMenu, { DIRECTION_LEFT, DIRECTION_TOP, DIRECTION_RIGHT, DIRECTION_BOTTOM } from '../floating-menu/floating-menu';\nimport getLaunchingDetails from '../../globals/js/misc/get-launching-details';\nimport on from '../../globals/js/misc/on';\n\n/**\n * @param {Element} menuBody The menu body with the menu arrow.\n * @param {string} menuDirection Where the floating menu menu should be placed relative to the trigger button.\n * @returns {FloatingMenu~offset} The adjustment of the floating menu position, upon the position of the menu arrow.\n * @private\n */\nconst getMenuOffset = (menuBody, menuDirection) => {\n  const arrowStyle = menuBody.ownerDocument.defaultView.getComputedStyle(menuBody, ':before');\n  const arrowPositionProp = {\n    [DIRECTION_LEFT]: 'right',\n    [DIRECTION_TOP]: 'bottom',\n    [DIRECTION_RIGHT]: 'left',\n    [DIRECTION_BOTTOM]: 'top',\n  }[menuDirection];\n  const menuPositionAdjustmentProp = {\n    [DIRECTION_LEFT]: 'left',\n    [DIRECTION_TOP]: 'top',\n    [DIRECTION_RIGHT]: 'left',\n    [DIRECTION_BOTTOM]: 'top',\n  }[menuDirection];\n  const values = [arrowPositionProp, 'border-bottom-width'].reduce(\n    (o, name) => ({\n      ...o,\n      [name]: Number((/^([\\d-.]+)px$/.exec(arrowStyle.getPropertyValue(name)) || [])[1]),\n    }),\n    {}\n  );\n  values[arrowPositionProp] = values[arrowPositionProp] || -6; // IE, etc.\n  if (Object.keys(values).every(name => !isNaN(values[name]))) {\n    const { [arrowPositionProp]: arrowPosition, 'border-bottom-width': borderBottomWidth } = values;\n    return {\n      left: 0,\n      top: 0,\n      [menuPositionAdjustmentProp]: Math.sqrt(borderBottomWidth ** 2 * 2) - arrowPosition,\n    };\n  }\n  return undefined;\n};\n\nclass Tooltip extends mixin(createComponent, initComponentByEvent, eventedShowHideState, handles) {\n  /**\n   * Tooltip.\n   * @extends CreateComponent\n   * @extends InitComponentBySearch\n   * @extends Handles\n   */\n  constructor(element, options) {\n    super(element, options);\n    this._hookOn(element);\n  }\n\n  /**\n   * A flag to detect if `oncontextmenu` event is fired right before `focus`/`blur` events.\n   * @type {boolean}\n   */\n  _hasContextMenu = false;\n\n  /**\n   * The debounced version of the event handler.\n   * @type {Function}\n   * @private\n   */\n  _debouncedHandleClick = debounce(this._handleClick, 200);\n\n  /**\n   * A method called when this widget is created upon events.\n   * @param {Event} event The event triggering the creation.\n   */\n  createdByEvent(event) {\n    const { relatedTarget, type } = event;\n    this._debouncedHandleClick({ relatedTarget, type: type === 'focusin' ? 'focus' : type, details: getLaunchingDetails(event) });\n  }\n\n  /**\n   * Changes the shown/hidden state.\n   * @param {string} state The new state.\n   * @param {Object} detail The detail of the event trigging this action.\n   * @param {Function} callback Callback called when change in state completes.\n   // */\n  changeState(state, detail, callback) {\n    if (!this.tooltip) {\n      const tooltip = this.element.ownerDocument.querySelector(this.element.getAttribute(this.options.attribTooltipTarget));\n      if (!tooltip) {\n        throw new Error('Cannot find the target tooltip.');\n      }\n\n      // Lazily create a component instance for tooltip\n      this.tooltip = FloatingMenu.create(tooltip, {\n        refNode: this.element,\n        classShown: this.options.classShown,\n        offset: this.options.objMenuOffset,\n      });\n      this._hookOn(tooltip);\n      this.children.push(this.tooltip);\n    }\n\n    // Delegates the action of changing state to the tooltip.\n    // (And thus the before/after shown/hidden events are fired from the tooltip)\n    this.tooltip.changeState(state, Object.assign(detail, { delegatorNode: this.element }), callback);\n  }\n\n  /**\n   * Attaches event handlers to show/hide the tooltip.\n   * @param {Element} element The element to attach the events to.\n   * @private\n   */\n  _hookOn(element) {\n    const hasFocusin = 'onfocusin' in window;\n    const focusinEventName = hasFocusin ? 'focusin' : 'focus';\n    [focusinEventName, 'blur', 'touchleave', 'touchcancel'].forEach(name => {\n      this.manage(\n        on(\n          element,\n          name,\n          event => {\n            const { relatedTarget, type } = event;\n            const hadContextMenu = this._hasContextMenu;\n            this._hasContextMenu = type === 'contextmenu';\n            this._debouncedHandleClick({\n              relatedTarget,\n              type: type === 'focusin' ? 'focus' : type,\n              hadContextMenu,\n              details: getLaunchingDetails(event),\n            });\n          },\n          name === focusinEventName && !hasFocusin\n        )\n      );\n    });\n  }\n\n  /**\n   * Handles click/focus events.\n   * @param {Object} params The parameters.\n   * @param {Element} params.relatedTarget The element that focus went to. (For `blur` event)\n   * @param {string} params.type The event type triggering this method.\n   * @param {boolean} params.hadContextMenu\n   * @param {Object} params.details The event details.\n   * @private\n   */\n  _handleClick({ relatedTarget, type, hadContextMenu, details }) {\n    const state = {\n      focus: 'shown',\n      blur: 'hidden',\n      touchleave: 'hidden',\n      touchcancel: 'hidden',\n    }[type];\n\n    let shouldPreventClose;\n    if (type === 'blur') {\n      // Note: SVGElement in IE11 does not have `.contains()`\n      const wentToSelf =\n        (relatedTarget && (this.element.contains && this.element.contains(relatedTarget))) ||\n        (this.tooltip && this.tooltip.element.contains(relatedTarget));\n      shouldPreventClose = hadContextMenu || wentToSelf;\n    }\n    if (!shouldPreventClose) {\n      this.changeState(state, details);\n    }\n  }\n\n  static components = new WeakMap();\n\n  static get options() {\n    const { prefix } = settings;\n    return {\n      selectorInit: '[data-tooltip-trigger]',\n      classShown: `${prefix}--tooltip--shown`,\n      attribTooltipTarget: 'data-tooltip-target',\n      objMenuOffset: getMenuOffset,\n      initEventNames: ['focus'],\n    };\n  }\n}\n\nexport default Tooltip;\n"]},"metadata":{},"sourceType":"module"}