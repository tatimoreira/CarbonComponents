{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\n\nvar TableRowExpanded = function TableRowExpanded(props) {\n  var _classNames;\n\n  var children = props.children,\n      className = props.className,\n      even = props.even,\n      colSpan = props.colSpan,\n      expanded = props.expanded,\n      other = _objectWithoutProperties(props, [\"children\", \"className\", \"even\", \"colSpan\", \"expanded\"]);\n\n  var tableRowClasses = classNames((_classNames = {}, _defineProperty(_classNames, className, className), _defineProperty(_classNames, 'bx--table-row', true), _defineProperty(_classNames, 'bx--expandable-row', true), _defineProperty(_classNames, 'bx--expandable-row--even', even), _classNames));\n\n  if (!expanded) {\n    return false;\n  }\n\n  return React.createElement(\"tr\", _extends({}, other, {\n    className: tableRowClasses\n  }), React.createElement(\"td\", {\n    colSpan: colSpan\n  }, children));\n};\n\nTableRowExpanded.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  colSpan: PropTypes.number,\n  expanded: PropTypes.bool,\n  even: PropTypes.bool\n};\nTableRowExpanded.defaultProps = {\n  expanded: false\n};\nexport default TableRowExpanded;","map":null,"metadata":{},"sourceType":"module"}