{"ast":null,"code":"import _classCallCheck from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/src/SimpleDataTable.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from 'carbon-components-react';\nvar url = \"http://localhost:3000/data\";\nvar headers = [{\n  key: \"name\",\n  header: \"Name\"\n}, {\n  key: \"protocol\",\n  header: \"Protocol\"\n}, {\n  key: \"port\",\n  header: \"Port\"\n}, {\n  key: \"rule\",\n  header: \"Rule\"\n}];\nvar Table = DataTable.Table,\n    TableHead = DataTable.TableHead,\n    TableHeader = DataTable.TableHeader,\n    TableBody = DataTable.TableBody,\n    TableCell = DataTable.TableCell,\n    TableContainer = DataTable.TableContainer,\n    TableRow = DataTable.TableRow,\n    TableSelectAll = DataTable.TableSelectAll,\n    TableSelectRow = DataTable.TableSelectRow,\n    TableToolbar = DataTable.TableToolbar,\n    TableToolbarSearch = DataTable.TableToolbarSearch,\n    TableToolbarContent = DataTable.TableToolbarContent,\n    TableToolbarAction = DataTable.TableToolbarAction,\n    iconDownload = DataTable.iconDownload,\n    action = DataTable.action,\n    iconEdit = DataTable.iconEdit,\n    iconSettings = DataTable.iconSettings,\n    Button = DataTable.Button;\n\nvar SimpleDataTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SimpleDataTable, _Component);\n\n  function SimpleDataTable(props) {\n    var _this;\n\n    _classCallCheck(this, SimpleDataTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SimpleDataTable).call(this, props));\n\n    _this.onSearch = function (e) {\n      console.log(e.target.value);\n    };\n\n    _this.state = {\n      people: []\n    };\n    return _this;\n  }\n\n  _createClass(SimpleDataTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(url).then(function (resp) {\n        return resp.json();\n      }).then(function (data) {\n        _this2.setState({\n          people: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        rows: this.state.people,\n        headers: headers,\n        render: function render(_ref) {\n          var rows = _ref.rows,\n              headers = _ref.headers,\n              getHeaderProps = _ref.getHeaderProps,\n              getSelectionProps = _ref.getSelectionProps,\n              selectedRows = _ref.selectedRows,\n              onInputChange = _ref.onInputChange;\n          return React.createElement(TableContainer, {\n            title: \"Test Table Component\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, React.createElement(TableToolbar, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, React.createElement(TableToolbarSearch, {\n            onChange: onInputChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          })), React.createElement(TableToolbarContent, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }), React.createElement(Table, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, React.createElement(TableHead, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, React.createElement(TableRow, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, React.createElement(TableSelectAll, Object.assign({}, getSelectionProps(), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          })), headers.map(function (header) {\n            return React.createElement(TableHeader, Object.assign({}, getHeaderProps({\n              header: header\n            }), {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 92\n              },\n              __self: this\n            }), header.header);\n          }))), React.createElement(TableBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, rows.map(function (row) {\n            return React.createElement(TableRow, {\n              key: row.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100\n              },\n              __self: this\n            }, React.createElement(TableSelectRow, Object.assign({}, getSelectionProps({\n              row: row\n            }), {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 101\n              },\n              __self: this\n            })), row.cells.map(function (cell) {\n              return React.createElement(TableCell, {\n                key: cell.id,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 103\n                },\n                __self: this\n              }, cell.value);\n            }));\n          }))));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SimpleDataTable;\n}(Component);\n\nexport default SimpleDataTable;","map":{"version":3,"sources":["/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/src/SimpleDataTable.js"],"names":["React","Component","DataTable","url","headers","key","header","Table","TableHead","TableHeader","TableBody","TableCell","TableContainer","TableRow","TableSelectAll","TableSelectRow","TableToolbar","TableToolbarSearch","TableToolbarContent","TableToolbarAction","iconDownload","action","iconEdit","iconSettings","Button","SimpleDataTable","props","onSearch","e","console","log","target","value","state","people","fetch","then","resp","json","data","setState","rows","getHeaderProps","getSelectionProps","selectedRows","onInputChange","map","row","id","cells","cell"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { DataTable } from 'carbon-components-react';\n\nconst url = \"http://localhost:3000/data\";\n\nconst headers = [\n    {\n        key: \"name\",\n        header: \"Name\"\n    },\n    {\n        key: \"protocol\",\n        header: \"Protocol\"\n    },\n    {\n        key: \"port\",\n        header: \"Port\"\n    },\n    {\n        key: \"rule\",\n        header: \"Rule\"\n    }\n];\nconst {\n    Table,\n    TableHead,\n    TableHeader,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableRow,\n    TableSelectAll,\n    TableSelectRow,\n    TableToolbar,\n    TableToolbarSearch,\n    TableToolbarContent,\n    TableToolbarAction,\n    iconDownload,\n    action,\n    iconEdit,\n    iconSettings,\n    Button\n} = DataTable;\n\nclass SimpleDataTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            people: []\n        };\n    }\n\n    componentDidMount() {\n        fetch(url)\n            .then(resp => resp.json())\n            .then(data => {\n                this.setState({ people: data });\n            })\n    }\n\n    onSearch = e => {\n        console.log(e.target.value);\n    };\n\n    render() {\n        return (\n            <div>\n                <DataTable\n                    rows={this.state.people}\n                    headers={headers}\n                    render={({\n                        rows,\n                        headers,\n                        getHeaderProps,\n                        getSelectionProps,\n                        selectedRows,\n                        onInputChange\n                    }) => (\n                            <TableContainer title=\"Test Table Component\">\n                                <TableToolbar>\n                                    {/* pass in `onInputChange` change here to make filtering work */}\n                                    <TableToolbarSearch onChange={onInputChange} />\n                                </TableToolbar>\n                                <TableToolbarContent>\n                                   \n                                </TableToolbarContent>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableSelectAll {...getSelectionProps()} />\n                                            {headers.map(header => (\n                                                <TableHeader {...getHeaderProps({ header })}>\n                                                    {header.header}\n                                                </TableHeader>\n                                            ))}\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {rows.map(row => (\n                                            <TableRow key={row.id}>\n                                                <TableSelectRow {...getSelectionProps({ row })} />\n                                                {row.cells.map(cell => (\n                                                    <TableCell key={cell.id}>{cell.value}</TableCell>\n                                                ))}\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>)} />\n            </div>\n        );\n    }\n}\n\nexport default SimpleDataTable;\n"]},"metadata":{},"sourceType":"module"}