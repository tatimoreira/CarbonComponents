{"ast":null,"code":"import _toConsumableArray from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport eventMatches from '../misc/event-matches';\nimport on from '../misc/on';\nexport default function (ToMix) {\n  /**\n   * Mix-in class to instantiate components events on launcher button.\n   * @class InitComponentByLauncher\n   */\n  var InitComponentByLauncher =\n  /*#__PURE__*/\n  function (_ToMix) {\n    _inherits(InitComponentByLauncher, _ToMix);\n\n    function InitComponentByLauncher() {\n      _classCallCheck(this, InitComponentByLauncher);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(InitComponentByLauncher).apply(this, arguments));\n    }\n\n    _createClass(InitComponentByLauncher, null, [{\n      key: \"init\",\n\n      /**\n       * `true` suggests that this component is lazily initialized upon an action/event, etc.\n       * @type {boolean}\n       */\n\n      /**\n       * Instantiates this component in the given element.\n       * If the given element indicates that it's an component of this class, instantiates it.\n       * Otherwise, instantiates this component by clicking on launcher buttons\n       * (buttons with attribute that `options.attribInitTarget` points to) of this component in the given node.\n       * @param {Node} target The DOM node to instantiate this component in. Should be a document or an element.\n       * @param {Object} [options] The component options.\n       * @param {string} [options.selectorInit] The CSS selector to find this component.\n       * @param {string} [options.attribInitTarget] The attribute name in the launcher buttons to find target component.\n       * @returns {Handle} The handle to remove the event listener to handle clicking.\n       */\n      value: function init() {\n        var _this = this;\n\n        var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var effectiveOptions = Object.assign(Object.create(this.options), options);\n\n        if (!target || target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {\n          throw new TypeError('DOM document or DOM element should be given to search for and initialize this widget.');\n        }\n\n        if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n          this.create(target, options);\n        } else {\n          var handles = effectiveOptions.initEventNames.map(function (name) {\n            return on(target, name, function (event) {\n              var launcher = eventMatches(event, \"[\".concat(effectiveOptions.attribInitTarget, \"]\"));\n\n              if (launcher) {\n                event.delegateTarget = launcher; // eslint-disable-line no-param-reassign\n\n                var elements = _toConsumableArray(launcher.ownerDocument.querySelectorAll(launcher.getAttribute(effectiveOptions.attribInitTarget)));\n\n                if (elements.length > 1) {\n                  throw new Error('Target widget must be unique.');\n                }\n\n                if (elements.length === 1) {\n                  if (launcher.tagName === 'A') {\n                    event.preventDefault();\n                  }\n\n                  var component = _this.create(elements[0], options);\n\n                  if (typeof component.createdByLauncher === 'function') {\n                    component.createdByLauncher(event);\n                  }\n                }\n              }\n            });\n          });\n          return {\n            release: function release() {\n              for (var handle = handles.pop(); handle; handle = handles.pop()) {\n                handle.release();\n              }\n            }\n          };\n        }\n\n        return '';\n      }\n    }]);\n\n    return InitComponentByLauncher;\n  }(ToMix);\n\n  InitComponentByLauncher.forLazyInit = true;\n  return InitComponentByLauncher;\n}","map":{"version":3,"sources":["/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/src/globals/js/mixins/init-component-by-launcher.js"],"names":["eventMatches","on","ToMix","InitComponentByLauncher","target","document","options","effectiveOptions","Object","assign","create","nodeType","Node","ELEMENT_NODE","DOCUMENT_NODE","TypeError","matches","selectorInit","handles","initEventNames","map","name","event","launcher","attribInitTarget","delegateTarget","elements","ownerDocument","querySelectorAll","getAttribute","length","Error","tagName","preventDefault","component","createdByLauncher","release","handle","pop","forLazyInit"],"mappings":";;;;;;AAAA,OAAOA,YAAP,MAAyB,uBAAzB;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,eAAe,UAASC,KAAT,EAAgB;AAC7B;;;;AAD6B,MAKvBC,uBALuB;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAM3B;;;;;AAMA;;;;;;;;;;;AAZ2B,6BAuBkB;AAAA;;AAAA,YAAjCC,MAAiC,uEAAxBC,QAAwB;AAAA,YAAdC,OAAc,uEAAJ,EAAI;AAC3C,YAAMC,gBAAgB,GAAGC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACE,MAAP,CAAc,KAAKJ,OAAnB,CAAd,EAA2CA,OAA3C,CAAzB;;AACA,YAAI,CAACF,MAAD,IAAYA,MAAM,CAACO,QAAP,KAAoBC,IAAI,CAACC,YAAzB,IAAyCT,MAAM,CAACO,QAAP,KAAoBC,IAAI,CAACE,aAAlF,EAAkG;AAChG,gBAAM,IAAIC,SAAJ,CAAc,uFAAd,CAAN;AACD;;AACD,YAAIX,MAAM,CAACO,QAAP,KAAoBC,IAAI,CAACC,YAAzB,IAAyCT,MAAM,CAACY,OAAP,CAAeT,gBAAgB,CAACU,YAAhC,CAA7C,EAA4F;AAC1F,eAAKP,MAAL,CAAYN,MAAZ,EAAoBE,OAApB;AACD,SAFD,MAEO;AACL,cAAMY,OAAO,GAAGX,gBAAgB,CAACY,cAAjB,CAAgCC,GAAhC,CAAoC,UAAAC,IAAI;AAAA,mBACtDpB,EAAE,CAACG,MAAD,EAASiB,IAAT,EAAe,UAAAC,KAAK,EAAI;AACxB,kBAAMC,QAAQ,GAAGvB,YAAY,CAACsB,KAAD,aAAYf,gBAAgB,CAACiB,gBAA7B,OAA7B;;AAEA,kBAAID,QAAJ,EAAc;AACZD,gBAAAA,KAAK,CAACG,cAAN,GAAuBF,QAAvB,CADY,CACqB;;AACjC,oBAAMG,QAAQ,sBACTH,QAAQ,CAACI,aAAT,CAAuBC,gBAAvB,CAAwCL,QAAQ,CAACM,YAAT,CAAsBtB,gBAAgB,CAACiB,gBAAvC,CAAxC,CADS,CAAd;;AAGA,oBAAIE,QAAQ,CAACI,MAAT,GAAkB,CAAtB,EAAyB;AACvB,wBAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;AACD;;AAED,oBAAIL,QAAQ,CAACI,MAAT,KAAoB,CAAxB,EAA2B;AACzB,sBAAIP,QAAQ,CAACS,OAAT,KAAqB,GAAzB,EAA8B;AAC5BV,oBAAAA,KAAK,CAACW,cAAN;AACD;;AAED,sBAAMC,SAAS,GAAG,KAAI,CAACxB,MAAL,CAAYgB,QAAQ,CAAC,CAAD,CAApB,EAAyBpB,OAAzB,CAAlB;;AACA,sBAAI,OAAO4B,SAAS,CAACC,iBAAjB,KAAuC,UAA3C,EAAuD;AACrDD,oBAAAA,SAAS,CAACC,iBAAV,CAA4Bb,KAA5B;AACD;AACF;AACF;AACF,aAvBC,CADoD;AAAA,WAAxC,CAAhB;AA0BA,iBAAO;AACLc,YAAAA,OADK,qBACK;AACR,mBAAK,IAAIC,MAAM,GAAGnB,OAAO,CAACoB,GAAR,EAAlB,EAAiCD,MAAjC,EAAyCA,MAAM,GAAGnB,OAAO,CAACoB,GAAR,EAAlD,EAAiE;AAC/DD,gBAAAA,MAAM,CAACD,OAAP;AACD;AACF;AALI,WAAP;AAOD;;AACD,eAAO,EAAP;AACD;AAlE0B;;AAAA;AAAA,IAKSlC,KALT;;AAKvBC,EAAAA,uBALuB,CAUpBoC,WAVoB,GAUN,IAVM;AAoE7B,SAAOpC,uBAAP;AACD","sourcesContent":["import eventMatches from '../misc/event-matches';\nimport on from '../misc/on';\n\nexport default function(ToMix) {\n  /**\n   * Mix-in class to instantiate components events on launcher button.\n   * @class InitComponentByLauncher\n   */\n  class InitComponentByLauncher extends ToMix {\n    /**\n     * `true` suggests that this component is lazily initialized upon an action/event, etc.\n     * @type {boolean}\n     */\n    static forLazyInit = true;\n\n    /**\n     * Instantiates this component in the given element.\n     * If the given element indicates that it's an component of this class, instantiates it.\n     * Otherwise, instantiates this component by clicking on launcher buttons\n     * (buttons with attribute that `options.attribInitTarget` points to) of this component in the given node.\n     * @param {Node} target The DOM node to instantiate this component in. Should be a document or an element.\n     * @param {Object} [options] The component options.\n     * @param {string} [options.selectorInit] The CSS selector to find this component.\n     * @param {string} [options.attribInitTarget] The attribute name in the launcher buttons to find target component.\n     * @returns {Handle} The handle to remove the event listener to handle clicking.\n     */\n    static init(target = document, options = {}) {\n      const effectiveOptions = Object.assign(Object.create(this.options), options);\n      if (!target || (target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE)) {\n        throw new TypeError('DOM document or DOM element should be given to search for and initialize this widget.');\n      }\n      if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {\n        this.create(target, options);\n      } else {\n        const handles = effectiveOptions.initEventNames.map(name =>\n          on(target, name, event => {\n            const launcher = eventMatches(event, `[${effectiveOptions.attribInitTarget}]`);\n\n            if (launcher) {\n              event.delegateTarget = launcher; // eslint-disable-line no-param-reassign\n              const elements = [\n                ...launcher.ownerDocument.querySelectorAll(launcher.getAttribute(effectiveOptions.attribInitTarget)),\n              ];\n              if (elements.length > 1) {\n                throw new Error('Target widget must be unique.');\n              }\n\n              if (elements.length === 1) {\n                if (launcher.tagName === 'A') {\n                  event.preventDefault();\n                }\n\n                const component = this.create(elements[0], options);\n                if (typeof component.createdByLauncher === 'function') {\n                  component.createdByLauncher(event);\n                }\n              }\n            }\n          })\n        );\n        return {\n          release() {\n            for (let handle = handles.pop(); handle; handle = handles.pop()) {\n              handle.release();\n            }\n          },\n        };\n      }\n      return '';\n    }\n  }\n  return InitComponentByLauncher;\n}\n"]},"metadata":{},"sourceType":"module"}