{"ast":null,"code":"import _classCallCheck from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport eventedState from './evented-state';\nimport getLaunchingDetails from '../misc/get-launching-details';\n\nfunction eventedShowHideState(ToMix) {\n  /**\n   * Mix-in class to launch a floating menu.\n   * @class EventedShowHideState\n   */\n  var EventedShowHideState =\n  /*#__PURE__*/\n  function (_ToMix) {\n    _inherits(EventedShowHideState, _ToMix);\n\n    function EventedShowHideState() {\n      _classCallCheck(this, EventedShowHideState);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(EventedShowHideState).apply(this, arguments));\n    }\n\n    _createClass(EventedShowHideState, [{\n      key: \"show\",\n\n      /**\n       */\n\n      /**\n       * Switch to 'shown' state.\n       * @param [evtOrElem] The launching event or element.\n       * @param {EventedState~changeStateCallback} [callback] The callback.\n       */\n      value: function show(evtOrElem, callback) {\n        if (!evtOrElem || typeof evtOrElem === 'function') {\n          callback = evtOrElem; // eslint-disable-line no-param-reassign\n        }\n\n        this.changeState('shown', getLaunchingDetails(evtOrElem), callback);\n      }\n      /**\n       * Switch to 'hidden' state.\n       * @param [evtOrElem] The launching event or element.\n       * @param {EventedState~changeStateCallback} [callback] The callback.\n       */\n\n    }, {\n      key: \"hide\",\n      value: function hide(evtOrElem, callback) {\n        if (!evtOrElem || typeof evtOrElem === 'function') {\n          callback = evtOrElem; // eslint-disable-line no-param-reassign\n        }\n\n        this.changeState('hidden', getLaunchingDetails(evtOrElem), callback);\n      }\n    }]);\n\n    return EventedShowHideState;\n  }(ToMix);\n\n  return EventedShowHideState;\n}\n\nvar exports = [eventedState, eventedShowHideState];\nexport default exports;","map":{"version":3,"sources":["/Users/tatianamoreira/Documents/testTech/react/carbon-design-react-test/src/globals/js/mixins/evented-show-hide-state.js"],"names":["eventedState","getLaunchingDetails","eventedShowHideState","ToMix","EventedShowHideState","evtOrElem","callback","changeState","exports"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,iBAAzB;AACA,OAAOC,mBAAP,MAAgC,+BAAhC;;AAEA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AACnC;;;;AADmC,MAK7BC,oBAL6B;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAMjC;;;AAEA;;;;;AARiC,2BAa5BC,SAb4B,EAajBC,QAbiB,EAaP;AACxB,YAAI,CAACD,SAAD,IAAc,OAAOA,SAAP,KAAqB,UAAvC,EAAmD;AACjDC,UAAAA,QAAQ,GAAGD,SAAX,CADiD,CAC3B;AACvB;;AACD,aAAKE,WAAL,CAAiB,OAAjB,EAA0BN,mBAAmB,CAACI,SAAD,CAA7C,EAA0DC,QAA1D;AACD;AAED;;;;;;AApBiC;AAAA;AAAA,2BAyB5BD,SAzB4B,EAyBjBC,QAzBiB,EAyBP;AACxB,YAAI,CAACD,SAAD,IAAc,OAAOA,SAAP,KAAqB,UAAvC,EAAmD;AACjDC,UAAAA,QAAQ,GAAGD,SAAX,CADiD,CAC3B;AACvB;;AACD,aAAKE,WAAL,CAAiB,QAAjB,EAA2BN,mBAAmB,CAACI,SAAD,CAA9C,EAA2DC,QAA3D;AACD;AA9BgC;;AAAA;AAAA,IAKAH,KALA;;AAgCnC,SAAOC,oBAAP;AACD;;AAED,IAAMI,OAAO,GAAG,CAACR,YAAD,EAAeE,oBAAf,CAAhB;AACA,eAAeM,OAAf","sourcesContent":["import eventedState from './evented-state';\nimport getLaunchingDetails from '../misc/get-launching-details';\n\nfunction eventedShowHideState(ToMix) {\n  /**\n   * Mix-in class to launch a floating menu.\n   * @class EventedShowHideState\n   */\n  class EventedShowHideState extends ToMix {\n    /**\n     */\n    /**\n     * Switch to 'shown' state.\n     * @param [evtOrElem] The launching event or element.\n     * @param {EventedState~changeStateCallback} [callback] The callback.\n     */\n    show(evtOrElem, callback) {\n      if (!evtOrElem || typeof evtOrElem === 'function') {\n        callback = evtOrElem; // eslint-disable-line no-param-reassign\n      }\n      this.changeState('shown', getLaunchingDetails(evtOrElem), callback);\n    }\n\n    /**\n     * Switch to 'hidden' state.\n     * @param [evtOrElem] The launching event or element.\n     * @param {EventedState~changeStateCallback} [callback] The callback.\n     */\n    hide(evtOrElem, callback) {\n      if (!evtOrElem || typeof evtOrElem === 'function') {\n        callback = evtOrElem; // eslint-disable-line no-param-reassign\n      }\n      this.changeState('hidden', getLaunchingDetails(evtOrElem), callback);\n    }\n  }\n  return EventedShowHideState;\n}\n\nconst exports = [eventedState, eventedShowHideState];\nexport default exports;\n"]},"metadata":{},"sourceType":"module"}